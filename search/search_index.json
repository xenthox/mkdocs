{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Stratos Network</p> <p>- The Next Generation of \u200d\u200dDecentralized Data Mesh -</p> <p></p> <p>SDS &amp; Stratos-chainOfficial Documentation</p> <p></p>"},{"location":"#quick-start","title":"Quick Start","text":"Description Link About Stratos and Whitepaper Link Stratos token (STOS) Metrics Link Stratos token (STOS) Economy Link Changes in Tropos-5 incentive testnet Link Rewards distribution in Tropos-5 incentive testnet Link Migrate rewards from previous testnet versions to Tropos-5 Link HOWTO: Setup a Full-Chain node Link HOWTO: Become a Validator Link HOWTO: Setup a SDS Resource node Link Full-Chain (Validator) node commands part 1 Link Full-Chain (Validator) node commands part 2 Link SDS Resource node commands Link"},{"location":"#contribution","title":"Contribution","text":"<p>Thank you for considering to help out with the source code! We welcome contributions from anyone on the internet, and are grateful for even the smallest of fixes! <p>If you'd like to contribute to SDS(Stratos Decentralized Storage), please fork, fix, commit and send a pull request for the maintainers to review and merge into the main code base.</p> <p>Please make sure your contributions adhere to our coding guidelines:</p> <ul> <li>Code must adhere to the official Go formatting   guidelines (i.e. uses gofmt).</li> <li>Code must be documented adhering to the official Go commentary   guidelines.</li> <li>Pull requests need to be based on and opened against the <code>dev</code> branch, PR name should follow <code>conventional commits</code>.</li> <li>Commit messages should be prefixed with the package(s) they modify. e.g. \"pp: make trace configs optional\"</li> </ul> <p> </p>"},{"location":"#license","title":"License","text":"<p>Copyright 2023 Stratos <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License.</p> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p> <p></p>"},{"location":"docs-about/about-stratos/","title":"About Stratos Project and Whitepaper","text":""},{"location":"docs-about/about-stratos/#the-meaning-of-stratos","title":"The Meaning of \u2018Stratos\u2019","text":"<p>The name Stratos comes from the word \u2018stratosphere\u2019. The stratosphere is an important layer of the earth\u2019s atmosphere. The bottom of the stratosphere is 10 km above the ground, 8 km at the poles, and its upper boundary is about 50 km above the ground. The air in the stratosphere mainly flows in the horizontal direction, while the flow of air in the vertical direction is weak, so the layers of air are stable and there is almost no vertical convection.</p> <p>Stratos is the infrastructure for decentralized services. If I can compare the earth to the blockchain ecosystem, then Stratos is the stratosphere surrounding the blockchain environment, providing blockchain applications with decentralized storage, decentralized databases, and decentralized computing services.</p>"},{"location":"docs-about/about-stratos/#the-significance-of-decentralization","title":"The Significance of Decentralization","text":"<p>Compared with centralization, the two most important differences of decentralization are Equal Rights and Data Ownership. Let me explain what I mean by that. In a decentralized system, all participants have equal rights, and all data belongs to the data creator, not to the owner of the system. For example, although the customer services, information search, online storage, and email services of the centralized system provided by Google are free, the real cost is your personal data. Google will use your personal data to gain commercial benefits.</p> <p>The blockchain is decentralized by providing equal rights and data ownership. Each node participating in the blockchain has equal rights, although some nodes with stronger computing power or nodes participating in staking have a greater chance of generating the block. The ledger data of the blockchain is public, but unlike a centralized network, the verification right for the key data only belongs to the owner of the private key which cannot be taken by anyone.</p> <p>This can be approached from another perspective as well, by asking the question: Is decentralization the same as blockchain? Here I would like to describe the two terms in a more technical manner. Blockchain is a network where multiple nodes participate asynchronously through a consensus mechanism. The data on multiple nodes is forced to be synchronized within a fixed time interval and reach consensus. Blockchain is a successful use case of a decentralized system and implementation, but it is definitely not the only solution. Some decentralized projects add blockchain into their system design for different business needs which don\u2019t require blockchain, and thus these projects set themselves up to fail.</p> <p>\u201cStratos decentralized infrastructure will greatly shorten the arrival time of the new Era of Decentralization. Stratos\u2019s objective is to be like Bitcoin in 2010 which created a blockchain empire, or like Ethereum smart contracts in 2015 which enriched the prosperity of the blockchain system. Stratos will become the most solid cornerstone of the Era of Decentralization, supporting the decentralized service infrastructure, and contributing to the blockchain industry. Providing the decentralized system with air, water, and sunlight, we develop the entire ecosystem in the stratosphere, making it more stable, more prosperous, and more sustainable.\u201d</p> <p>The blockchain system design has been verified since Bitcoin appeared decades ago. The different implementations of different public chains have proven that the blockchain is an excellent system for providing public ledgers and smart contract services on top of the ledgers. But besides that, the design of blockchain is not suitable for all projects that aim to provide decentralized services.</p> <p>Therefore, blockchain is only one of the application subsets of decentralization. As the provider of the infrastructure for decentralized services, Stratos uses different decentralized components rather than only using the blockchain. Stratos is the infrastructure of the blockchain industry, and provides the full spectrum of services for the entire blockchain industry, rather than just attaching to a public chain, let alone being solely an add-on product of a public chain ecosystem.</p> <p>Since the birth of the blockchain industry in 2010, the sector has been looking for a breakthrough in serving traditional industries. But since blockchain can only provide public ledger services, it hasn\u2019t been making a lot of progress for the industries that don\u2019t need ledger based services. At the same time, due to the unprecedented development of the token economy in the blockchain industry, most of the projects are mainly built around tokens. This has led to even more misconceptions for people outside the blockchain industry. Many people outside the blockchain industry believe that the blockchain and decentralized systems have no practical value due to lack of widely used applications in traditional industries. The real situation is that decentralized systems cannot be used in traditional industries not because the traditional industries do not need decentralized services, but that current decentralized services fail to meet the needs of traditional industries.</p> <p>The infrastructure of Stratos decentralized services, whether from design or development, is not only for the blockchain industry but also for better serving centralized traditional industries. Stratos will eventually commercialize the provision of decentralized services, providing decentralized systems with more efficient, secure, and stable infrastructure and services for centralized traditional businesses.</p>"},{"location":"docs-about/about-stratos/#stratos-past-and-present","title":"Stratos Past And Present","text":"<p>The Stratos team is a group of top-notch developers. The team members come from Canadian National Railways, Amazon, Expedia, Alibaba, and many other well-known companies. Everyone has world-class enterprise-level development experience.</p> <p>One-third of the team members are from Mindgeek, a top 10 Internet company with the largest traffic volumes. During the 7 years of working at Mindgeek, as the founder of the Cloud team, I designed and developed the data platform from scratch to process millions of records of data per second and hundreds of billions of records per day. The data platform provides various data services for more than 100 million users worldwide every day. This valuable design and development experience of creating a global data network represents Stratos\u2019s history, allowing Stratos to have the genes to achieve large-scale commercial applications from the very beginning of its creation.</p> <p>Thanks to the great amount of practical experience and the basis of Google GFS and Hadoop HDFS architecture, the team expands the distributed storage to decentralized storage solutions. Stratos decentralized storage is born with the high-performance storage module.</p>"},{"location":"docs-about/about-stratos/#stratos-is-composed-of-4-modules-and-3-layers","title":"Stratos is composed of 4 modules and 3 layers.","text":"<p>This can sound a bit technical, but bear with me. The 4 modules Stratos services are composed of include blockchain, decentralized storage, decentralized databases, and decentralized computing. Just as the earth needs air, water, soil, and sunlight, each of these four elements is indispensable to the provision of the necessary conditions for the growth of everything. Different combinations of these four modules will also provide various decentralized services for the blockchain industry and traditional industries.</p> <p>The three layers are the value layer, the resource layer, and the meta service layer. Each layer corresponds to a different consensus mechanism. The value layer uses Proof-of-Stake (PoS) consensus, the resource layer uses Proof-of-Traffic (PoT) consensus, and the meta service layer uses Proof-of-Authority (PoA) consensus.</p> <p>The design of three layers and three consensuses smartly solves the impossible triangle problem of decentralization to the greatest extent possible.</p> <ol> <li> <p>PoA is the closest consensus algorithm to centralization, ensuring that the meta service layer remains efficient when decentralized</p> </li> <li> <p>PoS is to make sure the value layer is secure and robust</p> </li> <li> <p>PoT is a completely decentralized consensus algorithm, which ensures that the resource layer can expand indefinitely, allowing more resources to join the Stratos network</p> </li> </ol> <p>The three layers are also three types of nodes. Miners can choose to join the Stratos network based on their varying hardware specifications and requirements.</p> <p>The four modules of Stratos are composed of three layers, combining different consensus mechanisms to form Stratos\u2019s internal solid triangle, which can provide customers with stable, reliable, and efficient decentralized services.</p>"},{"location":"docs-about/about-stratos/#whitepaper","title":"Whitepaper","text":"<p>You can find all the technical details in the Stratos Whitepaper.</p> <p></p> <p></p>"},{"location":"docs-about/stratos-token-economy/","title":"STOS Token Economy","text":""},{"location":"docs-about/stratos-token-economy/#abstract","title":"Abstract","text":"<p>Stratos, as the next generation of Decentralized Data Mesh, heavily rely on community participation to maintain self-sustainability. We propose here a Troposphere Economy Model which revolves around: 1) Resource/Meta Node miners, 2) End users, 3) Blockchain participants to achieve its business value.</p> <p>All aspects are maintained through the use of Stratos Tokens (STOS). The former corresponds to the supply side and provides storage, database, and computing resources to receive incentives. The middle corresponds to the demand side, which consumes the related services, and pays fees to the Stratos network. The latter corresponds to the ledger layer who distributes the incentives based on the workload of the resource miners, facilitates transfer, etc. We tune the relationship between different stakeholders with three consensus protocols, including Proof-of-Traffic, Proof-of-Stake and Proof-of-Authority, to incentivize the stable growth of the ecosystem.</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#terminology","title":"Terminology","text":"<ul> <li> <p>Stratos Chain (SC): The Stratos blockchain facilitates all decentralized ledger transactions and functionalities.</p> </li> <li> <p>Validator node: A validator is a node that participates in the Stratos Chain block generation by voting. To become a validator, the node owner needs to self-delegate a certain amount of STOS tokens.</p> </li> <li> <p>Blockchain node: All nodes that participate in the Stratos Chain.</p> </li> <li> <p>Follower node: A node that participates in the Stratos Chain as a blockchain node, but does not work as a validator.</p> </li> <li> <p>Stratos Decentralized Storage (SDS): A file based decentralized storage system.</p> </li> <li> <p>Stratos Decentralized Database (SDD): A tree based decentralized database system.</p> </li> <li> <p>Stratos Decentralized Computation (SDC): A Trusted Execution Environment based decentralized computation system.</p> </li> <li> <p>Value Network: The Stratos Chain, the network that circulates all values in the Stratos Ecosystem. Resource Network: Includes Decentralized Storage, Decentralized Database and Decentralized Computation</p> </li> <li> <p>Resource Node: Nodes that participate in the Stratos Resource Network by providing their disk/bandwidth/computation power to earn rewards in the Proof-of-Traffic model.</p> </li> <li> <p>Meta Node: Nodes that manage the tasks in the Resource Network between all Resource Nodes. Used for indexing all content, auditing the traffic report and communicating between Resource Network and Value Network through a relay mechanism.</p> </li> <li> <p>Active Resource Node: A Resource Node that has finished the activation process by depositing to the Value Network and registering to a Meta Node, and currently receives tasks assigned by the Meta Node.</p> </li> <li> <p>Suspended Resource Node: A Resource Node that has not satisfied the performance KPI evaluation criteria and is suspended from receiving further tasks from the Meta Node.</p> </li> <li> <p>Gas: Stratos Chain transactions consume gas to be committed in blocks. The gas is used to avoid transaction spamming.</p> </li> <li> <p>Traffic: The data volume evaluated in the Resource Network. The incentive for all participants in the Stratos Ecosystem will be based on the traffic.</p> </li> <li> <p>Stratos Tokens (STOS): Stratos Tokens, the native token facilitating value circulation in the Stratos Ecosystem.</p> </li> <li> <p>Ozone(Oz): The traffic unit in the ecosystem.</p> </li> <li> <p>Epoch: The Proof-of-Traffic evaluation periodic window. The traffic for the Resource Network is evaluated at the end of each epoch.</p> </li> <li> <p>Volume Pool: The collective pool of all prepay.</p> </li> <li> <p>Mining Pool: The reserved STOS to incentivize the public to participate in the network in the early stage.</p> </li> </ul> <p></p>"},{"location":"docs-about/stratos-token-economy/#1-system-economic-income","title":"1. System Economic Income","text":"<p>After launching the Stratos Data Mesh V1 (Storage), V2 (database), and V3 (computation), each module will generate corresponding economic income. The whole Stratos economy is based on a Proof-of-Traffic model that evaluates the traffic generated by users' actions. Settlement and payment of the traffic is conducted in the form of Stratos Tokens through the Stratos Blockchain. The traffic price changes dynamically based on a constant product formula.</p>"},{"location":"docs-about/stratos-token-economy/#-purchased-ozone","title":"- Purchased Ozone","text":"<p>If any user wants to use the Stratos Resource Network, he needs to prepay on the Stratos blockchain by sending a PREPAY transaction. The PREPAY transaction will let this user buy the traffic(Ozone) at a marginal price at the time \\(\\mathbf{t}\\) computed by dividing the sum of the initial genesis deposit and the current unissued prepay volume pool by the remaining total Ozone limit.</p> \\[ \\operatorname{price}_{t}^{o z}=\\frac{s+p_{t}}{l_{t}} \\] <p>The remaining total Ozone limit \\(l_{t}\\) is the upper bound of the total Ozone that users can purchase from the Stratos blockchain.</p> <p>\\(S\\) is the initial genesis deposit by all Resource Nodes and Meta Nodes at \\(\\mathrm{t}=0, l_{0}\\) is set to an amount based on the initial genesis deposit to reflect the STOS market price and the total SDS resources at the mainnet launch time.</p> <p>The current unissued prepay Volume Pool \\(p_{t}\\) is the total remaining prepay STOS kept by the Stratos Network but not yet issued to Resource Nodes as rewards. At time \\(\\mathrm{t}=0, p_{t}=0\\)</p> <p>If one user PREPAYS a total amount of \\(x\\) STOS token at time \\(t\\), then he will get the following Ozone amount if there is no slippage:</p> \\[ d l_{t}=\\frac{d x}{\\text { price }_{t}^{o z}}=\\frac{l_{t}}{s+p_{t}} \\times d x \\] <p>Where \\(d x\\) is the derived \\(x\\) that is small enough to not make the price change. Because the constant product formula guarantees that the product of available STOS and Ozone is constant.</p> \\[ \\text { constant }=\\left(s+p_{t}\\right) \\times\\left(l_{t}\\right)=\\left(s+p_{t+d t}\\right) \\times\\left(l_{t+d t}\\right) \\] <p>Where \\(p_{t+d t}=p_{t}+X\\), so we can calculate the total amount of Ozone the user gets as:</p> \\[ \\Delta l=l_{t}-l_{t+d t}=\\frac{l_{t} \\times X}{s+p_{t}+X} \\] <p>And the new price of Ozone will become:</p> \\[ \\operatorname{price}_{t+d t}^{o z}=\\frac{s+p_{t}+X}{l_{t}-\\Delta l} \\]"},{"location":"docs-about/stratos-token-economy/#-consumed-ozone-converted-to-traffic-rewards","title":"- Consumed Ozone converted to Traffic Rewards","text":"<p>Users can utilize all services provided by the Resource Network by consuming Ozone. At the end of each epoch the total amount of consumed Ozone will be sold back to the Volume Pool to generate the traffic rewards to issue to all Resource Nodes:</p> \\[ \\operatorname{price}_{t}^{o z}=\\frac{s+p_{t}}{l_{t}} \\] <p>If the total consumed Ozone in an epoch is \\(Y\\), it will generate traffic rewards as: </p> \\[ d R=d y \\times \\frac{s+p_{t}}{l_{t}} \\] <p>Where \\(d y\\) is the derived \\(Y\\) that is small enough to not make the price change. Since the constant product formula guarantees:</p> \\[ \\text { constant }=\\left(s+p_{t}\\right) \\times\\left(l_{t}\\right)=\\left(s+p_{t+d t}\\right) \\times\\left(l_{t+d t}\\right) \\] <p>We can calculate the total generated traffic rewards based on the total consumed Ozone \\(Y\\) as:</p> \\[ R=p_{t}-p_{t+d t}=\\frac{\\left(s+p_{t}\\right) \\times Y}{l_{t}+Y} \\] <p>Thus at the end of epoch timet \\(+d t\\), the Ozone price will become:</p> \\[ \\operatorname{price}_{t+d t}^{o z}=\\frac{s+p_{t}-R}{l_{t}+Y} \\] <p>As people keep buying Ozone without consuming it, the price of Ozone will keep increasing compared to STOS.</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#2-income-and-mining-incentive-distribution","title":"2. Income and Mining incentive distribution","text":"<p>The traffic reward \\(R\\) is distributed to </p> <p>1) Resource Node miners(60%) </p> <p>2) Meta Node miners(20%) </p> <p>3) Blockchain participants(20%). </p> <p>The detailed distribution plan is described in section 3, 4 and 5.</p> <p>The Stratos Foundation has reserved 40% of the 100M total STOS supply as a mining rewards pool. The mining rewards are issued at the end of each epoch, with the same schedule as traffic rewards. The mining reward for each epoch will be 80 STOS, until the total issued amount reaches 16819200 STOS which will be achieved in roughly 4 years. Then the mining rewards will be halved, which makes the mining rewards become 40 STOS. Once the mining rewards are halved, the Meta Node share will be decreased by 2%, and this 2% will be added to Resource Node miners. The halving continues roughly every 4 years, for 5 times. Then the mining rewards will be 2.5 STOS until full issuance of 39M STOS. The full mining rewards pool will last roughly 68.8 years. We will allocate the rest 1M STOS for incentive testnet.</p> Total Mined Mining reward (per epoch) Years Resource/Meta Node/Blockchain Percentage 0 - 16,819,200 80 0-4 60% / 20% / 20% 16,819,200 - 25,228,800 40 4-8 62% / 18% / 20% 25,228,800 - 29,433,600 20 8-12 64% / 16% / 20% 29,433,600 - 31,536,000 10 12-16 66% / 14% / 20% 31,536,000 - 32,587,200 5 16-20 68% / 12% / 20% 32,587,200 - 39,000,000 2.5 20-68.8 70% / 10% / 20% <p>All traffic rewards and mining rewards will have a lock-up period of 14 days. An Active Resource Node needs to send a transaction to unregister from the Stratos blockchain when it wants to exit, and it can only shutdown after the 14-day cooling-off period. If the requirements are not met, the locked reward will be fully canceled and returned back to the pool.</p> <p>All the Transaction gas fees that are collected in the blockchain will only be distributed to blockchain participants, based on validator nodes self-delegation and delegators delegation. It will not be given to Resource Nodes and Meta Nodes.</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#3-proof-of-traffic-mechanism","title":"3. Proof-of-Traffic Mechanism","text":"<p>Based on the traffic(Ozone) consumed by the whole network, Stratos will issue traffic rewards and mining rewards to participants. In this section, we only talk about the 60% share given to Resource Nodes(the percentage increases as the mining rewards keep halving).</p> <p>1 Ozone can be considered as: 1GB1 data traffic in SDS or 1 million record touches1 in SDD. </p>"},{"location":"docs-about/stratos-token-economy/#-user-charges","title":"- User charges","text":"<p>All charged user traffic will be deducted from user's available Ozone balance.</p> <ul> <li>Upload:</li> </ul> <p>Uploading data will consume two parts of traffic, the initial uploading and the replication. The SDS is set to replicate 3 copies by default, which means that by uploading a file of 10MB to SDS, the user will consume 30MB of traffic. Users can configure a higher initial replica number, which will increase the number of replicas while uploading, thus consuming more traffic.</p> <ul> <li>Download:</li> </ul> <p>Downloading data will consume the total traffic actually generated by this action. If higher download requests for one copy of data triggers the automatic replicas incrementing, users will not be charged for that traffic, but only for the traffic for the final delivery.</p> <ul> <li>Database Query:</li> </ul> <p>Database Queries will consume two parts of traffic, the final delivery and the record touches.</p> <ul> <li>Computation:</li> </ul> <p>Computation is very complicated, it deserves a standalone paper to cover the calculation.</p>"},{"location":"docs-about/stratos-token-economy/#-resource-node-traffic-record","title":"- Resource Node traffic record","text":"<p>When a user triggers an action of UPLOAD/DOWNLOAD/QUERY/etc, the Meta Node will randomly assign the task to one/multiple Resource Node(s) which has enough resources(data, storage, and bandwidth) to facilitate this action. The assignment chance for each node is based on their weight maintained by Meta Node. The weight is adjusted by Meta Node based on the performance for the tasks fulfilled by the node. The initial weight for each node is determined by node's initial deposit which is discussed in section 4.</p> <p>Once a Resource Node has completed the task, the traffic generated by this task is recorded as traffic contribution for this Resource Node.</p>"},{"location":"docs-about/stratos-token-economy/#-resource-node-settlement","title":"- Resource Node settlement","text":"<p>At the end of every 10 minutes epoch, Meta Nodes settle the traffic with Resource Nodes. The Resource Nodes that provide the top 80% of total traffic will be eligible to settle to get the traffic and mining rewards. Their traffic contribution will be set back to zero once settled. The unsettled traffic will accumulate to the next epoch.</p> <p>Let's take SDS as an example during the first 4 years. Suppose that during one epoch, there are 5 Resource Node miners in the SDS network, respectively providing 500GB, 300GB, 200GB, 80GB, 20GB of traffic contribution. That's equivalent to 1100oz, but only the top 3 nodes will be eligible to get settled because \\(80 \\% * 1100=880\\). Thus 1000 oz is settled in the epoch. The total traffic and mining rewards of this epoch is:</p> \\[ R=1000 \\times \\frac{s+p_{t}}{l_{t}+1000}+80 \\] <p>It's safe to assume that \\(\\frac{s+p_{t}}{l_{t}+1000}=1 / 50\\) which makes the total rewards 100STOS. 60%(60 STOS) will be issued to the Resource Nodes that have been settled. The top 3 nodes will get 30STOS, 18STOS and 12STOS respectively.</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#4-proof-of-authority-mechanism","title":"4. Proof-of-Authority Mechanism","text":""},{"location":"docs-about/stratos-token-economy/#-meta-node-registration","title":"- Meta Node Registration","text":"<p>Stratos Foundation will verify the Meta Node operator and then there will be a vote by all existing Meta Nodes. The verification includes but is not limited to: Meta Node machine specs, internet specs, server location, security and operation management. Meta Nodes that pass this verification will need to deposit a certain amount of STOS with a registration transaction on the Stratos Blockchain. All existing Meta Nodes will need to vote to approve the registration of the new node.</p>"},{"location":"docs-about/stratos-token-economy/#-resource-node-activation","title":"- Resource Node Activation","text":"<p>Anyone can launch a Resource Node, however it will not receive any tasks from Meta Nodes until it completes the activation process. Resource Node owners need to deposit a certain amount of STOS tokens by sending an activation transaction to the Stratos Blockchain. Once this is done, the Meta Nodes will start to treat it as an active Resource Node. All the deposit STOS will be locked for at least 180 days.</p>"},{"location":"docs-about/stratos-token-economy/#-deposit-increase-total-ozone-limit","title":"- Deposit increase total Ozone limit","text":"<p>Once a new Meta Node or Resource Node deposits Z STOS for registration/activation, the remaining total Ozone limit will be increased by an amount calculated by:</p> \\[ \\Delta l_{t}=\\frac{l_{t}}{s} \\times Z \\] <p>The new Ozone price will become:</p> \\[ \\operatorname{price}_{t+d t}^{o z}=\\frac{s+p_{t}}{l_{t}+\\Delta l_{t}} \\] <p>As more Resource Nodes are added to the network, the Ozone price will decrease compared to the STOS price.</p> <p>The increased Ozone limit \\(\\Delta l_{t}\\) for a Resource Node deposit will be evaluated by the Meta Nodes as the initial Resource Node weight in task assignment. This weight will be affected later based on the Resource Node performance. We can consider that the deposit is the self claimed machine power of the Resource Node. So the owner should consider depositing more STOS if he owns a more powerful Resource Node machine. The \\(\\Delta l\\) to weight calculation equation can only be determined by incentive testnet testing results.</p>"},{"location":"docs-about/stratos-token-economy/#-resource-node-deactivation","title":"- Resource Node Deactivation","text":"<p>If a Resource Node follows the process of deactivation by sending a unregister transaction to stratos blockchain, the remaining total Ozone limit will be decreased by an amount calculated by:</p> \\[ \\Delta l_{t}=\\frac{l_{t}}{s} \\times Z \\] <p>Where \\(Z\\) is the initial deposit of this Resource Node before any slashing/fee is applied. Once a Resource Node has deactivated, the Ozone price will increase.</p> <p>The Resource Node can get his deposit STOS back 14 days after deactivation if the locked 180 days period has passed or 14 + remaining days from the 180 days lock period.</p> <p>Example: if a Resource Node deposits 1000 STOS to activate on day 1 of the year, and deactivate on day 150 of the year, he can only get his deposit back on day 194 of the year. Or if the node deactivates on day 190 of the year, he can only get his deposit back on day 204 of the year.</p> <p>The Resource Node will also cover the data replica migration traffic fees with his unvested reward and deposit, since the whole network will consume resources to properly backup the data held by the quitting resource node. The traffic is charged the same way as user upload/download.</p>"},{"location":"docs-about/stratos-token-economy/#-meta-node-incentive","title":"- Meta Node Incentive","text":"<p>Meta Nodes will participate in all data indexing, task distribution and settlement of traffic with Resource Nodes. All Meta Nodes will equally share 20% of the total traffic rewards and mining rewards for each epoch. Given the example in section 3, all Meta Nodes would share the 20 STOS tokens.</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#5-proof-of-stake-mechanism","title":"5. Proof-of-Stake Mechanism","text":"<p>Stratos extended the Delegated Proof-of-Stake into Hybrid Delegated Proof-of-Stake. 20% of the total traffic and mining rewards will be allocated as stake rewards to the Proof-of-Stake beneficiaries, which include:</p> <p>1) Validators self-delegate and Delegators delegate</p> <p>2) Resource Nodes and Meta Nodes deposits</p> <p>The whole stake rewards will be split between 1) and 2) based on the total amount of delegation and deposit.</p> <p>The share of stake rewards for Resource Node and Meta Node will be distributed purely based on their deposit.</p> <p>The share of stake rewards for Validators and Delegators will be distributed based on their delegation with a configured commission for validators. The transaction gas fees mentioned in section 2 will also follow the same distribution mechanism.</p> <p>Let us take an example where we have 10 validators with equal voting power and a commission rate of \\(1 \\%\\). Let us also assume that the gas fee reward for a block or the stake rewards of an epoch is 1000 STOS in total for 10 validators and that each validator has 20% of self-delegated STOS. These tokens do not go directly to the block proposer. Instead, they are evenly spread among validators. So now each validator's pool has 100 STOS. These 100 STOS will be distributed according to each participant's stake, for each validator:</p> <p>Commission: 100 * 80% * 1% = 0.8 STOS</p> <p>Validator get: 100 * 20% + Commission = 20.8 STOS</p> <p>All delegators get: 100 * 80% - Commission = 79.2 STOS</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#6-summary","title":"6. Summary","text":"<p>We have achieved several key features:</p> <ol> <li> <p>As more people prepay to utilize the services provided by the Resource Network, Ozone price will increase which reflects the increasing demand.</p> </li> <li> <p>As more people become Resource Nodes, the Ozone limit will increase which reflects the increasing supply, and Ozone price will decrease because of that.</p> </li> <li> <p>Ozone is the measurement of all activities in the Resource Network.</p> </li> <li> <p>STOS is the value circulating in the Stratos Ecosystem.</p> </li> </ol> <p>With all the aspects above, the Stratos Ecosystem guarantees a stable and healthy growth.</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#disclaimer","title":"Disclaimer","text":"<p>This paper is for general information purposes only. It does not constitute investment advice or a recommendation or solicitation to buy or sell any investment and should not be used in the evaluation of the merits of making any investment decision. It should not be relied upon for accounting, legal or tax advice or investment recommendations. This paper reflects current opinions of the authors. The opinions reflected herein are subject to change without being updated.</p> <ol> <li> <p>Subject to be changed before mainnet.\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"docs-about/stratos-token-metrics/","title":"STOS Token Metrics","text":""},{"location":"docs-about/stratos-token-metrics/#stos-token-utilities","title":"STOS token utilities","text":"<ul> <li>STOS will be staked/delegated to validators to secure the Blockchain network.</li> <li>STOS will be issued as Proof-of-Traffic mining reward.</li> <li>STOS will be consumed in the payment of the transaction fee.</li> <li>STOS will be prepaid for Stratos Resource Network service traffic fee.</li> </ul>"},{"location":"docs-about/stratos-token-metrics/#at-a-glance","title":"At a Glance","text":"<p>Token Ticker: STOS</p> <p>Total Supply: 100,000,000</p> <p>Initial Liquid Tokens: 8,125,000</p> <p>Initial Market Price: 0.3 USD</p>"},{"location":"docs-about/stratos-token-metrics/#token-allocation-by-percent","title":"Token Allocation by Percent","text":"<p>Our total strategic sale (consisting of 1 seed and 2 private sale rounds) is 20% of all our tokens. The initial sale will be used for our technology development, community building, partnerships, and marketing to build out Stratos Decentralized Data Mesh.</p>"},{"location":"docs-about/stratos-token-metrics/#token-unlock-and-vesting-schedule","title":"Token Unlock and Vesting Schedule","text":"<p>Seed: 25% unlocked at TGE1. Quarterly vesting over 9 months.</p> <p>Private Sale 1: 25% unlocked at TGE1. Quarterly vesting over 9 months.</p> <p>Private Sale 2: 30% unlocked at TGE1, Quarterly vesting over 9 months.</p> <p>Public: 100% unlocked at TGE1.</p> <p>Team: 10% unlocked at day 270. Quarterly vesting over 12 months.</p> <p>Ecosystem Development &amp; Partnerships: 10% unlocked at TGE1. Remaining utilized when partnerships are established.</p> <p>Liquidity Provision Fund: 30% unlocked at TGE1. Remaining utilized for new exchange listing relationships.</p> <p>Foundation Reserve: 10% unlocked at day 360. Remaining quarterly vesting over 12 months.</p> <ol> <li> <p>Token Generation Event was on June 09, 2021\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> </ol>"},{"location":"docs-resource-node/ppd-terminal-subcommands/","title":"SDS ppd terminal subcommands","text":"<p><code>ppd terminal</code> subcommands are used to operate PP(resource) node in <code>ppd terminal</code> command-line terminal</p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#help","title":"<code>help</code>","text":"<p>Show all the <code>ppd terminal</code> sub-commands' description.</p> <pre><code>&gt;help\nhelp                                                           show all the commands\nwallets                                                        acquire all wallet wallets address\nnewwallet                                                      create new wallet, input password in prompt\nregisterpeer                                                   register peer to index node\nrp                                                             register peer to index node\nactivate &lt;amount&gt; &lt;fee&gt; optional&lt;gas&gt;                          send transaction to stchain to become an active PP node\nupdateStake &lt;stakeDelta&gt; &lt;fee&gt; optional&lt;gas&gt; &lt;isIncrStake&gt;     send transaction to stchain to update active pp's stake\ndeactivate &lt;fee&gt; optional&lt;gas&gt;                                 send transaction to stchain to stop being an active PP node\nstartmining                                                    start mining\nprepay &lt;amount&gt; &lt;fee&gt; optional&lt;gas&gt;                            prepay stos to get ozone\nput &lt;filepath&gt;                                                 upload file, need to consume ozone\nputstream &lt;filepath&gt;                                           upload video file for streaming, need to consume ozone (alpha version, encode format config impossible)\nlist &lt;filename&gt;                                                query uploaded file by self\nlist &lt;page id&gt;                                                 query all files owned by the wallet, paginated\ndelete &lt;filehash&gt;                                              delete file\nget &lt;sdm://account/filehash&gt; &lt;saveAs&gt;                          download file, need to consume ozone\ne.g:\u00a0get sdm://st1jn9skjsnxv26mekd8eu8a8aquh34v0m4mwgahg/e2ba7fd2390aad9213f2c60854e2b7728c6217309fcc421de5aacc7d4019a4fe\nsharefile &lt;filehash&gt; &lt;duration&gt; &lt;is_private&gt;                   share an uploaded file\nallshare                                                       list all shared files\ngetsharefile &lt;sharelink&gt; &lt;password&gt;                            download a shared file, need to consume ozone\ncancelshare &lt;shareID&gt;                                          cancel a shared file\nver                                                            version\nmonitor                                                        show monitor\nstopmonitor                                                    stop monitor\nmonitortoken                                                   show token for pp monitor service\nconfig  &lt;key&gt; &lt;value&gt;                                          set config key value\ngetoz &lt;walletAddress&gt; -&gt;password                               get current ozone balance\nstatus                                                         get current resource node status\nmaintenance start &lt;duration&gt;                                   put the node in maintenance mode for the requested duration (in seconds)\nmaintenance stop                                               stop the current maintenance\ndowngradeinfo                                                  get information of last downgrade happened on this pp node\nperformancemeasure                                             turn on performance measurement log for 60 seconds\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#rp-or-registerpeer","title":"<code>rp</code> or <code>registerpeer</code>","text":"<p>Register a Resource Node to an SP(meta) node.</p> <p>Example:</p> <pre><code>&gt;rp\n&gt;[INFO] 2023/01/11 19:10:45 register_new_pp.go:25: get RspRegisterNewPP\n[INFO] 2023/01/11 19:10:45 register_new_pp.go:31: get RspRegisterNewPP RES_SUCCESS [INFO] 2023/01/11 19:10:45 register_new_pp.go:40: registered as PP successfully, you can deposit by `activate`\n</code></pre> <p>Tip</p> <p>After receiving the response <code>registered as PP successfully, you can deposit by activate</code>, you can execute the next <code>activate</code> command to activate your resource node.</p> <p><code>rp</code> or <code>registerpeer</code> command may raise an error because of its CPU chips which are not supported by SDS currently. For instance</p> <pre><code># Run on Macs with an Arm-based M1 chip\n&gt;rp\n[ERROR]2022/04/15 11:38:22 service.go:185: RPC method sds_registerPP crashed: runtime error: index out of range [0] with length 0\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#activate","title":"<code>activate</code>","text":"<p>Send transaction to Stratos chain to become an active Resource Node</p> <pre><code>activate &lt;amount&gt; &lt;fee&gt; [gas] </code></pre> <p>Tip</p> <p><code>amount</code> is the amount of tokens you want to stake. 1stos = 10^9gwei = 10^18wei.</p> <p><code>fee</code> is the amount of tokens to pay as a fee for the activation transaction. 10000wei would work. It will use default value if not provide.</p> <p><code>gas</code> is the amount of gas to pay for the transaction. 1000000 would be a safe number. It will use default value if not provide.</p> <p>Example:</p> <pre><code>&gt;activate 2stos 0.01stos 1000000\nRequest Accepted\n[INFO] 2023/01/12 18:49:39 activate.go:66: get RspActivatePP RES_SUCCESS [INFO] 2023/01/12 18:49:41 activate.go:83: The activation transaction was broadcast\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#startminingdeprecated","title":"<code>startmining</code>(deprecated)","text":"<p>Resource node will start to receive tasks from meta nodes and thus gain mining rewards. From SDS v0.7.0, user does not need to use this command any more since resource node will start mining automatically when the status of a resource node is <code>Mining: ONLINE</code>.</p> <p>Example: <pre><code>startmining\n</code></pre></p> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#status","title":"<code>status</code>","text":"<p>Query the current status of a resource node.</p> <pre><code>status\n</code></pre> <p>Example: <pre><code>&gt;status\nRequest Accepted\n&gt;[INFO] 2023/01/12 10:57:01 get_pp_status.go:80: *** current node status ***\nActivation: Active | Mining: ONLINE | Initial tier: 1 | Ongoing tier: 1 | Weight score: 5000\n</code></pre></p> <p>Tip</p> <p><code>Activation</code> indicates the activation state of a resource node, including <code>Active</code>, <code>Inactive</code> and <code>Unbonding</code>.</p> <p><code>Mining</code> indicates the mining state of a resource node, including <code>ONLINE</code>, <code>OFFLINE</code>, <code>SUSPEND</code> and <code>MAINTENANCE</code>.</p> <p>When a resource node becomes <code>Mining: SUSPEND</code> due to its poor performance, user may use <code>updateStake</code> command to update its state and re-start mining by increasing its stake.</p> <p>Meta Node assigns a <code>Weight score</code> to Resource Node depending on its performance. The more <code>Weight score</code> a Resource Node has, the more priority it has to be assigned tasks.</p> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#updatestake","title":"<code>updateStake</code>","text":"<p>Update stake of an active resource node.</p> <pre><code>updateStake &lt;stakeDelta&gt; &lt;fee&gt; [gas] &lt;isIncrStake&gt; </code></pre> <p>Tip</p> <p><code>stakeDelta</code> is the absolute amount of difference between the original and the updated stake. It should be a positive valid token, in the unit of <code>stos</code>/<code>gwei</code>/<code>wei</code>.</p> <p><code>isIncrStake</code> is a boolean flag with <code>false</code> for decreasing the original stake and <code>true</code> for increasing the original stake.</p> <p>When a resource node is suspended, use this command to update its state and re-start mining by increasing its stake.</p> <p>Example:</p> <p>The following command will increase 1stos to stake, use 10000gwei for tx fees and 1000000 for tx gas.</p> <pre><code>&gt;updateStake 1stos 1000000gwei 1000000 true\nRequest Accepted\n&gt;[INFO] 2023/01/12 11:03:34 update_stake.go:27: Sending update stake message to SP! stsds1ttpyyh9p7udalhwcz7sh5f5zfzuhpm0h3c0hzc\n[INFO] 2023/01/12 11:03:34 update_stake.go:40: get RspUpdateStakePP RES_SUCCESS [INFO] 2023/01/12 11:03:35 update_stake.go:54: The UpdateStake transaction was broadcast\n</code></pre> <p>Tip</p> <p>When a resource node is <code>Mining: SUSPEND</code> due to poor performance(e.g., frequently offline, task uncompleted, unstable connection, unreachable node, etc.), use this command to update its state and re-start mining by increasing its stake.</p> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#prepay","title":"<code>prepay</code>","text":"<p>Ozone is the unit of traffic used by SDS. Operations involving network traffic require ozone to be executed. User can always <code>prepay</code> stos to get Ozone any time before uploading/downloading files.</p> <pre><code>prepay &lt;amount&gt; &lt;fee&gt; [gas]\n</code></pre> <p>Tip</p> <p><code>amount</code> is the amount of tokens you want to spend to purchase ozone.</p> <p>The other two parameters are the same as above.</p> <p>Example:</p> <pre><code>&gt;prepay 1stos 6000000gwei 6000000\nRequest Accepted\n&gt;[INFO] 2023/01/12 10:59:07 prepay.go:24: Sending prepay message to SP! st172v4u8ysfgaphjs8uyy0svvc6d6tzl6gp07kn4\n[INFO] 2023/01/12 10:59:07 prepay.go:37: get RspPrepay RES_SUCCESS [INFO] 2023/01/12 10:59:09 prepay.go:46: The prepay transaction was broadcast\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#getoz","title":"<code>getoz</code>","text":"<p>Query ozone balance of a node's wallet</p> <pre><code>getoz &lt;walletAddress&gt;\n</code></pre> <p>Example:</p> <pre><code>&gt;getoz st14d6vt45ws2fz9kgma5wlcfc283xr6pqgp3sklu\ninput password\npassword: Request Accepted\n&gt; [INFO] 2023/01/12 11:01:27 get_wallet_oz.go:42: get GetWalletOz RSP, the current ozone balance of st172v4u8ysfgaphjs8uyy0svvc6d6tzl6gp07kn4 = 1008215085885, </code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#put","title":"<code>put</code>","text":"<p>upload a file. It will consume Ozone.</p> <p><pre><code>put &lt;filepath&gt;\n</code></pre> <code>filepath</code> is the location of the file to upload, starting from your resource node folder. It is better to be an absolute path.</p> <p>Example:</p> <pre><code>&gt;put relayd/node1/relayd.toml\n[INFO] 2023/01/12 12:00:05 requests.go:178: fileName~~~~~~~~~~~~~~~~~~~~~~~~ relayd.toml\n[INFO] 2023/01/12 12:00:05 requests.go:184: fileHash~~~~~~~~~~~~~~~~~~~~~~ v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:00:07 upload_slice.go:341: fileHash: v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg  uploaded\uff1a100.00 %\n[INFO] 2023/01/12 12:00:07 print.go:20: ####################################################################################################\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#putstream","title":"<code>putstream</code>","text":"<p>Upload a media file for streaming</p> <p>Streaming is the continuous transmission of audio or video files(media files) from a server to a client. In order to upload a streaming file, first you need to install a tool <code>ffmpeg</code> for transcoding multimedia files.</p> <p>In Linux Terminal:</p> <p><pre><code>sudo apt update\nsudo apt install ffmpeg\n\n# use ffmpeg -version to check its version\nffmpeg -version\n</code></pre> In MacOS Terminal:</p> <pre><code>brew update\nbrew install ffmpeg\n</code></pre> <p></p> <p>Then, use <code>putstream</code> command to upload a media file</p> <pre><code>putstream &lt;filepath&gt;\n</code></pre> <p><code>filepath</code> is the absolute path of the file to be uploaded, or a relative path starting from the root directory of the resource node.</p> <p>Example:</p> <pre><code>putstream example_01.mp4\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#list-or-ls","title":"<code>list</code> or <code>ls</code>","text":"<p>List all uploaded files</p> <pre><code>ls\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#list-filename","title":"<code>list &lt;filename&gt;</code>","text":"<p>Query a specific uploaded file by name</p> <pre><code>ls filename\n</code></pre> <p>Example:</p> <pre><code>&gt;ls relayd.toml\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:01:58 find_file.go:71: _______________________________\n[INFO] 2023/01/12 12:01:58 find_file.go:76: File name: relayd.toml\n[INFO] 2023/01/12 12:01:58 find_file.go:77: File hash: v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\n[INFO] 2023/01/12 12:01:58 find_file.go:79: CreateTime : 1673542807\n[INFO] 2023/01/12 12:01:58 find_file.go:88: ===============================\n[INFO] 2023/01/12 12:01:58 find_file.go:89: Total: 1  Page: 0\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#list-page_id","title":"<code>list &lt;page_id&gt;</code>","text":"<p>Query all files owned, paginated by 20 items per page by default, starting with page 0.</p> <pre><code>ls page_id\n</code></pre> <p>Example:</p> <pre><code>&gt;ls 0\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:03:07 find_file.go:71: _______________________________\n[INFO] 2023/01/12 12:03:07 find_file.go:76: File name: relayd.toml\n[INFO] 2023/01/12 12:03:07 find_file.go:77: File hash: v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\n[INFO] 2023/01/12 12:03:07 find_file.go:79: CreateTime : 1673542807\n[INFO] 2023/01/12 12:03:07 find_file.go:88: ===============================\n[INFO] 2023/01/12 12:03:07 find_file.go:89: Total: 1  Page: 0\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#get","title":"<code>get</code>","text":"<p>Download an uploaded file</p> <pre><code>get &lt;sdm://account/filehash&gt; [saveAs]\n</code></pre> <p>Tip</p> <p>Every file uploaded to SDS is attributed with a unique file hash.</p> <p>View the file hash for each of your files when you <code>list</code> your uploaded files.</p> <p>Use the optional parameter <code>saveAs</code> to rename the file.</p> <p>The downloaded files will be saved into the folder <code>download</code> by default under the root directory of your resource node, like</p> <pre><code>.\n\u251c\u2500\u2500 accounts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 st1la7aj36gk88puz3026t3mkqfeu4q8paj3rs4gk.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 stsds1x5cse46ru8phd0435ncm04vh4mzj8ntp8rtpu4.json\n\u251c\u2500\u2500 configs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 config.toml\n\u251c\u2500\u2500 download                # default downloading dir\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 README.md       # downloaded file\n\u251c\u2500\u2500 peers\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 pp-list\n\u2514\u2500\u2500 tmp\n\u2514\u2500\u2500 logs\n</code></pre> <p>The <code>download</code> folder is defined by <code>download_path</code> in the file <code>configs/config.toml</code> under the root directory of your resource node.</p> <p>Example:</p> <pre><code>&gt;get sdm://st172v4u8ysfgaphjs8uyy0svvc6d6tzl6gp07kn4/v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:47:31 query_file_info.go:253: get\uff0cRspFileStorageInfo\n\n[INFO] 2023/01/12 12:47:31 download_slice.go:391: download starts: [INFO] 2023/01/12 12:47:31 download_task.go:431: downloaded\uff1a100.00 % [INFO] 2023/01/12 12:47:31 print.go:20: ####################################################################################################\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#delete","title":"<code>delete</code>","text":"<p>Delete an uploaded file</p> <pre><code>delete &lt;filehash&gt;\n</code></pre> <p>Example:</p> <pre><code>&gt;delete v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:04:51 delete_file.go:36: delete success\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#sharefile","title":"<code>sharefile</code>","text":"<p>Share(public) an uploaded file</p> <pre><code>sharefile &lt;filehash&gt; &lt;duration&gt; &lt;is_private&gt;\n</code></pre> <p>Tip</p> <p><code>duration</code> is time period(in seconds) when the file share expires. Put <code>0</code> for unlimited time.</p> <p><code>is_private</code> is whether the file share should be protected by a password. Put <code>0</code> for public file without password, and <code>1</code> for private file with a password.</p> <p>After this command has been executed successfully, SDS will provide a password to this shared file, like <code>m216</code>.Please keep this password for future use.</p> <p>Example:</p> <pre><code>&gt;sharefile v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg 0 1\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:53:04 share.go:131: ShareId 348f79a5a0963a56\n[INFO] 2023/01/12 12:53:04 share.go:132: ShareLink hFu8ce_348f79a5a0963a56\n[INFO] 2023/01/12 12:53:04 share.go:133: SharePassword m216\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#allshare","title":"<code>allshare</code>","text":"<p>List All Shared Files.</p> <pre><code>allshare\n</code></pre> <p>Example: <pre><code>&gt;allshare\nRequest Accepted\n&gt; [INFO] 2023/01/12 12:30:21 share.go:75: _______________________________\n[INFO] 2023/01/12 12:30:21 share.go:76: file_name: relayd.toml\n[INFO] 2023/01/12 12:30:21 share.go:77: file_hash: v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\n[INFO] 2023/01/12 12:30:21 share.go:78: file_size: 676\n[INFO] 2023/01/12 12:30:21 share.go:79: link_time: 1673544576\n[INFO] 2023/01/12 12:30:21 share.go:80: link_time_exp: 1689096576\n[INFO] 2023/01/12 12:30:21 share.go:81: ShareId: e9546b33e3d63285\n[INFO] 2023/01/12 12:30:21 share.go:82: ShareLink: 4RREV0_e9546b33e3d63285\n</code></pre></p> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#getsharefile","title":"<code>getsharefile</code>","text":"<p>Download a shared file.</p> <pre><code>getsharefile &lt;sharelink&gt; [password]\n</code></pre> <p>Tip</p> <p>Leave the <code>password</code> blank if it's a public shared file.</p> <p><code>sharelink</code> could be found when your use <code>allshare</code> to list all available shared files.</p> <p>The downloaded files will be saved into the folder <code>download</code> by default under the root directory of your resource node.</p> <p>Example:</p> <pre><code>&gt;getsharefile 4RREV0_e9546b33e3d63285\nRequest Accepted\n&gt; [INFO] 2023/01/12 12:31:38 share.go:216: get RspGetShareFile RES_SUCCESS request success\n[INFO] 2023/01/12 12:31:38 share.go:222: FileInfo: [file_size:676  file_hash:\"v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\"  file_name:\"relayd.toml\"  create_time:1673542807  owner_wallet_address:\"st172v4u8ysfgaphjs8uyy0svvc6d6tzl6gp07kn4\"  share_link:\"4RREV0_e9546b33e3d63285\"]\n[INFO] 2023/01/12 12:31:38 query_file_info.go:253: get\uff0cRspFileStorageInfo\n\n[INFO] 2023/01/12 12:31:38 download_slice.go:391: download starts: [INFO] 2023/01/12 12:31:39 download_task.go:431: downloaded\uff1a100.00 % [INFO] 2023/01/12 12:31:39 print.go:20: ####################################################################################################\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#cancelshare","title":"<code>cancelshare</code>","text":"<p>Cancel file share</p> <pre><code>cancelshare &lt;shareID&gt;\n</code></pre> <p><code>shareID</code> could be found when your use <code>allshare</code> to list all available shared files</p> <p>Example:</p> <pre><code>&gt;cancelshare e9546b33e3d63285\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:52:20 share.go:172: cancel share success: e9546b33e3d63285\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#monitor","title":"<code>monitor</code>","text":"<p>View resource utilization.</p> <pre><code>monitor\n</code></pre> <p>Example:</p> <pre><code># show the resource utilization monitor\n&gt;monitor\n[INFO] 2023/01/12 11:13:09 sys.go:143: __________________________________________________________________________\n[INFO] 2023/01/12 11:13:09 sys.go:144:         Mem         : 15967 MB  Free: 9497 MB Used:6127 Usage:38.372995%\n[INFO] 2023/01/12 11:13:09 sys.go:149:         CPU          : Intel(R) Core(TM) i7-10510U CPU @ 1.80GHz   1 cores [INFO] 2023/01/12 11:13:09 sys.go:149:         CPU          : Intel(R) Core(TM) i7-10510U CPU @ 1.80GHz   1 cores [INFO] 2023/01/12 11:13:09 sys.go:149:         CPU          : Intel(R) Core(TM) i7-10510U CPU @ 1.80GHz   1 cores [INFO] 2023/01/12 11:13:09 sys.go:149:         CPU          : Intel(R) Core(TM) i7-10510U CPU @ 1.80GHz   1 cores [INFO] 2023/01/12 11:13:09 sys.go:158:         CPU Used    : 93.367347% [INFO] 2023/01/12 11:13:09 sys.go:161:         HD          : 343 GB  Free: 160 GB Usage:51.431241% Path:/home/hong/stratos/sds-tropos5/sds/example/network/node1\n[INFO] 2023/01/12 11:13:09 sys.go:201:         Upload      : 0.000000 MB/s [INFO] 2023/01/12 11:13:09 sys.go:202:         Download    : 0.000000 MB/s [INFO] 2023/01/12 11:13:09 sys.go:203: __________________________________________________________________________\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#stopmonitor","title":"<code>stopmonitor</code>","text":"<p>Hide the resource utilization monitor</p> <pre><code>stopmonitor\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#monitortoken","title":"<code>monitortoken</code>","text":"<p>show token for Resource Node monitor service.</p> <p><pre><code>&gt; monitortoken\nMonitor token is: dddd608cc1c0efaf6b87267088dbc4b099b0db0758f476e625763580991a086c\n</code></pre> The returned token can be used for logging in to resource node monitor.</p> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#wallets","title":"<code>wallets</code>","text":"<p>acquire all wallets' addresses</p> <pre><code>wallets\n</code></pre> <p>Example:</p> <pre><code>&gt;wallets\n[INFO] 2023/01/12 11:18:07 account.go:109: st16v5pcrj9m6fgmwm7w0fn6dyxe8er3dk2nqqrhf\n[INFO] 2023/01/12 11:18:07 account.go:109: st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#ver","title":"<code>ver</code>","text":"<p>show current SDS version</p> <p>Example:</p> <pre><code>&gt;ver\nversion: v0.9.0\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#deactivate","title":"<code>deactivate</code>","text":"<p>send transaction to Stratos-chain to stop being an active resource node</p> <pre><code>deactivate &lt;fee&gt; &lt;gas&gt;\n</code></pre> <p>Example:</p> <pre><code>&gt;deactivate 10000000gwei 1000000\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#newwallet","title":"<code>newwallet</code>","text":"<p>create a new wallet or recover an existing wallet, input password after prompt</p> <pre><code>newwallet &lt;wallet_name&gt;\n</code></pre> <p>Example:</p> <pre><code>&gt;newwallet mySecondWallet\nEnter wallet nickname: mySecondWallet\nEnter password: Enter password again: input bip39 mnemonic (leave blank to generate a new one)\ninput hd-path for the account, default: \"m/44'/606'/0'/0/0\" : save the mnemonic phase properly for future recovery: =======================================================================  mother bracket treat warfare become win ivory harvest course reform theory issue group super alpha library despair sustain orient shrug lizard bulk mistake magnet\n======================================================================= [INFO] 2023/01/12 11:17:00 setup_wallet.go:61: Wallet st16v5pcrj9m6fgmwm7w0fn6dyxe8er3dk2nqqrhf has been generated successfully\nDo you want to use this wallet as your node wallet: Y(es)/N(o): y\n[INFO] 2023/01/12 11:17:03 setting.go:291: finished changing configuration file  wallet_address:  st16v5pcrj9m6fgmwm7w0fn6dyxe8er3dk2nqqrhf\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#config","title":"<code>config</code>","text":"<p>Set config key value pairs in the file <code>configs/config.toml</code>, separated by one space(note: no quotes for string input).</p> <p><pre><code>config &lt;key&gt; &lt;value&gt;\n</code></pre> Example:</p> <pre><code>config wallet_password stratos\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#maintenance-start","title":"<code>maintenance start</code>","text":"<p>Claim a maintenance. Put the resource node in maintenance mode for the requested duration (in seconds).</p> <pre><code>maintenance start &lt;duration&gt; </code></pre> <p>Tip</p> <ul> <li><code>maintenance start &lt;duration&gt;</code> command starts a maintenance activity and switches the node into <code>maintenance</code> mode for the requested duration (in seconds);</li> <li>While a Resource Node is in <code>maintenance</code> mode, it will be opt-out from any download/upload/backup tasks;</li> <li>While a Resource Node is in <code>maintenance</code> mode, it will NOT be slashed for its off-line;</li> <li>The maintenance allowance is maxed out after reach 1% up-time per year(around 87h). Then, any maintenance request will be rejected;</li> <li>The maintenance allowance will be tracked and be reset every calendar year for all nodes;</li> <li>When using the <code>maintenance stop</code> to stop the current maintenance, or the maintenance period is over, the node status reverts to <code>offline</code> and is ready to restart mining. It acts as usual to earn rewards or be slashed.</li> </ul> <p>Example:</p> <p><pre><code>&gt;maintenance start 600\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:57:21 maintenance.go:19: Sending maintenance start request to SP!\n\n&gt;status\nRequest Accepted\n&gt; [INFO] 2023/01/12 12:58:19 get_pp_status.go:80: *** current node status ***\nActivation: Active | Mining: MAINTENANCE | Initial tier: 1 | Ongoing tier: 1 | Weight score: 5020\n</code></pre> Note: <code>Mining: MAINTENANCE</code> indicates that this node is in <code>maintenance</code> mode.</p> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#maintenance-stop","title":"<code>maintenance stop</code>","text":"<p>stop the current maintenance.</p> <pre><code>&gt;maintenance stop\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:58:35 maintenance.go:26: Sending maintenance stop request to SP!\n[INFO] 2023/01/12 12:58:38 register_to_sp.go:104: start mining\n\n&gt;status\nRequest Accepted\n&gt; [INFO] 2023/01/12 12:59:22 get_pp_status.go:80: *** current node status ***\nActivation: Active | Mining: ONLINE | Initial tier: 1 | Ongoing tier: 1 | Weight score: 5020\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#downgradeinfo","title":"<code>downgradeinfo</code>","text":"<p>Get the information of last downgrade happened on this resource node.</p> <pre><code>&gt; downgradeinfo\nRequest Accepted\n&gt; [INFO] 2023/01/12 10:43:12 get_pp_downgrade_info.go:24: PP downgrade happened at: 111624 (heights) ago, at SP node stsds15sya4n40da64z6n6hvk0p9f7sx72hqpjjnrf9y, score decreased by 9999\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#performancemeasure","title":"<code>performancemeasure</code>","text":"<p>Turn on performance measurement log for 60 seconds.</p> <pre><code>&gt; performancemeasure\n</code></pre> <p>You can exit the <code>ppd terminal</code> command-line terminal by typing <code>exit</code> and leave the <code>ppd start</code> terminal to run the resource node in background.</p> <p></p> <p></p>"},{"location":"docs-resource-node/rpc-client/","title":"SDS RPC client usage","text":""},{"location":"docs-resource-node/rpc-client/#-help","title":"- <code>help</code>","text":"<pre><code>Usage:\nrpc_client [command]\nAvailable Commands:\ncompletion  Generate the autocompletion script for the specified shell\nget         download a file\ngetozone    get the ozone of the wallet\ngetshared   download a shared file\nhelp        Help about any command\nlist        list files\nlistshared  list shared files\nput         upload a file\nputstream   upload a file\nshare       share a file from uploaded files\nstopshare   stop sharing a file\nFlags:\n-h, --help            help for rpc_client\n-u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n-w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\nUse \"rpc_client [command] --help\" for more information about a command.\n</code></pre>"},{"location":"docs-resource-node/rpc-client/#-completion","title":"- completion","text":"<p>Generates the autocompletion script for rpc_client for the specified shell.</p> <pre><code>Usage:\nrpc_client completion [command]\nAvailable Commands:\nbash        Generate the autocompletion script for bash\nfish        Generate the autocompletion script for fish\npowershell  Generate the autocompletion script for powershell\nzsh         Generate the autocompletion script for zsh\nFlags:\n-h, --help   help for completion\nGlobal Flags:\n-u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n-w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\nUse \"rpc_client completion [command] --help\" for more information about a command.\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#for-bash","title":"for bash","text":"<p>To load completions in your current shell session:</p> <pre><code>source &lt;(rpc_client completion bash)\n</code></pre> <p>To load completions for every new session, execute once:</p> <p>Tip</p> <p>This script depends on the <code>bash-completion</code> package.</p> <p>If it is not installed already, you can install it via your OS's package manager.</p> <ul> <li>For Linux:</li> </ul> <pre><code>rpc_client completion bash &gt; /etc/bash_completion.d/rpc_client\n</code></pre> <ul> <li>For MacOS:</li> </ul> <pre><code>rpc_client completion bash &gt; $(brew --prefix)/etc/bash_completion.d/rpc_client\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <p></p>"},{"location":"docs-resource-node/rpc-client/#for-fish","title":"for fish","text":"<p>To load completions in your current shell session:</p> <pre><code>rpc_client completion fish | source\n</code></pre> <p>To load completions for every new session, execute once:</p> <pre><code>rpc_client completion fish &gt; ~/.config/fish/completions/rpc_client.fish\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <p></p>"},{"location":"docs-resource-node/rpc-client/#for-powershell","title":"for powershell","text":"<p>To load completions in your current shell session:</p> <pre><code>rpc_client completion powershell | Out-String | Invoke-Expression\n</code></pre> <p>To load completions for every new session, add the output of the above command to your powershell profile.</p> <p></p>"},{"location":"docs-resource-node/rpc-client/#for-zsh","title":"for zsh","text":"<p>If shell completion is not already enabled in your environment you will need to enable it.  You can execute the following once:</p> <pre><code>echo \"autoload -U compinit; compinit\" &gt;&gt; ~/.zshrc\n</code></pre> <p>To load completions in your current shell session:</p> <pre><code>source &lt;(rpc_client completion zsh); compdef _rpc_client rpc_client\n</code></pre> <p>To load completions for every new session, execute once:</p> <ul> <li>For Linux:</li> </ul> <pre><code>rpc_client completion zsh &gt; \"${fpath[1]}/_rpc_client\"\n</code></pre> <ul> <li>For MacOS:</li> </ul> <pre><code>rpc_client completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_rpc_client\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <p></p>"},{"location":"docs-resource-node/rpc-client/#-get","title":"- get","text":"<p>Downloads a file.</p> <pre><code>Usage:\nrpc_client get &lt;sdm://account/filehash&gt; [flags]\nFlags:\n-h, --help   help for get\nGlobal Flags:\n-u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n-w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client get sdm://st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72/v05ahm500bfpivst07iti9krii5llj608mduoo82 \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/20 11:56:15 main.go:463: - start downloading the file:  sdm://st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72/v05ahm500bfpivst07iti9krii5llj608mduoo82\n[INFO] 2023/03/20 11:56:15 main.go:475: - request downloading the file (method: user_requestDownload)\n[INFO] 2023/03/20 11:56:25 main.go:576: - downloading is done\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-getozone","title":"- getozone","text":"<p>Queries ozone amount from a wallet address.</p> <pre><code>Usage:\nrpc_client getozone [flags]\nFlags:\n-h, --help   help for getozone\nGlobal Flags:\n-u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n-w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client getozone --url http://127.0.0.1:4444 --wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/20 12:01:20 main.go:697: - request ozone balance (method: user_requestGetOzone)\n[INFO] 2023/03/20 12:01:20 main.go:719: - received response (return: SUCCESS)\n[INFO] 2023/03/20 12:01:20 main.go:721: OZONE balance:  45511.741533115\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-getshared","title":"- getshared","text":"<p>Downloads a shared file.</p> <pre><code>Usage:\nrpc_client getshared &lt;filehash&gt; [flags]\nFlags:\n-h, --help   help for getshared\nGlobal Flags:\n-u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n-w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client getshared v05ahm500bfpivst07iti9krii5llj608mduoo82 \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/20 12:04:59 main.go:1015: - start downloading the file: v05ahm500bfpivst07iti9krii5llj608mduoo82\n[INFO] 2023/03/20 12:04:59 main.go:1022: - request shared file information (method: user_requestGetShared)\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-list","title":"- list","text":"<p>Lists all files uploaded by account (wallet).</p> <pre><code>Usage:\nrpc_client list [flags]\nFlags:\n-h, --help   help for list\nGlobal Flags:\n-u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n-w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client list --url http://127.0.0.1:4444 --wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/20 12:38:17 main.go:635: - request listing files (method: user_requestList)\n[INFO] 2023/03/20 12:38:17 main.go:656: - received response (return: SUCCESS)\nFile Name            File Hash                                 File Size Create Time\n_____________________________________________________________________________________\ntestsds1-202303142214 v05ahm5000qs4viph3u4biqt67tnels4qpguvjl8   31457280 1678824883\ntestsds1-202301221144 v05ahm5000u52005ij1osr15t0e7v8df2voh74mo   31457280 1674380707\ntestsds1-202302240758 v05ahm50010b993c3gdc28nk90bhf4aabdhaujg8   31457280 1677218311\ntestsds1-202301240119 v05ahm5001j1g84vpu28upa06n8jca40vtqbc6v8   31457280 1674516005\ntestsds1-202302092312 v05ahm500289uhi4obev6gi3vmmv5s48289vorbg   31457280 1675977162\ntestsds1-202301240902 v05ahm5002bitsbccaqv5i568vvtsnr1d2avtaa8   31457280 1674543742\ntestsds1-202301242002 v05ahm5003v4fei49lpj6rb0p1rqpjp52johdkmo   31457280 1674583378\ntestsds1-202301262228 v05ahm50040vne6f3tuk618h3me8mq4tqor3j6a0   31457280 1674764909\ntestsds1-202302181817 v05ahm5004b9epvd49uhddmmhs6g5lpfpo0h0eho   31457280 1676737093\ntestsds1-202303171340 v05ahm5004ogv5a1aa5np1m0u0q98djg0p679ih0   31457280 1679053247\ntestsds1-202301232120 v05ahm5004pvblrcqgvbu2gtmsl108dlfnsgrg80   31457280 1674501610\ntestsds1-202303041845 v05ahm5005304r88pucigun0ta3u9uirjkkroiug   31457280 1677948336\ntestsds1-202302202236 v05ahm5005bgrltqtp6eq57q8n8phsa9krtrvpsg   31457280 1676925407\ntestsds1-202302282052 v05ahm5005dpvr5p5en3hj62hqpvcjinjhqdavo0   31457280 1677610366\ntestsds1-202301211702 v05ahm5006gncteg3o7ubfl5u3g20er3jme5gkvg   31457280 1674313350\ntestsds1-202301251935 v05ahm5006is8d937529te36mpl7so1kh3des3go   31457280 1674668116\ntestsds1-202301311242 v05ahm5006tgr22ac68leu5gqitaurmqler3vt78   31457280 1675161765\ntestsds1-202301250041 v05ahm5007mtri1o1tdc9m50d2ruqspir70kejd0   31457280 1674600151\ntestsds1-202301221100 v05ahm5007n1tgrhmqbb6h9inktvqb6q7vn3in70   31457280 1674378057\ntestsds1-202301261717 v05ahm5007rcft4obagneqdv1gdnj1266bno8nco   31457280 1674746284\n_____________________________________________________________________________________\nTotal: 20    Page: 0\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-listshared","title":"- listshared","text":"<p>Lists all files uploaded and shared by account (wallet).</p> <pre><code>Usage:\nrpc_client listshared [flags]\nFlags:\n-h, --help   help for listshared\nGlobal Flags:\n-u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n-w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client listshared --url http://127.0.0.1:4444 --wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/20 11:50:08 main.go:786: - request listing files (method: user_requestListShare)\n[INFO] 2023/03/20 11:50:08 main.go:805: - received response (return: SUCCESS)\nFile Name            File Hash                                 File Size Link Time  Link Exp   Share ID         Share Link     ________________________________________________________________________________________________________________________________________\ntestsds1-202301201653 v05ahm500bfpivst07iti9krii5llj608mduoo88   31457280 1674242684 1689794684 2addd621913e02e8 Xpg6U6_2addd621913e02e8\ntestsds1-202301201451 v05ahm504onf44326v8fupkl96gogma8vs85toro   31457280 1674242858 1689794858 476a8ecddbdd29a6 TS7eFc_476a8ecddbdd29a6\ntestsds1-202301201553 v05ahm503qb6igipcbmd9q1l1gbqpkiju37c59fo   31457280 1674242786 1689794786 59cf272db46dbbdb UkDPm3_59cf272db46dbbdb\ntestsds1-202301201853 v05ahm504aftmgtqerm5npdd34bb0u1lcflpgbb8   31457280 1674242825 1689794825 6615100040081212 OQ9ndm_6615100040081212\ntestsds1-202301200915 v05ahm5041mu88dr71ndp1cag0s8kgqvlr85lce0   31457280 1674242813 1689794813 6789246235828987 qAw0PV_6789246235828987\ntestsds1-202301200808 v05ahm500l93v2ghdju34h10ehpuj05c6hnqdst8   31457280 1674242748 1689794748 858408741b47a972 LwyBT8_858408741b47a972\ntestsds1-202301201816 v05ahm501ajcimbjcvrijuuts1n7d939b180o2rg   31457280 1674242769 1689794769 9cbc8114ebf949ae SGF8Uf_9cbc8114ebf949ae\ntestsds1-202301201730 v05ahm500dpnbihbch8s1qtq29ggfebft18keah8   31457280 1674242726 1689794726 a01893d8931c4639 mAvWSE_a01893d8931c4639\ntestsds1-202301200944 v05ahm5008ps226hc4etihet1gs2el8g7gvsqqd8   31457280 1674242572 1689794572 b1649c6ddf63a93a ouX59c_b1649c6ddf63a93a\ntestsds1-202301201822 v05ahm504b5g4nn3ovi5njgu1v1odbhef10p7k68   31457280 1674242841 1689794841 d8a81f46294532d5 ZpCKeK_d8a81f46294532d5\ntestsds1-202301200705 v05ahm5008hlp1k2278ojgpc1i4t30d21pb9555g   31457280 1674242538 1689794538 ecc6169ec9a95258 5Y4amn_ecc6169ec9a95258\n________________________________________________________________________________________________________________________________________\nTotal: 11       Page: 0\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-put","title":"- put","text":"<p>Uploads a file.</p> <pre><code>Usage:\nrpc_client put &lt;filepath&gt; [flags]\nFlags:\n-h, --help   help for put\nGlobal Flags:\n-u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n-w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client put /home/user/tmp/100MB.zip \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/20 12:14:17 main.go:179: - start uploading the file: /home/user/tmp/100MB.zip\n[INFO] 2023/03/20 12:14:17 main.go:187: - request uploading file (method: user_requestUpload)\n[INFO] 2023/03/20 12:14:33 main.go:212: - received response (return: UPLOAD_DATA)\n[INFO] 2023/03/20 12:14:33 main.go:225: - request upload date (method: user_uploadData)\n[INFO] 2023/03/20 12:14:32 main.go:244: - uploading is done\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-putstream","title":"- putstream","text":"<p>Uploads a media file for streaming</p> <p>Streaming is the continuous transmission of audio or video files(media files) from a server to a client. </p> <p>In order to upload a streaming file, first you need to install a tool ffmpeg for transcoding multimedia files.</p> <ul> <li>In Linux Terminal:</li> </ul> <pre><code>sudo apt update\nsudo apt install ffmpeg\n\n# use ffmpeg -version to check its version\nffmpeg -version\n</code></pre> <ul> <li>In MacOS Terminal:</li> </ul> <pre><code>brew update\nbrew install ffmpeg\n</code></pre> <pre><code>Usage:\nrpc_client putstream &lt;filepath&gt; [flags]\nFlags:\n-h, --help   help for putstream\nGlobal Flags:\n-u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n-w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client putstream /home/user/tmp/file_example_MP4_640_3MG.mp4 \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>...\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-share","title":"- share","text":"<p>Shares a previously uploaded file.</p> <pre><code>Usage:\nrpc_client share &lt;filehash&gt; &lt;duration&gt; &lt;is_private&gt; [flags]\nFlags:\n-h, --help   help for share\nGlobal Flags:\n-u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n-w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Tip</p> <p><code>duration</code> is time period(in seconds) when the file share expires. Put 0 for unlimited time.</p> <p><code>is_private</code> is whether the file share should be protected by a password. Put 0 for public file without password, and 1 for private file with a password.</p> <p>If <code>is_private</code> has been set to '1', SDS will provide a password to this shared file, like <code>m216</code>.</p> <p>Example:</p> <pre><code>rpc_client share v05ahm500bfpivst07iti9krii5llj608mduoo82 \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/24 13:00:01 main.go:957: - request sharing file (method: user_requestShare)\n[INFO] 2023/03/24 13:00:03 main.go:976: - received response (return: SUCCESS)\nShareId:  78912f5d9bbe939r\nShareLink:  VzW5KW_78912f5d9bbe939r\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-stopshare","title":"- stopshare","text":"<p>Stops sharing a previously uploaded file.</p> <pre><code>Usage:\nrpc_client stopshare &lt;ShareID&gt; [flags]\nFlags:\n-h, --help   help for stopshare\nGlobal Flags:\n-u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n-w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Tip</p> <p>You can get the <code>ShareID</code> from the listshared command.</p> <p>Example:</p> <pre><code>rpc_client stopshare 6789246235828987 \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Result:</p> <pre><code>[INFO] 2023/03/20 12:34:53 main.go:913: - request stop sharing (method: user_requestStopShare)\n[INFO] 2023/03/20 12:34:54 main.go:932: - received response (return: SUCCESS)\n</code></pre> <p></p> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/","title":"SDS RPC for file operations","text":"<p>The API is based on JSON-RPC 2.0 specs. The user works as a client and a resource node provides service as a server.</p> <p>When the client sends a request to the server by calling to a method, the server sends the response back as the return.</p> <p>The format of a request message is:</p> <pre><code>{\n\"jsonrpc\":\"2.0\",\n\"id\":1,\n\"method\":\"user_methodName\",\n\"params\":[\n{\n\"param1\":\"valueOfParam1\",\n\"param2\":valueOfParam2,\n...\n}\n]\n}\n</code></pre> <p>The format of a response message is:</p> <pre><code>{\n\"jsonrpc\":\"2.0\",\n\"id\":1,\n\"result\":\n{\n\"return\":\"1\",\n\"extra_result_object1\":value_object1,\n\"extra_result_object2\":value_object2,\n...\n}\n}\n</code></pre> <p>When \"return\" object in \"result\" is a string encoded negative number, it carries an error. </p> <pre><code>    \"-1\":  GENERIC_ERR           \"-3\":  SIGNATURE_FAILURE \"-4\":  WRONG_FILE_SIZE \"-5\":  OPERATION_TIME_OUT \"-6\":  FILE_REQ_FAILURE \"-7\":  WRONG_INPUT \"-8\":  WRONG_PP_ADDRESS \"-9\":  INTERNAL_DATA_FAILURE \"-10\": INTERNAL_COMM_FAILURE \"-11\": WRONG_FILE_INFO </code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#upload-a-file","title":"Upload a File","text":"<p>Two methods are used to accomplish uploading a file.</p> <ul> <li>user_requestUpload: start uploading a file</li> <li>user_uploadData: upload a piece of file data </li> </ul>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestupload","title":"user_requestUpload","text":"<p>To request to upload a file. The result could carry the offsets of a piece of the file to be uploaded if the request succeeded.</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters","title":"Parameters","text":"name type comment filename string name of the file filesize number size of the file, in byte filehash string file hash to identify a file 1 walletaddr string wallet address of the user account walletpubkey string public key of wallet address signature string signed on a message 23"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns","title":"Returns","text":"name type comment return string negative: errors; \"1\": success and expect for next user_uploadData; other values: invalid offsetstart number the offset of beginning of the piece of file data, inclusive offsetend number the offset of end of the piece of file data, exclusive"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example","title":"Example","text":"<p>Request</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"method\": \"user_requestUpload\",\n\"params\": [\n{\n\"filename\": \"test_16m.bin\",\n\"filesize\": 16777216,\n\"filehash\": \"v05ahm53rcu3b7hrcllpmevfje4vckvriaftg3b0\",\n\"walletaddr\": \"st1macvxhdy33kphmwv7kvvk28hpg0xn7nums5klu\",\n\"walletpubkey\": \"stsdspub1q0u5yz7t24whqqgy9rsw85m8r2936qqtvty6rwp8zcc688w38zkdwcqm5tz\",\n\"signature\": \"1a6c5a67f906553c1d2d0b0c0e856303617dd8b0ab5901321e930fae076c0fdf77d4ba7d84c576d581802f04ea1a8641928fc11ba90a58e430a0a0f09f9515af\"\n}\n]\n}\n</code></pre> <p>Response</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"return\": \"1\",\n\"offsetstart\": 0,\n\"offsetend\": 3500000\n}\n}\n</code></pre>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_uploaddata","title":"user_uploadData","text":"<p>Send a piece of file data to server according to the offset previously provided by the server.</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_1","title":"Parameters","text":"name type comment filehash string file hash to identify a file data string data of the piece of the file 4"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_1","title":"Returns","text":"name type comment return string negative: errors; \"1\": success and offsets for next user_uploadData; \"0\": finished uploading; other values: invalid offsetstart number the offset of begining of the piece of file data, inclusive offsetend number the offset of end of the piece of file data, exclusive"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_1","title":"Example","text":"<p>Request</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"method\": \"user_uploadData\",\n\"params\": [\n{\n\"filehash\": \"v05ahm53rcu3b7hrcllpmevfje4vckvriaftg3b0\",\n\"data\": \"OQP9h/WvknuPaiWwvJ0MKIjcFs5WGGn4CoYwKLfXsvj0rAjwROuplLOBHjp6N42+/3tjtbdyZlcLk8+BWh+4ZilplkofOsTdGIYoPsbou5 ... \"\n}\n]\n}\n</code></pre> <p>Response</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"return\": \"1\",\n\"offsetstart\": 3500000,\n\"offsetend\": 7000000\n}\n}\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#list-files","title":"List Files","text":"<p>List files owned by this account.</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestlist","title":"user_requestList","text":"<p>Request listing files owned by the account with the wallet address.</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_2","title":"Parameters","text":"name type comment walletaddr string wallet address of the user account page number the list is paginated. Page number start from 0."},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_2","title":"Returns","text":"name type comment return string negative: errors; \"0\": success; other value: invalid fileinfo objects information for each file <p>In fileinof, these objects are included</p> name type comment filehash string file hash to identify the file 1 filesize number size of the file, in byte filename string name of the file createtime number unix epoch time when the file was created"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#examples","title":"Examples","text":"<p>Request</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"method\": \"user_requestList\",\n\"params\": [\n{\n\"walletaddr\": \"st1macvxhdy33kphmwv7kvvk28hpg0xn7nums5klu\",\n\"page\": 0\n}\n]\n}\n</code></pre> <p>Response</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"return\": \"0\",\n\"fileinfo\": [\n{\n\"filehash\": \"v05ahm51atjqkpte7gnqa94bl3p731odvvdvfvo8\",\n\"filesize\": 200000000,\n\"filename\": \"file1_200M_jan22\",\n\"createtime\": 1674433580\n},\n{\n\"filehash\": \"v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n\"filesize\": 10000000,\n\"filename\": \"file2_10M_jan20\",\n\"createtime\": 1674250085\n},\n{\n\"filehash\": \"v05ahm52po4iteumn1v58o3marnruc7l75km9rv8\",\n\"filesize\": 50000000,\n\"filename\": \"file3_50M_jan20\",\n\"createtime\": 1674250338\n},\n{\n\"filehash\": \"v05ahm53ec2f5c9lh92cqapp0mvtfcdphj1deb00\",\n\"filesize\": 100000000,\n\"filename\": \"file1_100M_jan20\",\n\"createtime\": 1674240637\n},\n{\n\"filehash\": \"v05ahm54ia4o2p8vjpluolshiugn1mrgqqhht6o0\",\n\"filesize\": 209715200,\n\"filename\": \"test_200m.bin\",\n\"createtime\": 1674489434\n},\n{\n\"filehash\": \"v05ahm54qtdk0oogho52ujtk5v6rdlpbhumfshmg\",\n\"filesize\": 10000000,\n\"filename\": \"file4_10M_jan20\",\n\"createtime\": 1674253605\n}\n],\n\"totalnumber\": 6\n}\n}\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#download-a-file","title":"Download a File","text":"<p>To download a file, there are three methods to be used. </p> <ul> <li>user_requestDownload: to start downloading the file </li> <li>user_downloadData: to request a piece of file data</li> <li>user_downloadedFileInfo: request server verification of the downloaded file</li> </ul>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestdownload","title":"user_requestDownload","text":"<p>To start downloading a file. A piece of fire data is carried in the response while successfully started.  </p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_3","title":"Parameters","text":"name type comment filehandle string url of the file in sdm:// format 5 walletaddr string wallet address of the user account walletpubkey string public key of wallet address signature string signed on message \"filehash\" + \"walletaddr\" 23"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_3","title":"Returns","text":"name type comment return string negative: errors; \"2\": file data provided; other value: invalid reqid string to identify download instances when multiple download happen at same time offsetstart number the offset of beginning of the piece of file data, inclusive offsetend number the offset of end of the piece of file data, exclusive filedata string data of the piece of the file 4"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_2","title":"Example","text":"<p>Request</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"method\": \"user_requestDownload\",\n\"params\": [\n{\n\"filehandle\": \"sdm://st19nn9fnlzkpm3hah3pstz0wq496cehclpru8m3u/v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n\"walletaddr\": \"st19nn9fnlzkpm3hah3pstz0wq496cehclpru8m3u\",\n\"walletpubkey\": \"stpub1qdaazld397esglujfxsvwwtd8ygytzqnj5ven52guvvdpvaqdnn52ecsjms\",\n\"signature\": \"f598a58bcbf579390e03b3a1ee41c77cff48a714547ae2784124d3c9d873d8a509f615a45c6cad35e94562984e6775a87dbf3ccb2e47af52e23bffc31c698f8901\"\n}\n]\n}\n</code></pre> <p>Response</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"return\": \"2\",\n\"reqid\": \"c97eafef-401f-49d1-bff3-7ce9eaa2c2dd\",\n\"offsetstart\": 0,\n\"offsetend\": 3145728,\n\"filedata\": \"JHg2MxpnGfXLcyZc6CpRSRGOHrL1U1jwQWDCnBXi81JmnwR8SrNHcidJZJcYYb+RdXG/bap7RmkXpPmJArEAvrlADlChhG9YOR1JeeKIiS16UCPsYby ... \"\n}\n}\n</code></pre>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_downloaddata","title":"user_downloadData","text":"<p>After the user handles previous piece of file data, this method is called to get the next piece.</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_4","title":"Parameters","text":"name type comment filehash string file hash to identify a file 1 reqid string the same reqid get from response of user_requestDownload"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_4","title":"Returns","text":"name type comment return string negative: errors; \"2\": file data provided; \"3\": no data and ask for calling user_downloadedFileInfo reqid string to identify download instances when multiple download happen at same time offsetstart number the offset of beginning of the piece of file data, inclusive offsetend number the offset of end of the piece of file data, exclusive filedata string data of the piece of the file 4"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_3","title":"Example","text":"<p>Request</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"method\": \"user_downloadData\",\n\"params\": [\n{\n\"filehash\": \"v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n\"reqid\": \"c97eafef-401f-49d1-bff3-7ce9eaa2c2dd\"\n}\n]\n}\n</code></pre> <p>Response</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"return\": \"2\",\n\"offsetstart\": 3145728,\n\"offsetend\": 6291456,\n\"filedata\": \"MgWLqUng/xnuoF921Q35Pd2jq9PlWFWpYcLFTTJd1on+HUUJAXwDNbtZZPL1hh+EM0VCSwax ... \"\n}\n}\n</code></pre> <p>Another Instance of Response</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"return\": \"3\",\n\"reqid\": \"c97eafef-401f-49d1-bff3-7ce9eaa2c2dd\"\n}\n}\n</code></pre>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_downloadedfileinfo","title":"user_downloadedFileInfo","text":"<p>After the user received all pieces of the file and a response of user_downloadData with return value \"3\", this method is called to let the server verify file information and finish downloading.</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_5","title":"Parameters","text":"name type comment filehash string recalculated file hash upon the received file 1 filesize number size of the file, in byte reqid string the same reqid get from response of user_requestDownload"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_5","title":"Returns","text":"name type comment return string negative: errors; \"0\": successful finished; other values: invalid"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_4","title":"Example","text":"<p>Request</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"method\": \"user_downloadedFileInfo\",\n\"params\": [\n{\n\"filehash\": \"v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n\"filesize\": 10000000,\n\"reqid\": \"c97eafef-401f-49d1-bff3-7ce9eaa2c2dd\"\n}\n]\n}\n</code></pre> <p>Response</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"return\": \"0\"\n}\n}\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#share-a-file","title":"Share a File","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestshare","title":"user_requestShare","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_6","title":"Parameters","text":"name type comment filehash string file hash to identify a file 1 walletaddr string wallet address of the user account duration number duration in second sharing the file privateflag bool if the file is private"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_6","title":"Returns","text":"name type comment return string negative: errors; \"0\": success; other values: invalid shareid string uniq identifier for this sharing sharelink string link for accessing this shared file"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_5","title":"Example","text":"<p>Request</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"method\": \"user_requestShare\",\n\"params\": [\n{\n\"filehash\": \"v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n\"walletaddr\": \"st19nn9fnlzkpm3hah3pstz0wq496cehclpru8m3u\",\n\"duration\": 3600,\n\"privateflag\": false\n}\n]\n}\n</code></pre> <p>Response</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"return\": \"0\",\n\"shareid\": \"78a8fe38a826fed4\",\n\"sharelink\": \"RHumTB_78a8fe38a826fed4\"\n}\n}\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#stop-sharing-a-file","title":"Stop Sharing a File","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requeststopshare","title":"user_requestStopShare","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_7","title":"Parameters","text":"name type comment walletaddr string wallet address of the user account shareid string a uniq identifier for this sharing"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_7","title":"Returns","text":"name type comment return string negative: errors; \"0\": success; other values: invalid"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_6","title":"Example","text":"<p>Request</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"method\": \"user_requestStopShare\",\n\"params\": [\n{\n\"walletaddr\": \"st19nn9fnlzkpm3hah3pstz0wq496cehclpru8m3u\",\n\"shareid\": \"78a8fe38a826fed4\"\n}\n]\n}\n</code></pre> <p>Response</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"return\": \"0\"\n}\n}\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#list-shared-files","title":"List shared files","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestlistshare","title":"user_requestListShare","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_8","title":"Parameters","text":"name type comment walletaddr string wallet address of the user account page number the list is paginated. Page number start from 0."},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_8","title":"Returns","text":"name type comment return string negative: errors; \"0\": success; other values: invalid fileinfo array list of shared files <p>In fileinof, these objects are included</p> name type comment filesize number size of the file, in byte filehash string file hash to identify the file 1 filename string name of the file linktime number unix epoch time when the file started being shared linktimeexp number unix epoch time when file share is expired shareid string a uniq identifier for this sharing sharelink string the link for accessing this shared file"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_7","title":"Example","text":"<p>Request</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"method\": \"user_requestListShare\",\n\"params\": [\n{\n\"walletaddr\": \"st19nn9fnlzkpm3hah3pstz0wq496cehclpru8m3u\",\n\"page\": 0\n}\n]\n}\n</code></pre> <p>Response</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"return\": \"0\",\n\"fileinfo\": [\n{\n\"filehash\": \"v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n\"filesize\": 10000000,\n\"filename\": \"file2_10M_jan20\",\n\"linktime\": 1675051834,\n\"linktimeexp\": 1675055434,\n\"shareid\": \"23929411ce338824\",\n\"sharelink\": \"udixcc_23929411ce338824\"\n},\n{\n\"filehash\": \"v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n\"filesize\": 10000000,\n\"filename\": \"file2_10M_jan20\",\n\"linktime\": 1675051919,\n\"linktimeexp\": 1675055519,\n\"shareid\": \"76d88022afb10203\",\n\"sharelink\": \"OqhU3X_76d88022afb10203\"\n},\n{\n\"filehash\": \"v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n\"filesize\": 10000000,\n\"filename\": \"file2_10M_jan20\",\n\"linktime\": 1675051426,\n\"linktimeexp\": 1690603426,\n\"shareid\": \"9025a905e28fe791\",\n\"sharelink\": \"UfBayn_9025a905e28fe791\"\n}\n],\n\"totalnumber\": 3\n}\n}\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#download-a-shared-file","title":"Download a Shared File","text":"<p>There are for methods to be used to download a shared file. </p> <ul> <li>user_requestGetShared: get information of shared file</li> <li>user_requestDownloadShared: similar to user_requestDownload method for downloading a file, start downloading the shared file</li> <li>user_downloadData: same method used for downloading a file, downloading a piece of file data  </li> <li>user_downloadedFileInfo: same method used for downloading a file, requesting file verification</li> </ul>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestgetshared","title":"user_requestGetShared","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_9","title":"Parameters","text":"name type comment walletaddr string wallet address of the user account walletpubkey string public key of wallet address sharelink string link for accessing this shared file"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_9","title":"Returns","text":"name type comment return string negative: errors; \"4\": got shared file info; other values: invalid reqid string to identify download instances when multiple download happen at same time filehash string file hash to identify a file"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_8","title":"Example","text":"<p>Request</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"method\": \"user_requestGetShared\",\n\"params\": [\n{\n\"walletaddr\": \"st19nn9fnlzkpm3hah3pstz0wq496cehclpru8m3u\",\n\"walletpubkey\": \"stpub1qdaazld397esglujfxsvwwtd8ygytzqnj5ven52guvvdpvaqdnn52ecsjms\",\n\"sharelink\": \"j05U4M_25926f167e917c01\"\n}\n]\n}\n</code></pre> <p>Response</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"return\": \"4\",\n\"reqid\": \"d9bb9abe-32eb-4215-b33b-7d6372127774\",\n\"filehash\": \"v05ahm52b88i4lh1epel0cmce6606duatmml4o48\"\n}\n}\n</code></pre>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestdownloadshared","title":"user_requestDownloadShared","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_10","title":"Parameters","text":"name type comment filehash string file hash to identify a file 1 walletaddr string wallet address of the user account walletpubkey string public key of wallet address signature string signed on message \"filehash\" + \"walletaddr\" reqid string the same reqid get from response of user_requestGetShared"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_10","title":"Returns","text":"name type comment return string negative: errors; \"4\": got shared file info; other values: invalid reqid string to identify download instances when multiple download happen at same time offsetstart number the offset of beginning of the piece of file data, inclusive offsetend number the offset of end of the piece of file data, exclusive filedata string data of the piece of the file 4"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_9","title":"Example","text":"<p>Request</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"method\": \"user_requestDownloadShared\",\n\"params\": [\n{\n\"filehash\": \"v05ahm52b88i4lh1epel0cmce6606duatmml4o48\",\n\"walletaddr\": \"st19nn9fnlzkpm3hah3pstz0wq496cehclpru8m3u\",\n\"walletpubkey\": \"stpub1qdaazld397esglujfxsvwwtd8ygytzqnj5ven52guvvdpvaqdnn52ecsjms\",\n\"signature\": \"c45dff7b83a8410cbaea8af8b0d7296634cb7a11f7621e2fa6c6f5537f978b1733ab19ef38659bf0f9c9f9e568827926d26b30540023607f3863dfb944b1633d00\",\n\"reqid\": \"d9bb9abe-32eb-4215-b33b-7d6372127774\"\n}\n]\n}\n</code></pre> <p>Response</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"return\": \"2\",\n\"reqid\": \"d9bb9abe-32eb-4215-b33b-7d6372127774\",\n\"offsetstart\": 0,\n\"offsetend\": 3145728,\n\"filedata\": \"toQwnWMGAYSAn5vyv11p8XYM5FcIgOiavQnczxhaNjsKWvOskMK9QQjkfzzyrBbiCmxUjqk ... \"\n}\n}\n</code></pre>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestdownloaddata","title":"user_requestDownloadData","text":"<p>Please see same method under section Download a File</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_downloadedfileinfo_1","title":"user_downloadedFileInfo","text":"<p>Please see same method under section Download a File</p> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#get-ozone-balance","title":"Get Ozone Balance","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestgetozone","title":"user_requestGetOzone","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_11","title":"Parameters","text":"name type comment walletaddr string wallet address of the user account"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_11","title":"Returns","text":"name type comment return string negative: errors; \"0\": got shared file info; other values: invalid ozone string value of ozone balance"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_10","title":"Example","text":"<p>Request</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"method\": \"user_requestGetOzone\",\n\"params\": [\n{\n\"walletaddr\": \"st19nn9fnlzkpm3hah3pstz0wq496cehclpru8m3u\"\n}\n]\n}\n</code></pre> <p>Response</p> <pre><code>{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"return\": \"0\",\n\"ozone\": \"5982936846405\"\n}\n}\n</code></pre> <p></p> <ol> <li> <p>filehash uses MD5\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>the message for signature is \\ + \\, e.g. the string of \"v05ahm52b88i4lh1epel0cmce6606duatmml4o48st19nn9fnlzkpm3hah3pstz0wq496cehclpru8m3u\" when file hash is \"v05ahm52b88i4lh1epel0cmce6606duatmml4o48\" and wallet address is \"st19nn9fnlzkpm3hah3pstz0wq496cehclpru8m3u\"\u00a0\u21a9\u21a9 <li> <p>after getting signed, the signature bytes are encoded into hex string.\u00a0\u21a9\u21a9</p> </li> <li> <p>data is encoded using Base64\u00a0\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>smd://\\/\\ \u21a9"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/","title":"Setup and run a SDS Resource Node","text":"<p>The Stratos Decentralized Storage (SDS) network is a scalable, reliable, self-balancing elastic acceleration network. We can simply take it as a decentralized file system suitable for running on general-purpose hardware.</p> <p>SDS is composed of many Resource Nodes that store data, and a few Meta Nodes that coordinate with each other.</p> <p>Note that provides their resource(disk/bandwidth/computation power) for SDS is called Resource Node.</p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#requirements","title":"Requirements","text":"<p>Tip</p> <p>Unlike other projects, Stratos does not require expensive GPUs and high wattage power supplies, but the node needs to provide enough bandwidth and storage capacity to ensure the traffic on the node can reach the reward requirements.</p> <ul> <li> <p>Recommended Hardware</p> <ul> <li>CPU           i5 (4 cores)</li> <li>RAM           16GB</li> <li>Hard disk     2TB</li> <li>Bandwidth     100M</li> </ul> </li> </ul> <p></p> <ul> <li> <p>Software(tested version)</p> <ul> <li>Ubuntu 18.04+</li> <li>Go 1.18+ linux/amd64</li> </ul> </li> </ul>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#keywords","title":"Keywords","text":"<p>There are some keywords that are widely used in SDS. We describe them as</p> <ul> <li> <p><code>resource node</code>(<code>PP</code> node): Node that participates in the Stratos Resource Network by providing their disk/bandwidth/computation power to earn rewards in the Proof-of-Traffic(PoT) model.</p> </li> <li> <p><code>meta node</code>(<code>SP</code> nodes): Node that manages the tasks in the Resource Network between resource nodes, including indexing all content, auditing the traffic report and communicating between Resource Network and Stratos-chain through a relay mechanism.</p> </li> <li> <p><code>active resource node</code>: A resource node that has been activated by depositing to the Stratos-chain and registering to a meta node. It is ready to receive tasks assigned by the meta node.</p> </li> <li> <p><code>suspended resource node</code>: A resource node that has not satisfied the performance KPI evaluation criteria and is suspended from receiving further tasks from the meta node.</p> </li> <li> <p><code>traffic</code>: The data volume evaluated in the Resource Network. The incentive for all participants in the Stratos Ecosystem is based on traffic.</p> </li> <li> <p><code>STOS</code>(Stratos Tokens): The native token facilitating value circulation in Stratos Ecosystem.</p> </li> <li> <p><code>ozone</code>(oz): The traffic unit used in Stratos Ecosystem.</p> </li> <li> <p><code>epoch</code>: The Proof-of-Traffic evaluation periodic window. The traffic for the Resource Network is evaluated at the end of each epoch.</p> </li> <li> <p><code>value network</code>: The Stratos-chain, the network that circulates all values in the Stratos Ecosystem.</p> </li> </ul>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#setup-environment","title":"Setup Environment","text":"<p>Tip</p> <p>In order to run an SDS resource node, you need to build SDS source code which requires <code>Go 1.18+</code>, <code>git</code>, <code>curl</code> and <code>make</code> installed.</p> <p>If you have installed them previously, just skip this section. Otherwise, please install them as the following</p> <p>This process depends on your operating system.</p> <p></p> <ul> <li>Linux Users</li> </ul> <p>The following example is based on Ubuntu 18.04+ 64-bit(Debian) and assumes you are using a terminal environment by default. Please run the equivalent commands if you are running other Linux distributions.</p> <pre><code># Update the system\nsudo apt update\nsudo apt upgrade\n\n# Install git, snap and make(you can also install them separately as your needs)\nsudo apt install git build-essential curl snapd --yes\n\n# Install Go 1.18+ with Snap and export environment variables(You can also install Go 1.18+ in your way)\nsudo snap install go --classic\necho 'export GOPATH=\"$HOME/go\"' &gt;&gt; ~/.profile\necho 'export GOBIN=\"$GOPATH/bin\"' &gt;&gt; ~/.profile\necho 'export PATH=\"$GOBIN:$PATH\"' &gt;&gt; ~/.profile\nsource ~/.profile\n</code></pre> <p></p> <ul> <li>MacOS Users</li> </ul> <p>To install the required build tools, you can easily install Xcode from the Mac App Store.</p> <p>The best practice to install Go is to use Homebrew.</p> <pre><code># Install software using Homebrew\nbrew install go git curl\n\n# Export environment variables\necho 'export GOPATH=\"$HOME/go\"' &gt;&gt; ~/.profile\necho 'export GOBIN=\"$GOPATH/bin\"' &gt;&gt; ~/.profile\necho 'export PATH=\"$GOBIN:$PATH\"' &gt;&gt; ~/.profile\nsource ~/.profile\n</code></pre> <p></p> <ul> <li>Windows Users</li> </ul> <p>It is possible to build and run the software on Windows. However, we did not test it on Windows completely. It may give you unexpected results, or it may require additional setup.</p> <p>An alternative option is to install a separate virtual Linux system using VirtualBox or VMware Workstation</p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#setup-sds-resource-node","title":"Setup SDS resource node","text":"<ul> <li>Compile the binary executables with source code</li> </ul> <p>Before the following steps, please make sure you have <code>Go 1.18+</code> installed (link).</p> <pre><code>git clone https://github.com/stratosnet/sds.git\ncd sds\ngit checkout tags/v0.9.0\nmake build\n</code></pre> <p>Then you will find the binary executable <code>ppd</code> under the folder <code>target</code></p> <p></p> <ul> <li>Installing the binary executable</li> </ul> <p>The binary can be installed to the default <code>$GOPATH/bin</code> folder by running:</p> <pre><code>make install\n</code></pre> <p>The binary should then be runnable from any folder if you have set up <code>go env</code> properly.</p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#create-sds-resource-node","title":"Create SDS resource node","text":""},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#create-a-root-directory","title":"Create a root directory","text":"<p>To start a resource node, you need to be in a directory dedicated to your resource node.</p> <p>Create a new directory, or go to the root directory of your existing node.</p> <p>In the following instruction, we assume you have entered the root directory of the resource node.</p> <pre><code># create a new folder \ncd $HOME\nmkdir rsnode\n# Make sure we are inside the root directory of the resource node\ncd rsnode\n</code></pre> <p></p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#configure-sds-resource-node","title":"Configure SDS resource node","text":"<p>Next, you need to generate the configuration file and its accounts of this resource node. The command <code>ppd config</code> will help you to generate necessary configurations.</p> <p></p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#generaterecover-wallet","title":"Generate/Recover wallet","text":"<p>The <code>ppd config</code> command consists of several flags or subcommand. Let take a look at its general definition using <code>ppd config -h</code>.</p> <pre><code>ppd config -h\ncreate default configuration file\nUsage:\nppd config [flags]\nppd config [command]\nAvailable Commands:\naccounts    create accounts for the node\nFlags:\n-p, --create-p2p-key   create p2p key with config file, need interactive input\n-w, --create-wallet    create wallet with config file, need interactive input\n-h, --help             help for config\nGlobal Flags:\n-c, --config string   configuration file path  (default \"./configs/config.toml\")\n-r, --home string     path for the node (default \"&lt;root directory of your resource node&gt;\")\nUse \"ppd config [command] --help\" for more information about a command.\n</code></pre> <p></p> <p>Tip</p> <p>There are two ways to generate a configuration file and create (or recover) a wallet:</p> <ul> <li> <p>Option 1 will generate a configuration file and allow you to create or recover a wallet.</p> </li> <li> <p>Option 2 will generate a configuration file and a wallet automatically.</p> </li> </ul> <p></p> <p>Option 1: Using <code>ppd config -w -p</code> command (recommended)</p> <p>When asked to <code>input bip39 mnemonic</code>,</p> <p>Input your mnemonic -&gt; recovers an existing wallet account;</p> <p>keep it blank -&gt; generates a new wallet account</p> <p>Usage:</p> <pre><code># Make sure we are inside the root directory of the resource node\ncd rsnode\n# to create config with interactive key creation\nppd config -w -p\n</code></pre> Example (recovering an existing wallet account)  You will get the same wallet account as your existing one  <pre><code># Make sure we are inside the root directory of the resource node\ncd rsnode\nppd config -w -p\n[INFO]2022/02/22 11:25:19 setting.go:125: The config at location /home/hong/stratos/sds0113/sds/rsnode2/configs/config.toml does not exist\ngenerating default config file\n[INFO]2022/02/22 11:25:19 node.go:67: No P2P key specified in config. Attempting to create one...\nEnter password:               # enter your P2P key password\nEnter password again:\n[INFO]2022/02/22 11:25:21 setting.go:251: finished changing configuration file  P2PAddress:  stsdsp2p1arpvg0wthng0yty06ay0uup3vw7k3upm586few\nNo wallet key specified in config. Attempting to create one...\nEnter wallet nickname: wallet1            # enter your wallet nickname\nEnter password:                           # enter your wallet key password\nEnter password again:\n# Inputting the mnemonic phrase here will recovering an existing wallet account(mnemonic will not show on the screen). \ninput bip39 mnemonic (leave blank to generate a new one)   # It is better to use copy and paste for inputting. \ninput hd-path for the account, default: \"m/44'/606'/0'/0/0\" :      # Make sure to use the default hd-path\n[INFO] 2022/02/22 11:25:34 setting.go:251: finished changing configuration file  WalletAddress:  st10t5chdnhx6myggwwhfq7q39hnjhzapau9yy6tv\nsave wallet password to config file: Y(es)/N(o): Y        # please input Y or Yes\nsave the mnemonic phase properly for future recover:\n=======================================================================  climb work able lock find blind fire cement exotic outdoor eyebrow panther repeat veteran prosper speak identify wolf mind decorate genre arctic bean gauge\n=======================================================================\n</code></pre> Example (creating a new wallet account)  You will get a new wallet account  <pre><code># Make sure we are inside the root directory of the resource node\ncd rsnode\n\nppd config -w -p\n[INFO]2022/02/14 10:19:09 setting.go:122: The config at location ./configs/config.toml does not exist\ngenerating default config file\n[INFO]2022/02/14 10:19:09 node.go:67: No P2P key specified in config. Attempting to create one...\nEnter password:                           # enter your P2P key password\nEnter password again:\n[INFO]2022/02/14 10:19:29 setting.go:245: finished changing configuration file  P2PAddress:  stsdsp2p1k70qsfx70s2vkyn737hu3yj50ghrn5yz53dzwx\nNo wallet key specified in config. Attempting to create one...\nEnter wallet nickname: wallet2            # enter your wallet nickname\nEnter password:                           # enter your wallet key password\nEnter password again:\n\n# Leaving the following blank will generate a new wallet account automatically.\ninput bip39 mnemonic (leave blank to generate a new one)  input hd-path for the account, default: \"m/44'/606'/0'/0/0\" :           # Make sure to use the default hd-path\n[INFO]2022/02/14 10:19:48 setting.go:245: finished changing configuration file  WalletAddress:  st1cmu0e9qlypg6j2ck8v5gfty6sxj2jszz84h8gf\nsave wallet password to config file: Y(es)/N(o): Y                      # please input Y or Yes\nsave the mnemonic phase properly for future recover:\n=======================================================================  interest liberty thrive maple trip fringe nurse deal fresh sport cool hip gate indoor brown mansion what table three wise design master warm apple\n=======================================================================\n</code></pre> <p></p> <p>Option 2: Using <code>ppd config</code> and <code>ppd config accounts</code> commands</p> <pre><code># Make sure we are inside the root directory of the resource node\ncd rsnode\n\n# to create config without interactive key creation\nppd config\n\n# to create wallet key and p2p key\nppd config accounts -n &lt;Wallet-Name&gt; -p &lt;Wallet-Password&gt; -s\n</code></pre> Example <pre><code>ppd config\n[INFO]2022/02/14 12:27:36 setting.go:122: The config at location ./configs/config.toml does not exist\ngenerating default config file\nppd config accounts  -n wallet2 -p 123 -s\ngenerating new p2p key\n[INFO]2022/02/14 12:38:17 setting.go:245: finished changing configuration file  P2PAddress:  stsdsp2p10kxlukmq8a50erv8f5s3mfx8endrrnnseeljlq\ngenerated mnemonic is :  =======================================================================  climb work able lock find blind fire cement exotic outdoor eyebrow panther repeat veteran prosper speak identify wolf mind decorate genre arctic bean gauge\n=======================================================================\n</code></pre> <p></p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#directory-structure","title":"Directory structure","text":"<p>After the above command executed successfully, Your <code>rsnode</code> folder should include directories and files similar to the following.</p> <pre><code>.\n\u251c\u2500\u2500 accounts\n\u2502   \u251c\u2500\u2500 st10t5chdnhx6myggwwhfq7q39hnjhzapau9yy6tv.json\n\u2502   \u2514\u2500\u2500 stsds1hez7aewx6srjtrw3064w3qy4dk22uv0cx7jxww.json\n\u2502   \u2514\u2500\u2500 config.toml\n\u2514\u2500\u2500 tmp\n\u2514\u2500\u2500 logs\n\u2514\u2500\u2500 stdout.log\n</code></pre> <p><code>accounts</code> folder keeps important account info, including the <code>Wallet Address</code>(starting with <code>st</code>) and <code>P2P Address</code>(starting with <code>stsds</code>) of your SDS resource node.</p> <p><code>configs</code> folder includes all configurations for this SDS resource node. User may need to modify <code>configs/config.toml</code> file to adapt to specific requirements for the Tropos Incentive Testnet</p> <p><code>tmp</code> folder is hols the logs and outputs.</p> <p></p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#edit-configuration-file","title":"Edit configuration file","text":"<p>You will need to edit a few lines in the file <code>configs/config.toml</code> to specify the blockchain you want to connect to.</p> <p>Open config file and make the following modifications:</p> <pre><code>nano config/config.toml\n</code></pre> <p></p> <ul> <li>Verify/Change the SDS version</li> </ul> <p>Make sure or change the SDS version section in the <code>configs/config.toml</code> file as the following.</p> <pre><code>[version]\napp_ver = 9\nmin_app_ver = 9\nshow = 'v0.9.0'\n</code></pre> <p></p> <ul> <li>Connect to the Stratos-chain testnet</li> </ul> <pre><code>stratos_chain_url = 'https://rest-tropos.thestratos.org:443' </code></pre> <p></p> <ul> <li>Designate the meta node list</li> </ul> <pre><code>[[sp_list]]\np2p_address = 'stsds12uufhp4wunhy2n8y5p07xsvy9htnp6zjr40tuw'\np2p_public_key = 'stsdspub1kst98p2642fv8eh8297ppx7xuzu7qjz67s9hjjhxjxs834md7e0sdnut0p'\nnetwork_address = '18.130.202.53:8888'\n[[sp_list]]\np2p_address = 'stsds1wy6xupax33qksaguga60wcmxpk6uetxt3h5e3e'\np2p_public_key = 'stsdspub1yyfl7ljwc68jh2kuaqmy84hawfkak4fl2sjlpf8t3dd00ed2eqeqxtawdt'\nnetwork_address = '35.74.33.155:8888'\n[[sp_list]]\np2p_address = 'stsds1nds6cwl67pp7w4sa5ng5c4a5af9hsjknpcymxn'\np2p_public_key = 'stsdspub16mz8w7dygzrsarhh76tnpz0hkqdq44u7usvtnt2qd9qgp8hs8wssx2rrlq'\nnetwork_address = '52.13.28.64:8888'\n[[sp_list]]\np2p_address = 'stsds1403qtm2t7xscav9vd3vhu0anfh9cg2dl6zx2wg'\np2p_public_key = 'stsdspub1zarvtl2ulqzw3t42dcxeryvlj6yf80jjchvsr3s8ljsn7c25y3hqnetwsy'\nnetwork_address = '3.9.152.251:8888'\n[[sp_list]]\np2p_address = 'stsds1mr668mxu0lyfysypq88sffurm5skwjvjgxu2xt'\np2p_public_key = 'stsdspub14v8yu6nzem787nfnwvzrfvpc5f7thktsqjts6xp4cy4a2j4rgm7s3ar0jv'\nnetwork_address = '35.73.160.68:8888'\n[[sp_list]]\np2p_address = 'stsds18xg40a4msgr5ndu2l7k5hv6pudemr9dufcel4w'\np2p_public_key = 'stsdspub1wwhlr2jsfupjsp87ucd3ddy4s5ykcd4khqy3wg7san5kjlw8da5qa7cgcy'\nnetwork_address = '18.223.175.117:8888'\n[[sp_list]]\np2p_address = 'stsds1ftcvm2h9rjtzlwauxmr67hd5r4hpxqucjawpz6'\np2p_public_key = 'stsdspub1q9rk5zwkzfnnszt5tqg524meeqd9zts0jrjtqk2ly2swm5phlc2qjnlj5c'\nnetwork_address = '46.51.251.196:8888'\n</code></pre> <p></p> <ul> <li>Change the value of <code>chain_id</code></li> </ul> <p>The value of <code>chain_id</code> is visible on <code>Stratos Explorer</code> right next to the search bar at the top of the page.</p> <p>Currently, for the Tropos Incentive Testnet, set <code>chain_id</code> as:</p> <pre><code>chain_id = 'tropos-5'\n</code></pre> <p></p> <ul> <li>Set the value of <code>network_address</code></li> </ul> <p>Finally, make sure to set the <code>network_address</code> to your public IP address and port.</p> <p>If your resource node is behind a router, you probably need to configure port forwarding on the router, like</p> <pre><code># if your node is behind a router, you probably need to configure port forwarding on the router\nport = '18081'\nnetwork_address = 'your node external ip' </code></pre> <p>\ud83d\udca1 It is not the meta node network_address in <code>[[sp_list]]</code> section</p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#run-sds-resource-node","title":"Run SDS resource node","text":"<ul> <li>Acquire test STOS tokens from (<code>faucet</code>)</li> </ul> <p>Before manipulating your resource node, you need to acquire some STOS tokens.</p> <p>You can get test tokens through the faucet API</p> <pre><code>curl --header \"Content-Type: application/json\" --request POST --data '{\"denom\":\"stos\",\"address\":\"your-wallet-address\"} ' https://faucet-tropos.thestratos.org/credit\n</code></pre> <p>Replace your-wallet-address with the wallet address generated earlier.</p> <p></p> <ul> <li>Start the SDS resource node</li> </ul> <p>After setting up configuration properly, filled your wallet with some tokens, you can now start your resource node.</p> <p>Tip</p> <p><code>ppd start</code> must be running in the background at all times so it's recommended to start it in a tmux window by running this command first:</p> <pre><code>tmux new -s rsnode\n</code></pre> <pre><code># Make sure we are inside the root directory of the resource node\ncd rsnode\n\n# start the resource node\nppd start\n</code></pre>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#interact-with-sds-resource-node","title":"Interact with SDS resource node","text":"<ul> <li>Interactive operation via <code>ppd terminal</code></li> </ul> <p>In order to interact with the resource node, you need to open A NEW COMMAND-LINE TERMINAL, and enter the root directory of the same resource node.</p> <p>Then, use <code>ppd terminal</code> commands to start the interaction with resource node.</p> <pre><code># Open a new command-line terminal\n# Make sure we are inside the root directory of the same resource node\ncd rsnode\n\n# Interact with resource node through a set of \"ppd terminal\" subcommands\nppd terminal\n</code></pre> <p><code>ppd terminal</code> needs to be executed in A NEW COMMAND-LINE TERMINAL (called as <code>ppd terminal</code> terminal).</p> <p>All <code>ppd terminal</code> subcommands should be executed in this <code>ppd terminal</code> terminal.</p> <p>Hereafter, we will use a set of <code>ppd terminal</code> subcommands    to communicate with the resource node in <code>ppd terminal</code>.</p> <p></p> <ul> <li>Registering the resource node to a meta node</li> </ul> <p>The resource node(PP) should be registered to a meta node(SP) before doing anything else.</p> <p>In <code>ppd terminal</code>, input one of the two following identical subcommands</p> <pre><code>rp\n\n#or\nregisterpeer\n</code></pre> <p></p> <ul> <li>Uploading/Downloading files without staking</li> </ul> <p>You do not need to stake anything if you just want to upload/download files. </p> <p>After registering your resource node(<code>rp</code> subcommand), purchase enough <code>ozone</code> using the <code>prepay</code> subcommand. </p> <p>Then, use <code>put</code> or <code>get</code> subcommands to upload/download files.</p> <pre><code>prepay &lt;amount&gt; &lt;fee&gt; [gas]\n# example: prepay 1stos 6000000gwei 6000000 \n</code></pre> <pre><code>put &lt;filepath&gt;\n\n# example: put /home/user/files/movie.mp4\nget &lt;sdm://account/filehash&gt; [saveAs]  # example: get sdm://st172v4u8ysfgaphjs8uyy0svvc6d6tzl6gp07kn4/v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\n</code></pre> <p>This is a quick way for users to upload/download their files. Resource node can go offline at any time without being punished. On the other hand, since the resource node is not activated, users will not receive mining rewards(<code>utros</code>).</p> <p></p> <ul> <li>Activating the resource node with staking</li> </ul> <p>You can activate your resource node by staking an amount of tokens. </p> <p>After it is activated successfully,your resource node starts to receive tasks from meta nodes and thus gaining mining rewards automatically.</p> <pre><code>activate &lt;amount&gt; &lt;fee&gt; [gas] </code></pre> <p><code>amount</code> is the amount of tokens you want to stake. 1stos = 10^9gwei = 10^18wei.</p> <p><code>fee</code> is the amount of tokens to pay as a fee for the activation transaction. 10000wei would work. It will use default value if no fee amount is provided.</p> <p><code>gas</code> is the amount of gas to pay for the transaction. 1000000 would be a safe number. It will use default value if no gas amount is provided.</p> <p>Example:</p> <pre><code>activate 2stos 0.01stos 1000000\n</code></pre>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#other-ppd-terminal-commands","title":"Other <code>ppd terminal</code> commands","text":"<p>Here we introduce a set of these <code>ppd terminal</code> subcommands in brief that you can try in the <code>ppd terminal</code> terminal.</p> <p>Please refer to ppd terminal subcommands for more details.</p> <p></p> <ul> <li>Check the current status of a resource node</li> </ul> <pre><code>status\n</code></pre> <p></p> <ul> <li>Update stake of an active resource node</li> </ul> <pre><code>updateStake &lt;stakeDelta&gt; &lt;fee&gt; [gas] &lt;isIncrStake&gt;  </code></pre> <p><code>stakeDelta</code> is the absolute amount of difference between the original and the updated stake. It should be a positive valid token, in the unit of <code>stos</code>/<code>gwei</code>/<code>wei</code>.</p> <p><code>isIncrStake</code> is a boolean flag with <code>false</code> for decreasing the original stake and <code>true</code> for increasing the original stake.</p> <p>When a resource node is suspended, use this command to update its state and re-start mining by increasing its stake.</p> <p>Example:</p> <pre><code>updateStake 1stos 1000000gwei 1000000 true\n</code></pre> <p>The above command will increase 1stos to stake, use 1000000gwei for tx fee and 1000000 for tx gas.</p> <p></p> <ul> <li>Purchase <code>ozone</code></li> </ul> <p>Ozone is the unit of traffic used by SDS. Operations involving network traffic require <code>ozone</code> to be executed.</p> <p>You can purchase ozone with the following command:</p> <pre><code>prepay &lt;amount&gt; &lt;fee&gt; [gas]\n</code></pre> <p><code>amount</code> is the amount of stos tokens you want to spend to purchase ozone.</p> <p></p> <ul> <li>Query ozone balance of a node's wallet</li> </ul> <pre><code>getoz &lt;walletAddress&gt;\n</code></pre> <p></p> <ul> <li>Create a new wallet, input password after prompt</li> </ul> <pre><code>newwallet &lt;walletName&gt; </code></pre> <p></p> <ul> <li>Upload a file</li> </ul> <pre><code>put &lt;filepath&gt;\n</code></pre> <p><code>filepath</code> is the location of the file to upload, starting from your resource node folder. It is better to be an absolute path.</p> <p></p> <ul> <li>Upload a media file for streaming</li> </ul> <p>Streaming is the continuous transmission of audio or video files(media files) from a server to a client.</p> <p>In order to upload a streaming file, first you need to install a tool <code>ffmpeg</code> for transcoding multimedia files.</p> <p></p> <p>In Linux Terminal:</p> <pre><code>sudo apt update\nsudo apt install ffmpeg\n\n# use ffmpeg -version to check its version\nffmpeg -version\n</code></pre> <p></p> <p>In MacOS Terminal:</p> <pre><code>brew update\nbrew install ffmpeg\n</code></pre> <p>Then, back to the <code>ppd terminal</code> terminal, use <code>putstream</code> command to upload a media file</p> <pre><code>putstream &lt;filepath&gt;\n</code></pre> <p><code>filepath</code> is the absolute path of the file to be uploaded, or a relative path starting from the root directory of the resource node.</p> <p></p> <ul> <li>List all uploaded files</li> </ul> <p><code>list</code> or <code>ls</code></p> <pre><code>ls\n</code></pre> <p></p> <ul> <li>Download an uploaded file</li> </ul> <pre><code>get &lt;sdm://account/filehash&gt; [saveAs]\n</code></pre> <p>Tip</p> <p>Every file uploaded to SDS is attributed with a unique file hash.</p> <p>You can view the file hash for each of your files when you <code>list</code> your uploaded files.</p> <p>Use the optional parameter <code>saveAs</code> to rename the file</p> <p>The downloaded file will be saved into <code>download</code> folder by default under the root directory of the SDS resource node.</p> <p></p> <ul> <li>Delete an uploaded file</li> </ul> <pre><code>delete &lt;filehash&gt;\n</code></pre> <p></p> <ul> <li>Share(public) an uploaded file</li> </ul> <pre><code>  sharefile &lt;filehash&gt; &lt;duration&gt; &lt;is_private&gt;\n</code></pre> <p><code>duration</code> is time period(in seconds) when the file share expires. Put <code>0</code> for unlimited time.</p> <p><code>is_private</code> is whether the file share should be protected by a password. Put <code>0</code> for public file without password, and <code>1</code> for private file with a password.</p> <p>After this command has been executed successfully, SDS will provide a password to this shared file, like <code>m216</code>. Please keep this password for future use.</p> <p></p> <ul> <li>List All Shared Files</li> </ul> <pre><code>allshare\n</code></pre> <p></p> <ul> <li>Download a shared file</li> </ul> <pre><code>getsharefile &lt;sharelink&gt; [password]\n</code></pre> <p>Leave the <code>password</code> blank if it's a public shared file.</p> <p><code>sharelink</code> could be found when your use <code>allshare</code> to list all available shared files.</p> <p>The downloaded files will be saved into the folder <code>download</code> by default under the root directory of your resource node.</p> <p></p> <ul> <li>Cancel file share</li> </ul> <pre><code>cancelshare &lt;shareID&gt; </code></pre> <p><code>shareID</code> could be found when your use <code>allshare</code> to list all available shared files</p> <p></p> <ul> <li>View resource utilization</li> </ul> <pre><code># show the resource utilization monitor\nmonitor\n\n# hide the resource utilization monitor\nstopmonitor\n</code></pre>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#check-resource-node-status","title":"Check resource node status","text":"<p>There are a set of Restful APIs to check resource node status and Proof of Traffic(PoT) rewards.</p> <p>You can input the following APIs in an explorer directly. We list some of them here and more details as well as examples can be found in Stratos Chain REST APIs</p> <p></p> <p>Check node registration status(<code>register</code> module)</p> <p></p> <ul> <li>Query total staking state of all registered resource nodes and meta nodes</li> </ul> <pre><code>https://rest-tropos.thestratos.org/register/staking\n</code></pre> <p></p> <ul> <li>Query params of <code>register</code> module</li> </ul> <pre><code>https://rest-tropos.thestratos.org/register/params\n</code></pre> <p></p> <ul> <li>Get all staking info of a specific owner</li> </ul> <pre><code>https://rest-tropos.thestratos.org/register/staking/owner/{owner wallet address}\n</code></pre> <p></p> <ul> <li>Get info of a registered resource node</li> </ul> <pre><code>https://rest-tropos.thestratos.org/register/resource-node/{resource node network address}\n</code></pre> <p></p> <ul> <li>Get info of a registered meta node</li> </ul> <pre><code>https://rest-tropos.thestratos.org/register/meta-node/{meta node network address}\n</code></pre> <p></p> <ul> <li>Get total number of registered resource nodes</li> </ul> <pre><code>https://rest-tropos.thestratos.org/register/resource-count\n</code></pre> <p></p> <ul> <li>Get total number of registered meta nodes</li> </ul> <pre><code>https://rest-tropos.thestratos.org/register/meta-count\n</code></pre> <p></p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#check-pot-rewards","title":"Check PoT rewards","text":"<ul> <li>Query PoT rewards of a wallet_address at a specific epoch</li> </ul> <pre><code>https://rest-tropos.thestratos.org/pot/rewards/wallet/{wallet_address}?epoch={epoch}\n</code></pre> <ul> <li>Query current Pot rewards of a wallet_address</li> </ul> <pre><code>https://rest-tropos.thestratos.org/pot/rewards/wallet/{wallet_address}\n</code></pre> <ul> <li>Query owner's Pot slashing info at a specific height</li> </ul> <pre><code>https://rest-tropos.thestratos.org/pot/slashing/{wallet_adress}?height={height}\n</code></pre> <ul> <li> <p>Check SDS <code>prepay</code> and <code>Ozone</code>(<code>SDS</code> module)</p> </li> <li> <p>Get a simulated prepay result</p> </li> </ul> <p><pre><code>https://rest-tropos.thestratos.org/sds/simulatePrepay/&lt;amount of `wei` to prepay&gt;\n</code></pre> </p> <ul> <li>Get current nozPrice</li> </ul> <p><pre><code>https://rest-tropos.thestratos.org/sds/nozPrice\n</code></pre> </p> <ul> <li>Get current nozSupply</li> </ul> <pre><code>https://rest-tropos.thestratos.org/sds/nozSupply\n</code></pre> <p></p> <p></p>"},{"location":"docs-testnet/incentive-rewards-distribution/","title":"Incentive rewards distribution","text":"<p>Tropos Incentive Testnet will offer SDS resource node providers incentive token rewards TROS(1 TROS = 1,000,000,000 utros) for their effort the same way as the mainnet. <code>The total rewards will be 1% of the mainnet token supply, meaning 1,000,000 STOS</code>.</p> <p>Tip</p> <p>Please be advised that you don't need to use your ERC20 STOS to participate in the incentive testnet. </p> <p>Incentive testnet STOS has no value, only the TROS rewards will have value and TROS will be converted to mainnet STOS.</p> <p>On the incentive testnet, the distribution will be similar but with some adjustments. All the rewards will not be in the form of testnet STOS; rewards token will be named as TROS which will be issued to the wallet of all participants during the period of incentive testnet. Each epoch will distribute 80 TROS as the mining reward.</p> <p>First, there will be no meta node for public testing. Thus, rewards issued to meta nodes will be changed to a minimum number only for testing purposes.</p> <p>Second, the staking token for testnet is distributed for free, so it doesn't reflect the contribution to the network in any sense, we cannot distribute the reward based on staking numbers.</p> <p>The allocation plan for the reward will also be changed accordingly as follows:</p> <pre><code>\ud83c\udfc6 Resource node: 100% of total reward\n\ud83c\udfc6 Meta node: 0% of total reward\n\ud83c\udfc6 Staking: 0% of total reward\n</code></pre> <p>At the end of the incentive testnet, we will calculate the total TROS issued and convert it to mainnet STOS based on the ratio of TROS to Total Incentive STOS, which is 1,000,000 tokens. </p> <p>For example, during the incentive testnet there is a total of 2,000,000 TROS issued; this will make the TROS: STOS converting rate be 2:1, which means that every 2 TROS will withdraw 1 STOS from the mainnet STOS pool.</p> <p></p> <p></p>"},{"location":"docs-testnet/introduction/","title":"Introduction","text":"<p>The purpose of Tropos Incentive Testnet is to validate all the technical design and network topology that can achieve the goal of our project \u2014 to provide a fully decentralized high-efficiency storage. On Incentive testnet we will continue all the testing we employed on testnet; in addition, we will try to ensure the network is functional as in the real world, to build an environment as close to the mainnet as possible.</p> <p>During the Stratos Incentive Network testing period, we will prove the architecture is working as we designed, verify the network's performance can reach the expected level, and confirm the rewarding mechanism is performing as described in the token economy whitepaper.</p> <p>Our goal for the incentive testnet is to ensure we can migrate to the mainnet smoothly and provide powerful decentralized storage to real corporate world users.</p> <p></p> <p></p>"},{"location":"docs-testnet/migrate-rewards/","title":"Migrate Rewards to Tropos-5","text":"<p>Tip</p> <ul> <li> <p>For newcomers, just skip this section and follow the instructions in the rest of this guide to set up <code>tropos-5</code>.</p> </li> <li> <p>For existing users, the incentive reward issued previously will be kept with the same private/public key combination. However, as mentioned above, the account address will be changed in <code>tropos-5</code>.</p> </li> </ul> <p>The balance in the new <code>ethsecp256k1</code> account address will keep the same as that in the old <code>secp256k1</code> account address.   If it is impossible to retrieve the old secp256k1 account public key, resulting in the new <code>ethsecp256k1</code> account   cannot be generated based on the old one, the balance will be transferred to the <code>mature reward</code> of the old <code>secp256k1</code> account.   In this case, you need to migrate the reward to your new <code>ethsecp256k1</code> account.</p> <p>Do not worry about the balance. The only thing you need to do is to check your incentive reward of the old <code>secp256k1</code> account   and withdraw it to the new <code>ethsecp256k1</code> account.</p> <p></p>"},{"location":"docs-testnet/migrate-rewards/#breakdown","title":"Breakdown","text":"<p>Let's break down this task step by step with an example.</p> <p>Suppose you have an existing <code>secp256k1</code> account. It was created as</p> <pre><code>name: cosmosUser0\naddress: st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg\npubkey: '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AmPEqFHLzLPORjHpTCG/Q6SPYnRae7ehf7cKuzvfRs8v\"}'\nmnemonic: \"ocean jar useless fame slice history retreat banana life wing lesson work amount adult tray zone\npayment window since dash immune grunt army deer\"\n</code></pre> <p></p>"},{"location":"docs-testnet/migrate-rewards/#backup-old-wallet","title":"Backup old wallet","text":"<ul> <li>Backup the previous <code>secp256k1</code> account files</li> </ul> <p>By default, under the node folder <code>$HOME/.stchaind</code>, there is <code>keyring-test</code> folder which holds the accounts' info.</p> <p>It looks like</p> <pre><code>.\n\u251c\u2500\u2500 b37acf3e6daa547c8034d27893720a9fcf3eea44.address\n\u2514\u2500\u2500 cosmosUser0.info\n</code></pre> <p>Copy this <code>keyring-test</code> folder to a secure place.</p> <ul> <li>Download the binary and config files for <code>tropos-5</code>. Follow the instructions in the next sections until the <code>Setup a wallet and faucet</code> step. Next, you need to create an <code>ethsecp256k1</code> account based on your old <code>secp256k1</code> account.</li> </ul> <p></p>"},{"location":"docs-testnet/migrate-rewards/#create-new-wallet","title":"Create new wallet","text":"<ul> <li>Create(Recover) a new corresponding <code>ethsecp256k1</code> account:</li> </ul>"},{"location":"docs-testnet/migrate-rewards/#using-mnemonic","title":"Using mnemonic","text":"<p>Using the same mnemonic(recommended)</p> <ul> <li> <p>Remove all the files in <code>keyring-test</code> folder</p> </li> <li> <p>Recover your account with the same mnemonic, i.e.,</p> </li> </ul> <pre><code>stchaind keys add ethUser0 --recover --chain-id=tropos-5 --keyring-backend=test --hd-path=\"m/44'/606'/0'/0/0\"\n</code></pre> <p>Result:</p> <pre><code>&gt; Enter your bip39 mnemonic\nocean jar useless fame slice history retreat banana life wing lesson work amount adult tray zone payment window since dash immune grunt army deer\n- name: ethUser0\naddress: st1d3qtsjyypa639q9kf0wmuf2dn4a7zrnujw84q4\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AmPEqFHLzLPORjHpTCG/Q6SPYnRae7ehf7cKuzvfRs8v\"}'\nmnemonic: \"\"\n</code></pre> <p></p>"},{"location":"docs-testnet/migrate-rewards/#using-stchaind","title":"Using stchaind","text":"<p>Using <code>stchaind keys</code> commands</p> <p>This method uses <code>stchaind keys</code> commands to convert your old <code>secp256k1</code> account into a new <code>ethsecp256k1</code> account in case you don't have the mnemonic words saved. It is an unsafe method  because your private/public key is explicitly print out in the terminal. Please do this on your own hardware machine instead of cloud server. </p> <ul> <li> <p>Keep all the files in <code>keyring-test</code> folder</p> </li> <li> <p>Export <code>cosmosUser0</code></p> </li> </ul> <pre><code>stchaind keys export cosmosUser0 --keyring-backend=test --unsafe --unarmored-hex\n</code></pre> <p>Result: <pre><code>WARNING: The private key will be exported as an unarmored hexadecimal string. USE AT YOUR OWN RISK. Continue? [y/N]: y\n18132eae6f96851959d2787aab9f018d9cfe977c619ee951490c6a1c692f2783          ## exported-key-hex\n</code></pre></p> <p></p> <ul> <li>Delete the old <code>cosmosUser0</code> account</li> </ul> <pre><code>stchaind keys delete cosmosUser0 --keyring-backend=test </code></pre> <p></p> <ul> <li>Unsafe-import-eth-key <code>ethUser0</code></li> </ul> <pre><code>stchaind keys unsafe-import-eth-key ethUser0 18132eae6f96851959d2787aab9f018d9cfe977c619ee951490c6a1c692f2783 --keyring-backend=test\n</code></pre> <p>Result:</p> <pre><code>Enter passphrase to encrypt your key:   ## if you are using `--keyring-backend=test` in your command, use `12345678` as the passphrase\n</code></pre> <p></p> <p>Tip</p> <p>You should use default passphrase <code>12345678</code> if you are using <code>--keyring-backend=test</code>. </p> <p>You can use your own if you are not using the <code>test</code> keyring-backend.</p> <p></p> <ul> <li>Confirm account conversion</li> </ul> <pre><code>stchaind keys list --keyring-backend=test\n</code></pre> <p>Result: <pre><code>- name: ethUser0\ntype: local\naddress: st1d3qtsjyypa639q9kf0wmuf2dn4a7zrnujw84q4\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AmPEqFHLzLPORjHpTCG/Q6SPYnRae7ehf7cKuzvfRs8v\"}'\nmnemonic: \"\"                                       </code></pre></p> <p></p>"},{"location":"docs-testnet/migrate-rewards/#activate-new-wallet","title":"Activate new wallet","text":"<ul> <li>Acquire <code>stos</code> tokens to activate the newly created <code>ethUser0</code> account</li> </ul> <p>For example, you can <code>faucet</code> your account (please replace the value of <code>address</code> with your real account address)</p> <pre><code>curl --header \"Content-Type: application/json\" --request POST --data '{\"denom\":\"stos\",\"address\":\"st1d3qtsjyypa639q9kf0wmuf2dn4a7zrnujw84q4\"}' https://faucet-tropos.thestratos.org/credit\n</code></pre> <p></p>"},{"location":"docs-testnet/migrate-rewards/#start-the-chain","title":"Start the chain","text":"<ul> <li>Start the chain and wait for full synchronization</li> </ul> <pre><code>stchaind start\n</code></pre>"},{"location":"docs-testnet/migrate-rewards/#check-balance","title":"Check balance","text":"<ul> <li>Check the balance in the new <code>ethsecp256k1</code> account</li> </ul> <pre><code>stchaind query bank balances &lt;your new `ethsecp256k1` account address&gt;\n</code></pre> <p>The response to this command determines if your account has been migrated automatically. For example,</p> <p></p>"},{"location":"docs-testnet/migrate-rewards/#with-a-balance-of-utros","title":"With a balance of utros","text":"<pre><code>stchaind query bank balances st1d3qtsjyypa639q9kf0wmuf2dn4a7zrnujw84q4\nbalances:\n- amount: \"233606\"\ndenom: utros\n- amount: \"10000000000000000000\"\ndenom: wei\npagination:\nnext_key: null\ntotal: \"0\"\n</code></pre> <p>Tip</p> <p>In the above example, the balance includes <code>233606 utros</code>. It indicates your account has been migrated automatically. </p> <p>Please skip the following steps, as you can operate the same as before.</p> <p></p>"},{"location":"docs-testnet/migrate-rewards/#without-a-balance-of-utros","title":"Without a balance of utros","text":"<pre><code>stchaind query bank balances st1d3qtsjyypa639q9kf0wmuf2dn4a7zrnujw84q4\nbalances:\n- amount: \"10000000000000000000\"\ndenom: wei\npagination:\nnext_key: null\ntotal: \"0\"\n</code></pre> <p>Tip</p> <p>The response does not include a <code>utros</code> balance, while you actually had it in the old <code>secp256k1</code> account. </p> <p>In other words, if you find your <code>utros</code> balance is missing, please follow the next steps to migrate the incentive reward to the new <code>ethsecp256k1</code> account manually.</p> <p></p> <ul> <li>Check the rewards in the old <code>secp256k1</code> account</li> </ul> <pre><code>curl https://rest-tropos.thestratos.org/pot/rewards/wallet/st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg\n</code></pre> <p>Response Example:</p> <pre><code>{\n\"height\": \"1826\",\n\"result\": {\n\"wallet_address\": \"st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg\",\n\"MatureTotalReward\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"1696408013053\"\n},\n{\n\"denom\": \"wei\",\n\"amount\": \"3576778\"\n}\n],\n\"ImmatureTotalReward\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"872451398\"\n},\n{\n\"denom\": \"wei\",\n\"amount\": \"278865\"\n}\n]\n}\n}\n</code></pre> <p>Tip</p> <p>The above response shows that there are <code>1696408013053utros</code> of mature reward held in your old <code>secp256k1</code> account. </p> <p>Next we will withdraw <code>100ustros</code> to the new <code>ethUser0</code> account for instance.</p> <p></p> <ul> <li>Withdraw mature reward from <code>secp256k1</code> account to the new corresponding <code>ethsecp256k1</code> account using <code>legacy-withdraw</code> command</li> </ul> <pre><code>stchaind tx pot legacy-withdraw --target-address=st1d3qtsjyypa639q9kf0wmuf2dn4a7zrnujw84q4 --from=st1d3qtsjyypa639q9kf0wmuf2dn4a7zrnujw84q4 --amount=100utros --chain-id=tropos-5 --keyring-backend=test --gas=1000000 --gas-prices=1000000000wei -y\n</code></pre> <p></p> <ul> <li>Check the balance in the new <code>ethsecp256k1</code> account again</li> </ul> <pre><code> stchaind query bank balances st1d3qtsjyypa639q9kf0wmuf2dn4a7zrnujw84q4\nbalances:\n- amount: \"100\"\ndenom: utros\n- amount: \"9999000000000000000\"\ndenom: wei\npagination:\nnext_key: null\ntotal: \"0\"\n</code></pre> <p>An amount of <code>100ustros</code> mature reward has been transferred to the new account.</p> <p></p> <ul> <li>Check the balance in the old <code>secp256k1</code> account again</li> </ul> <pre><code>curl https://rest-tropos.thestratos.org/pot/rewards/wallet/st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg\n</code></pre> <p>Response Example:</p> <pre><code>{\n\"height\": \"1937\",\n\"result\": {\n\"wallet_address\": \"st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg\",\n\"MatureTotalReward\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"1696408012953\"\n},\n{\n\"denom\": \"wei\",\n\"amount\": \"3576778\"\n}\n],\n\"ImmatureTotalReward\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"872451398\"\n},\n{\n\"denom\": \"wei\",\n\"amount\": \"278865\"\n}\n]\n}\n}\n</code></pre> <p>Correspondingly, an amount of <code>100ustros</code> mature reward has been withdrawn from the old account.</p> <p>Similarly, you can withdraw all the mature rewards to the new <code>ethsecp256k1</code> account using <code>legacy-withdraw</code> command. Note that only mature reward can be withdrawn immediately.</p> <p>You have migrated your TROS reward to tropos-5 successfully.</p> <p></p> <p></p>"},{"location":"docs-testnet/tropos-5-changes/","title":"Highlight Changes in Tropos-5","text":"<p>After testing and building the binaries v0.9.0, we released the latest version of Stratos-Testnet, with a new chain-id: <code>tropos-5</code>.</p> <p>This version covers several breakthrough improvements and significant performance enhancements. We will highlight the major exciting updates in this section. </p> <p></p>"},{"location":"docs-testnet/tropos-5-changes/#-evm-module","title":"- EVM Module","text":"<p>The integration of EVM module makes Stratos chain compatible with both Ethereum and Cosmos-based ecosystems, facilitating Stratos to apply a variety of DApps and introduce more features.</p> <p></p>"},{"location":"docs-testnet/tropos-5-changes/#-accounts","title":"- Accounts","text":"<p>To compatible with various existing Ethereum DApps, the <code>address</code> and <code>type</code>(from <code>secp256k1</code> to <code>ethsecp256k1</code>) for account have been changed.</p> <p>For example, when checking an account, you will find the differences in <code>address</code> and <code>pub_key</code>.</p> <p>Before:</p> <pre><code>./stchaind query account st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg\n|\n'@type': /cosmos.auth.v1beta1.BaseAccount\naccount_number: \"4\"\naddress: st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg\npub_key:\n\"@type\":\"/cosmos.crypto.secp256k1.PubKey\"\nkey: AmPEqFHLzLPORjHpTCG/Q6SPYnRae7ehf7cKuzvfRs8v\nsequence: \"3\"\n</code></pre> <p>Tropos-5:</p> <pre><code>./stchaind query account st1d3qtsjyypa639q9kf0wmuf2dn4a7zrnujw84q4\n|\n'@type': /cosmos.auth.v1beta1.BaseAccount\naccount_number: \"5\"\naddress: st1d3qtsjyypa639q9kf0wmuf2dn4a7zrnujw84q4\npub_key:\n'@type': /stratos.crypto.v1.ethsecp256k1.PubKey\nkey: AmPEqFHLzLPORjHpTCG/Q6SPYnRae7ehf7cKuzvfRs8v\nsequence: \"1\"\n</code></pre> <p>From <code>tropos-5</code> on, all the accounts will be identified by <code>ethsecp256k1</code>, while the <code>secp256k1</code> will be unavailable.</p> <p></p>"},{"location":"docs-testnet/tropos-5-changes/#-token-denom-and-decimal","title":"- Token Denom and Decimal","text":"<p>Most Existing Ethereum DApps have 18 decimals, e.g., 1 ETH is represented by 10e18 of its natural unit ( 1Ether = 1,000,000,000,000,000,000wei ). Similarly, most ERC-20 tokens simply follow this standard.</p> <p>In order to get much greater precision and be consistent with this rule, the previous token denom <code>ustos</code> (9 decimals) is NOT in use anymore. Instead, a serial of new denominations <code>stos</code>(18 decimals), <code>gwei</code>(9 decimals) and <code>wei</code> have been brought into effect. That is,</p> <pre><code>1stos = 1,000,000,000,000,000,000wei\n1stos = 1,000,000,000gwei\n1gwei = 1,000,000,000wei\n</code></pre> <p>For simplicity, token amount can be easily represented as <code>value</code>+<code>denom</code>. In practice, you can enter <code>1stos</code>, or <code>1000000000gwei</code>, or <code>1000000000000000000wei</code> to indicate the same amount of tokens.</p> <p>In <code>tropos-5</code>, we keep the same reward issued to Resource Node previously. <code>utros</code>(9 decimals) is still the only valid denom for incentive reward as before. i.e.,</p> <pre><code>1tros = 1,000,000,000utros\n</code></pre> <p></p>"},{"location":"docs-testnet/tropos-5-changes/#-software-upgrade","title":"- Software Upgrade","text":"<p>To avoid two critical vulnerabilities in the Cosmos-SDK ( Dragonberry and Elderflower, discovered in October 2022), we have upgraded Cosmos-SDK to v0.45.9.</p> <p>Correspondingly, if you prefer to build and compile the binary from source code, you need to have <code>Go 1.18+</code> installed, rather than the former <code>Go 1.16+</code>.</p> <p></p>"},{"location":"docs-testnet/tropos-5-changes/#-sds-resource-node-maintenance","title":"- SDS Resource Node Maintenance","text":"<p>Resource Node participates in Stratos Decentralized Storage(SDS) activities and thus earns rewards by providing its disk/bandwidth/computation power. It is expected to maintain regular hardware/software updates to prevent from unexpected misbehaves like node crashing, loosing connectivity or getting attacks.</p> <p>In <code>tropos-5</code>, <code>maintenance</code> functionality has been implemented for users to claim when a maintenance is required, without any worry being slashed.</p> <ul> <li><code>maintenance start &lt;duration&gt;</code> command starts a maintenance activity and switches the node into <code>maintenance</code> mode for the requested duration (in seconds);</li> <li>While a Resource Node is in <code>maintenance</code> mode, it will be opt-out from any download/upload/backup tasks;</li> <li>While a Resource Node is in <code>maintenance</code> mode, it will NOT be slashed for its off-line;</li> <li>The maintenance allowance is maxed out after reach 1% up-time per year(around 87h). Then, any maintenance request will be rejected;</li> <li>The maintenance allowance will be tracked and be reset every calendar year for all nodes;</li> <li>When using the <code>maintenance stop</code> to stop the current maintenance, or the maintenance period is over, the node status reverts to <code>offline</code> and is ready to restart mining. It acts as usual to earn rewards or be slashed.</li> </ul> <p></p>"},{"location":"docs-testnet/tropos-5-changes/#-restriction-of-transaction-fees","title":"- Restriction of Transaction Fees","text":"<p>Before <code>tropos-5</code>, transaction fees are not strictly required. To reflect scenarios on mainnet, in <code>tropos-5</code>, transaction fees become a required parameter(s) in each transaction command.</p> <p>Transaction fees in <code>tropos-5</code> follows cosmos-SDK gas calculating rule <code>fees = gas * gas-prices</code>. As a result, there are two options to add up transaction fees to a command,</p> <ul> <li>use <code>--fees=&lt;fees amount&gt;</code> </li> <li>e.g., <code>--fees=10000gwei</code></li> </ul> <p>Or</p> <ul> <li>use <code>--gas=&lt;gas amount&gt;/auto --gas-prices=&lt;gas price&gt;</code></li> <li>e.g., <code>--gas=100000 --gas-prices=0.1gwei</code></li> </ul> <p>Or</p> <ul> <li><code>--gas=auto --gas-prices=0.01gwei</code>(to use the estimated amount of gas)</li> </ul> <p>In <code>tropos-5</code>, a <code>minimum-gas-prices</code> is defined by default in <code>config/app.toml</code> under the node folder:</p> <pre><code>minimum-gas-prices = \"1000000000wei\"\n</code></pre> <p>Indeed, users can determine their own customized value of <code>gas-prices</code> when starting a full node, like <pre><code>./stchaind start --minimum-gas-prices=0.1gwei\n</code></pre></p> <p>Note: the value of <code>minimum-gas-prices</code> should be always greater than <code>10,000,000wei</code>(<code>0.01gwei</code>).  When the given <code>--minimum-gas-prices</code> is less than this threshold, <code>10,000,000wei</code> will be taken instead.</p> <p></p> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/","title":"HowTo Become a Validator","text":"<p>Stratos Chain is based on Tendermint, which relies on a set of validators to secure the network. </p> <p>This document explains how to become a validator step by step.</p> <p>In testing phase, the mechanisms and values are subject to change.</p>"},{"location":"docs-validator-node/how-to-become-a-validator/#what-is-a-validator","title":"What is a Validator?","text":"<p>Info</p> <p>The role of validators is to run a full-node and participate in consensus by broadcasting votes which contain cryptographic signatures signed by their private key. </p> <p>Validators commit new blocks in the blockchain and receive revenue in exchange for their work. </p> <p>They must also participate in governance by voting on proposals. </p> <p>Validators are weighted according to their total stake.</p> <p>A full-node is a program that fully validates transactions and blocks of a blockchain. In practice, running a full node implies running a non-compromised and up-to-date version of the software with low network latency and with no downtime.</p> <p>The weight(i.e. voting power) of a validator is determined by the total amount of staking tokens(STOS) bonded as collateral. These bonded staking tokens can be self-delegated directly by the validator or delegated to the validator by any tokens holders(<code>delegators</code>). Not all the validator candidates will actively participate in block processing. Currently, only the most staked 100 validators, sorted by their weight(voting power), will be in the <code>active</code> list and thus gain block rewards.</p> <p>If the active validators double sign, are frequently offline or do not participate in governance, their staked tokens will be slashed as penalty, which depends on the severity of the violation.</p> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#becoming-a-validator","title":"Becoming a validator","text":"<p>In order to become a validator, First you have installed and run a Stratos-chain full-node. You can setup your full-node if you haven't yet.</p> <p>The following instructions assume you have successfully run a Stratos-chain full-node and followed our instructions by default.</p> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#connect-to-stratos-chain-testnet","title":"Connect to Stratos-chain Testnet","text":"<p>Please refer to full-node setup guide to:</p> <p> download related files</p> <p> start your Stratos-chain full-node and catch up to the latest block height(synchronization)</p> <p> create your Stratos-chain Wallet</p> <p> <code>Faucet</code> or <code>send</code> an amount of tokens to this wallet</p> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#directory-structure","title":"Directory Structure","text":"<p>After the node has finished sync, your Stratos-chain wallet has been created and charged with an amount of tokens, <code>$HOME</code> directory will have a <code>.stchaind</code> directory.</p> <pre><code>.\n\u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 addrbook.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 app.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 client.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 genesis.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 node_key.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 priv_validator_key.json\n\u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 application.db\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 blockstore.db\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 priv_validator_state.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 snapshots\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 state.db\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tx_index.db\n\u2514\u2500\u2500 keyring-test\n\u251c\u2500\u2500 6894f6eef2b730a5f071eed1f3aeb471dfeeeaaf.address\n\u251c\u2500\u2500 d6052b289b78468612a8f97cf59eac184ba852dd.address\n\u251c\u2500\u2500 d704353fe67f948c99d2e3105adc5159c9e8f2af.address\n\u251c\u2500\u2500 f07ab66406c02aa1a398f4fa41a91192fae08997.address\n\u251c\u2500\u2500 fdb03146cb5a83e08785e8d1f083132d4386b4bd.address\n\u251c\u2500\u2500 user0.info\n\u251c\u2500\u2500 user10.info\n\u251c\u2500\u2500 user1.info\n\u251c\u2500\u2500 user2.info\n\u2514\u2500\u2500 user3.info\n</code></pre> <p>Tip</p> <p>By default, the <code>.stchaind</code> have been saved or created under the <code>$HOME</code> folder. If you are not sure what is your <code>$HOME</code> folder, in terminal, use <code>echo $HOME</code> to check. In the following instruction, we suppose you have entered the <code>$HOME</code> folder(use <code>cd $HOME</code>)</p> <p>In <code>config</code> folder:</p> <ul> <li><code>addrbook.json</code> stores peer addresses.</li> <li><code>app.toml</code> contains the default settings required for app.</li> <li><code>config.toml</code> contains various options pertaining to the stratos-chain configurations.</li> <li><code>genesis.json</code> defines the initial state upon genesis of stratos-chain.</li> <li><code>node_key.json</code> contains the node private key and should thus be kept secret.</li> <li><code>priv_validator_key.json</code> contains the validator address, public key and private key, and should thus be kept secret.</li> </ul> <p>In <code>data</code> folder:</p> <ul> <li>All <code>*.db</code> folders are <code>Tendermint</code> databases</li> <li><code>Tendermint</code> uses a <code>write ahead log</code> (WAL) for consensus</li> <li><code>priv_validator_state.json</code>holds the validator's state</li> </ul> <p>In Linux:</p> <pre><code>echo $HOME\n/home/&lt;your login name&gt;\n</code></pre> <p>In Mac:</p> <pre><code>echo $HOME\n/Users/&lt;your login name&gt;\n</code></pre> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#check-your-wallet-account-balance-and-account-type","title":"Check your wallet account balance and account type","text":"<pre><code>stchaind query bank balances st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\nbalances:\n- amount: \"1000000000000000\"\ndenom: utros\n- amount: \"959999999522216000000000\"\ndenom: wei\npagination:\nnext_key: null\ntotal: \"0\"\n</code></pre> <pre><code>stchaind query account st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n|\n'@type': /cosmos.auth.v1beta1.BaseAccount\naccount_number: \"0\"\naddress: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\npub_key:\n'@type': /stratos.crypto.v1.ethsecp256k1.PubKey\nkey: Agkwb1xacHBqeqGBIqRacXgf0qKTnEBPCEtH2vTE01Ke\nsequence: \"4\"\n</code></pre>"},{"location":"docs-validator-node/how-to-become-a-validator/#get-a-new-validators-pubkey","title":"Get a new validator's pubkey","text":"<p>Validators are actors on the network committing new blocks by submitting their votes. It refers to the node itself, not a single person or a single account. In Stratos-chain, The protocol requires a fixed known set of validators, where each validator is identified by their public key. To get the node public key, run the following command under your node folder.</p> <pre><code># Make sure we are inside the home directory\ncd $HOME\nstchaind tendermint show-validator\n\n# expected output\n{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"}\n</code></pre> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#create-a-new-validator","title":"Create a new validator","text":"<p>A validator can be crested by sending a <code>create-validator</code> transaction command</p> <p>DON'T USE MORE STAKING TOKEN THAN YOU HAVE</p> <p>Where:</p> <ul> <li><code>pubKey</code>: The private key associated with this Tendermint PubKey is used to sign prevotes and precommits. Got form step4</li> <li><code>moniker</code>: the validator's name, which is going to be the public name associated to your validator that can easily identify you among all the other validators.</li> <li><code>website</code>: website(Optional)</li> <li><code>description</code>: description(Optional)</li> <li><code>commission-rate</code>: The commission rate on block rewards and fees charged to delegators</li> <li><code>commission-max-rate</code>: The maximum commission rate which this validator can charge. The <code>commission-max-change-rate</code> is used to measure % point change over the commission-rate, e.g., 1% to 2% is a 100% rate increase. This flags cannot be changed after create-validator is processed</li> <li><code>commission-max-change-rate</code>: The maximum daily increase of the validator commission. This flags cannot be changed after create-validator is processed</li> <li><code>min-self-delegation</code>: Minimum amount of tokens the validator needs to have bonded at all time. It is a strictly positive integer that represents the minimum amount of self-delegated staking token your validator must always have. A validator with a self delegation lower than this number will automatically be unbonded.</li> <li>the minimum amount of tokens that must be delegated to be a bonded validator is \"1\".</li> <li>the current <code>chain-id</code> can be found on the <code>Stratos Explorer</code> right next to the search bar at the top of the page. Currently, it is 'tropos-5'.</li> <li>in the testing phase, <code>--keyring-backend=test</code></li> </ul> <p>Example: <pre><code>stchaind tx staking create-validator \\\n--amount=100stos \\\n--pubkey='{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"JwtmYzaX0b+zjuDypUI2+qy8wa/LFtUUUg0+vr11tpg=\"}' \\\n--moniker=\"myValidator\" \\\n--commission-rate=0.10 \\\n--commission-max-rate=0.20 \\\n--commission-max-change-rate=0.01 \\\n--min-self-delegation=1 \\\n--from=st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0 \\\n--chain-id=tropos-5  --keyring-backend=test --gas=auto --gas-prices=1000000000wei -y\n</code></pre></p> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#different-validator-states","title":"Different Validator States","text":"<p>After a validator is created with a <code>create-validator</code> transaction, the validator is in one of three states:</p> <p>States:</p> <ul> <li> <p>In validator set: Validator is in the <code>active</code> set and participates in consensus. Validator can be slashed for misbehavior.</p> </li> <li> <p><code>Jailed</code>: Validator misbehaved and is in jail.</p> </li> <li> <p><code>Unbonded</code>: Validator is not in the active set. Validator cannot be slashed. It is still possible to delegate tokens to an unbonded validator. Undelegating from an unbonded validator is immediate.</p> </li> </ul> <p>In the response of <code>query staking validators</code> command in next step, the value of <code>jailed</code> implies if a validator is in jail, while the value of status implies its bonding <code>status</code>:</p> <pre><code>  // UNSPECIFIED defines an invalid validator status.\n  BOND_STATUS_UNSPECIFIED = 0 // UNBONDED defines a validator that is not bonded.\n  BOND_STATUS_UNBONDED = 1 // UNBONDING defines a validator that is unbonding.\n  BOND_STATUS_UNBONDING = 2 // BONDED defines a validator that is bonded.\n  BOND_STATUS_BONDED = 3 </code></pre> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#view-validatorvalidators","title":"View validator/validators","text":""},{"location":"docs-validator-node/how-to-become-a-validator/#view-all-validators","title":"View all validators","text":"<pre><code>stchaind query staking validators\n- |\npagination:\nnext_key: null\ntotal: \"0\"\nvalidators:\n- commission:\ncommission_rates:\nmax_change_rate: \"0.010000000000000000\"\nmax_rate: \"0.200000000000000000\"\nrate: \"0.100000000000000000\"\nupdate_time: \"2023-01-09T17:08:58.489050300Z\"\nconsensus_pubkey:\n'@type': /cosmos.crypto.ed25519.PubKey\nkey: 69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\ndelegator_shares: \"500000000000.000000000000000000\"\ndescription:\ndetails: \"\"\nidentity: \"\"\nmoniker: node\nsecurity_contact: \"\"\nwebsite: \"\"\njailed: false\nmin_self_delegation: \"1\"\noperator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\nstatus: BOND_STATUS_BONDED\ntokens: \"500000000000\"\nunbonding_height: \"0\"\nunbonding_time: \"1970-01-01T00:00:00Z\"\n</code></pre>"},{"location":"docs-validator-node/how-to-become-a-validator/#view-a-specific-validator","title":"View a specific validator","text":"<pre><code>stchaind query staking validator &lt;your_validator_operator_address&gt;\n</code></pre> <pre><code>stchaind query staking validator stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n|\ncommission:\ncommission_rates:\nmax_change_rate: \"0.010000000000000000\"\nmax_rate: \"0.200000000000000000\"\nrate: \"0.100000000000000000\"\nupdate_time: \"2023-01-09T17:08:58.489050300Z\"\nconsensus_pubkey:\n'@type': /cosmos.crypto.ed25519.PubKey\nkey: 69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\ndelegator_shares: \"500000000000.000000000000000000\"\ndescription:\ndetails: \"\"\nidentity: \"\"\nmoniker: node\nsecurity_contact: \"\"\nwebsite: \"\"\njailed: false\nmin_self_delegation: \"1\"\noperator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\nstatus: BOND_STATUS_BONDED\ntokens: \"500000000000\"\nunbonding_height: \"0\"\nunbonding_time: \"1970-01-01T00:00:00Z\"\n</code></pre> <p>Tip</p> <ul> <li> <p>As an active validator, the value of status should be <code>BOND_STATUS_BONDED</code> and <code>jailed</code> is false.</p> </li> <li> <p>From all validator candidates, only the top 100 validators with the most total stake are the active validators. If a validator's total stake falls below the top 100, then that validator loses their validator privileges. </p> </li> <li> <p>The validator cannot participate in consensus until the stake is high enough to be in the top 100. In <code>Stratos Exporer</code>, the validator is shown in <code>inactive</code> list, but not <code>active</code> list.</p> </li> </ul> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#validator-operations","title":"Validator Operations","text":"<p>We listed some examples of commonly used commands for validators</p> <p>Tip</p> <ul> <li>You may need to replace the values in these examples with your own data</li> <li>The current <code>chain-id</code> can be found on the <code>Stratos Explorer</code> right next to the search bar at the top of the page.</li> <li>In the testing phase, <code>--keyring-backend=test</code></li> </ul> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#-staking-module","title":"- <code>staking</code> module","text":"<p>responsible for the proof of stake (PoS) layer of the Stratos-chain. It contains create/edit validator as well as delegation operations.</p> <p></p> <ul> <li>Create new validator initialized with a self-delegation to it.</li> </ul> <p>Example:</p> <pre><code>stchaind tx staking create-validator \\\n--amount=100stos \\\n--pubkey='{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"JwtmYzaX0b+zjuDypUI2+qy8wa/LFtUUUg0+vr11tpg=\"}' \\\n--moniker=\"myValidator\" \\\n--commission-rate=0.10 \\\n--commission-max-rate=0.20 \\\n--commission-max-change-rate=0.01 \\\n--min-self-delegation=1 \\\n--from=st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0 \\\n--chain-id=tropos-5 --keyring-backend=test --gas=auto --gas-prices=1000000000wei -y\n</code></pre> <p></p> <ul> <li>Edit(modify) an existing validator Info(params). You can add more information to the validator, such as <code>--website</code>, or <code>--memo</code>.</li> </ul> <p>Example:</p> <pre><code>stchaind tx staking edit-validator \\\n--from=user0 \\\n--keyring-backend=test \\\n--min-self-delegation=100  \\\n--memo=\"Change 'min-self-delegation' from 1 to 100\" \\\n--chain-id=tropos-5 --keyring-backend=test --gas=auto --gas-prices=1000000000wei -y\n</code></pre> <p></p> <ul> <li>Delegate an amount of liquid coins to a validator from your wallet.</li> </ul> <p>Example:</p> <pre><code>stchaind tx staking delegate stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k 1000gwei \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5  --keyring-backend=test --gas=auto --gas-prices=1000000000wei\n</code></pre> <p></p> <ul> <li>Unbond an amount of bonded shares from a validator.</li> </ul> <p>Example:</p> <pre><code>stchaind tx staking unbond stvaloper12adksjsd7gcsn23h5jmvdygzx2lfw5q4pyf57u 10000gwei \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh --chain-id=tropos-5  --keyring-backend=test --gas=auto --gas-prices=1000000000wei -y\n</code></pre> <p></p> <ul> <li>Query delegations for an individual delegator on all validators.</li> </ul> <p>Example:</p> <pre><code>stchaind query staking delegations st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n</code></pre> <p></p> <ul> <li>Query details about an individual validator.</li> </ul> <p>Example:</p> <pre><code>stchaind query staking validator stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n</code></pre> <p></p> <ul> <li>Query values for amounts stored in the staking pool.</li> </ul> <p>Example:</p> <pre><code>stchaind query staking pool\n</code></pre> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#-distribution-module","title":"- <code>distribution</code> module","text":"<p>Responsible for distributing staking rewards between validators, delegators, and the Community Pool. It contains operations to claim rewards form a validator and specially, query all slashes of a validator. You cannot withdraw a part of reward. Every time you withdraw, all reward will be withdrawn.</p> <p></p> <ul> <li>Withdraw rewards from a given delegation address and optionally withdraw validator's commission if the delegation address given is a validator operator.</li> </ul> <p>Example:</p> <pre><code>stchaind tx distribution withdraw-rewards stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5  --keyring-backend=test --gas=auto --gas-prices=1000000000wei -y\n</code></pre> <p></p> <ul> <li>Withdraw all delegation rewards for a delegator.</li> </ul> <p>Example:</p> <pre><code>stchaind tx distribution withdraw-all-rewards \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5  --keyring-backend=test --gas=auto --gas-prices=1000000000wei -y\n</code></pre> <p></p> <ul> <li>Query all rewards earned by a delegator, optionally restrict to reward from a single validator.</li> </ul> <p>Example:</p> <pre><code>stchaind query distribution rewards st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda --height=9765\n</code></pre> <p></p> <ul> <li>Query distribution outstanding (un-withdrawn) rewards for a validator and all their delegations.</li> </ul> <p>Example:</p> <pre><code>stchaind query distribution validator-outstanding-rewards stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k --height=9765\n</code></pre> <p></p> <ul> <li>Query all coins in the <code>community pool</code>.</li> </ul> <p>Example:</p> <pre><code>stchaind query distribution community-pool --height=9765\n</code></pre> <p></p> <ul> <li>Query all slashes of a validator for a given block range.</li> </ul> <p>Example:</p> <pre><code>stchaind query distribution slashes stvaloper1095s2f3m60qz48spy3wr52gw8xmy7xqywnxnrq 0 500\n</code></pre> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#-slashing-module","title":"- <code>slashing</code> module","text":"<p>Responsible for enabling Stratos Chain to penalize any validator for an attributable violation of protocol rules by slashing (i.e. partially destroying) the bonded tokens. We usually use <code>unjail</code> command to un-jail a validator and Information about validator's liveness activity is tracked through <code>signing-info</code>.</p> <p></p> <ul> <li>Unjail a jailed validator.</li> </ul> <p>Example:</p> <pre><code>stchaind tx slashing unjail --from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5 --keyring-backend=test --gas=auto --gas-prices=1000000000wei -y\n</code></pre> <p></p> <ul> <li>Use a validators' consensus public key to find the signing-info for that validator.</li> </ul> <p>Example:</p> <pre><code>stchaind query slashing signing-info stvalconspub1zcjduepqsnwlx7rv0ghyvh9tm99zle39df99jt8hccwt8jdrvjs26zqrzh9shdmgyc\n</code></pre> <p>You can find all detailed explanations at</p> <ul> <li>Stratos-chain 'stchaind' Commands(part1)</li> <li>Stratos-chain 'stchaind' Commands(part2)</li> <li>Stratos-chain REST APIs</li> <li>Stratos-Chain gRPC Queries</li> </ul> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#slashing","title":"Slashing","text":"<p><code>slashing</code> is a validator punishment mechanism. If a validator misbehaves, its bonded stake along with its delegators' stake will be slashed. As Cosmos states, there are 3 main faults that can result in slashing of funds for a validator and its delegators:</p> <p>Faults:</p> <ul> <li> <p>Double-sign: occurs when a validating entity (private key) submits two signed messages for the same block. <code>double-sign</code> makes it more difficult for the network to reach consensus.   The system will then permanently burn (\"slash\") that validator's total delegations (stake-backing) by the parameter <code>SlashFractionDoubleSign</code>(5% currently).   All delegators to an offending validator will lose 5% of all STOSs delegated to this validator. At this point the validator will be <code>tombstoned</code>,   which means the validator will be permanently removed from the active validator set, and can never unjail.    </p> </li> <li> <p>Unavailability(Downtime): It occurs when a validator is unavailable to sign transactions on a blockchain for a certain period of time.   for example, if a validator in the active set is offline for too long(missing more than 95% of the last 10.000 blocks),   the validator will be slashed by the parameter <code>SlashFractionDowntime</code>(0.01%)   and temporarily removed from the active set(<code>jailed</code>) for at least the <code>DowntimeJailDuration</code>(10 minutes currently).   If the jailing is due to being offline for too long, the validator can send an <code>unjail</code> transaction in order to re-join the validator set.    </p> </li> <li> <p>Non-voting: If a validator did not vote on a proposal and once the fault is reported, its stake will receive a minor slash.</p> </li> </ul> <p>We have to be aware that even if a validator does not intentionally misbehave, it can still be slashed if</p> <ul> <li>its node crashes</li> <li>loses connectivity</li> <li>gets DDOSed</li> <li>its private key is compromised</li> </ul> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#validators-faq","title":"Validators FAQ","text":""},{"location":"docs-validator-node/how-to-become-a-validator/#why-the-validator-status-is-0-and-cannot-find-it-in-active-list","title":"Why the validator status is <code>0</code> and cannot find it in <code>active</code> list?","text":"<p>Validator status is 0 means that the validator stake is <code>unbonded</code>. When using create-validator transaction, you have defined the flag min-self-delegation, the minimum amount of stake the validator needs to have bonded at all time. If the validator's self-delegated stake falls below this limit, their entire staking pool will unbond and the validator status is 0. Although this validator has been created, it will not show in the validator set.</p> <p>You need to delegate more tokens to this validator until the amount of stake is more than <code>min-self-delegation</code>.</p> <p>In addition, since we limited the number of active validators to the most staked 100 candidates, if your validator's total stake less than that of the 100th validator, your validator will lose its validator privileges and will not display in the <code>active</code> validator set. The minimum stake of an <code>active</code> validator(stake of the 100th validator) can can be found at <code>Stratos Exporer</code>.</p> <p>To solve this problem, you can get more tokens delegated until the total stake of your validator is more than the minimum stake of an <code>active</code> validator using the following command</p> <pre><code>stchaind tx staking delegate &lt;validator-addr&gt; &lt;amount&gt; \\\n--from=&lt;name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend'&gt; \\\n--gas=auto --gas-prices=1000000000wei\n</code></pre> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#why-my-validator-is-jailed-and-inactive","title":"Why my validator is <code>jailed</code> and inactive?","text":"<p>Sometimes, you may see your validator is jailed and the voting power become 0. The shares of the validator are <code>unbonded</code> in order to not affecting the running of the network. If this happens, check your validator information and see if your validator was jailed by sending the following command.</p> <pre><code>stchaind query staking validator &lt;validator_operator_address&gt;\n...\njailed: true\nstatus: 1\n...\n</code></pre> <p>This means the validator is <code>jailed</code> and the validator status is <code>unbonding</code>.</p> <p>Tip</p> <p>A lot of scenarios may lead to a validator jailing, like:</p> <ul> <li>Double-sign. Validator cannot re-join to validator set.</li> <li>Unbond too many stake, making the bonded stake is lower than the <code>min-self-delegation</code></li> <li>Downtime: unavailable to sign transactions on a blockchain for a certain period of time</li> <li>Non-voting</li> <li>Low on disk space</li> <li>Node crashes(node does not start or does not catch up to the latest block)</li> </ul> <p>Except for <code>double-sign</code>, you have to wait for your node finishes catch-up and wait at least 10 minutes(downtime jail duration).</p> <p>Then, you can unjail your validator.</p> <p>Finally, check your validator again to see if the validator's voting-power is back.</p> <p>If the problem still persists, please make sure you have enough tokens delegated to your validator.</p> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#how-can-i-check-my-validator-info-such-as-voting-power","title":"How can I check my validator info such as voting-power?","text":"<p>There are three ways to check it:</p> <ul> <li>Stratos Explorer</li> <li><code>status</code> command:</li> </ul> <pre><code>stchaind status\n</code></pre> <p>Response:</p> <pre><code>    {\n\"NodeInfo\": {\n\"protocol_version\": {\n\"p2p\": \"8\",\n\"block\": \"11\",\n\"app\": \"0\"\n},\n\"id\": \"16a0758d175cbf5c08d41dffa73eb5c0190869ed\",\n\"listen_addr\": \"tcp://0.0.0.0:26656\",\n\"network\": \"tropos-5\",\n\"version\": \"0.34.21\",\n\"channels\": \"40202122233038606100\",\n\"moniker\": \"node\",\n\"other\": {\n\"tx_index\": \"on\",\n\"rpc_address\": \"tcp://127.0.0.1:26657\"\n}\n},\n\"SyncInfo\": {\n\"latest_block_hash\": \"4A1AA4808B4199B2247B5DEA1B94B016FA60691EFF8B191AED556978C5981673\",\n\"latest_app_hash\": \"DCD79CCD19F078615BD073D9420D3368D768674EEB80361FAB0AA143BBDCC65C\",\n\"latest_block_height\": \"1026\",\n\"latest_block_time\": \"2023-01-11T01:54:59.009329495Z\",\n\"earliest_block_hash\": \"139676534FECFA507D56A06B03BD528E70ACA6D4DB6560219707011966613DE4\",\n\"earliest_app_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n\"earliest_block_height\": \"1\",\n\"earliest_block_time\": \"2023-01-09T17:08:58.4890503Z\",\n\"catching_up\": false\n},\n\"ValidatorInfo\": {\n\"Address\": \"18A7169C1B427D994133F7B3D4504E92789DB37C\",\n\"PubKey\": {\n\"type\": \"tendermint/PubKeyEd25519\",\n\"value\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n},\n\"VotingPower\": \"500000\"\n}\n}\n</code></pre> <ul> <li>API</li> </ul> <pre><code>curl localhost:26657/status\n</code></pre> <p>Response:</p> <pre><code>   {\n\"jsonrpc\": \"2.0\",\n\"id\": -1,\n\"result\": {\n\"node_info\": {\n\"protocol_version\": {\n\"p2p\": \"8\",\n\"block\": \"11\",\n\"app\": \"0\"\n},\n\"id\": \"16a0758d175cbf5c08d41dffa73eb5c0190869ed\",\n\"listen_addr\": \"tcp://0.0.0.0:26656\",\n\"network\": \"tropos-5\",\n\"version\": \"0.34.21\",\n\"channels\": \"40202122233038606100\",\n\"moniker\": \"node\",\n\"other\": {\n\"tx_index\": \"on\",\n\"rpc_address\": \"tcp://127.0.0.1:26657\"\n}\n},\n\"sync_info\": {\n\"latest_block_hash\": \"0B67BB5EF1CB8DB944E9A09D2E5E9A69CFCF3CF28510EC36775A6DE16087C4D7\",\n\"latest_app_hash\": \"97C730F39277540A16363B9B25D0283FE139A1BB894F3BBD744CC6785733C204\",\n\"latest_block_height\": \"1035\",\n\"latest_block_time\": \"2023-01-11T01:55:44.25650962Z\",\n\"earliest_block_hash\": \"139676534FECFA507D56A06B03BD528E70ACA6D4DB6560219707011966613DE4\",\n\"earliest_app_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n\"earliest_block_height\": \"1\",\n\"earliest_block_time\": \"2023-01-09T17:08:58.4890503Z\",\n\"catching_up\": false\n},\n\"validator_info\": {\n\"address\": \"18A7169C1B427D994133F7B3D4504E92789DB37C\",\n\"pub_key\": {\n\"type\": \"tendermint/PubKeyEd25519\",\n\"value\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n},\n\"voting_power\": \"500000\"\n}\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#is-there-any-minimum-amount-of-stake-to-delegate-to-a-validator","title":"Is there any minimum amount of stake to delegate to a validator?","text":"<p>( and is there a minimum amount of STOS that must be delegated to be an active (bonded) validator?)</p> <p>There's no limitation for delegating the validator, but a tiny amount of delegation may be ignored by the algorithm when distributing rewards.</p> <p>When you use <code>create-validator</code> transaction to create a validator, the flag <code>--min-self-delegation</code> defines the minimum amount of stake. If a validator's bonded stake goes below the limit that it predefined, this validator and all of its delegators will unbond. In testing phase, the system takes only the top 100 validators with the highest weight(voting power) into the <code>active</code> list. The more bonded stake a validator has, the more possible to be an <code>active</code> one. We recommend 100stos when you create your validator.</p> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#what-is-self-delegation-how-can-i-increase-my-self-delegation","title":"What is self-delegation? How can I increase my self-delegation?","text":"<p><code>Self-delegation</code> is a delegation of stake from a validator to itself. The delegated amount can be increased by sending a <code>delegate</code> transaction from your validator's wallet address.</p> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#what-are-the-responsibilities-of-a-validator","title":"What are the responsibilities of a validator?","text":"<p>Validators have two main responsibilities:</p> <ul> <li>Be able to constantly run a correct version of the software: Validators need to make sure that their servers are always online and their private keys are not compromised.</li> <li>Actively participate in governance: Validators are required to vote on every proposal.</li> </ul> <p>Additionally, they should always be up-to-date with the current state of the ecosystem so that they can easily adapt to any change.</p> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#how-often-will-a-validator-be-chosen-to-propose-the-next-block","title":"How often will a validator be chosen to propose the next block?","text":"<p>The validator that is selected to propose the next block is called proposer. Each proposer is selected deterministically, and the frequency of being chosen is proportional to the voting power (i.e. amount of bonded tokens) of the validator.</p> <p></p>"},{"location":"docs-validator-node/how-to-become-a-validator/#why-validator-keeps-getting-jailed-after-some-time","title":"Why validator keeps getting jailed after some time?","text":"<p>If you have tried to <code>unjail</code>, but your node is jailed again shortly after, it most probably means that your validator has been tombstoned.</p> <p>A validator is in <code>tombstone</code> status only when it double-signs. Once your validator double-signs it will no longer be able to re-join the active set with the same validator key.</p> <p>In order to avoid this, you need to always make sure that each of your nodes does not validate with the same private key.</p> <p>Also, once your validator is tombstoned, all you can do is create a new one, and earn again all the delegations that you had before.</p> <p></p> <p></p>"},{"location":"docs-validator-node/how-to-setup-rest-grpc-full-chain/","title":"HowTo Setup Full-Chain as REST or gRPC","text":"<p>In order to work properly, a SDS node needs to generate, sign and broadcast transaction to the Stratos chain through a Full-Chain node.</p> <p>Stratos provides a public endpoint at rest-tropos.thestratos.org for cases when there's only a SDS node running and a Full-Chain is not available.</p> <p>However, this setup is particularly useful if you run both a Full-Chain and a SDS node because you can setup your own REST/gRPC endpoint in your Full-Chain node so it can be used for your SDS node. This means that you will have improved performance, faster responses and you won't be dependent on the public endpoint which may get overloaded at times.</p> <p>This setup is also useful for server farms running multiple SDS nodes.</p> <p>Tip</p> <p>Currently, in Tropos-5 incentive testnet, SDS nodes are using REST API but this will be changed to gRPC API once mainnet is launched.</p> <p></p>"},{"location":"docs-validator-node/how-to-setup-rest-grpc-full-chain/#rest-setup","title":"REST Setup","text":"<p>To enable REST API in your Full-Chain Node, edit the app.toml file:</p> <pre><code>nano ~/.stchaind/config/app.toml\n</code></pre> <p>And set <code>enable</code> to <code>true</code> and (optionally) edit the <code>address</code> variables. You can change the ip to listen only on local or lan requests and/or you can change the default port.</p> <pre><code>###############################################################################\n###                           API Configuration                             ###\n###############################################################################\n# Enable defines if the API server should be enabled.\nenable = true\n# Address defines the API server to listen on.\naddress = \"tcp://0.0.0.0:1317\"\n</code></pre> <p>Usage example:</p> <pre><code>curl http://localhost:1317/bank/balances/st1pgzvq9p5gyxu7gpe8l33g8nzq0xsfyeaeww3ru\n{\"height\":\"1062014\",\"result\":[\n{\n\"denom\": \"utros\",\n\"amount\": \"166304372501\"\n},\n{\n\"denom\": \"wei\",\n\"amount\": \"1178011342927397401552\"\n}\n</code></pre> <p>You can see all the REST queries here.</p> <p>To use your Full-Chain REST API for your SDS node, edit this file:</p> <pre><code>nano ~/rsnode/configs/config.toml\n</code></pre> <p>and edit this line with your REST url:</p> <pre><code>stratos_chain_url = 'http://127.0.0.1:1317'\n</code></pre> <p></p>"},{"location":"docs-validator-node/how-to-setup-rest-grpc-full-chain/#grpc-setup","title":"gRPC Setup","text":"<p>gRPC will be used by SDS nodes in mainnet. To enable or configure gRPC for your Full-Chain node, edit this file:</p> <pre><code>nano ~/.stchaind/config/app.toml\n</code></pre> <p>And search for this section:</p> <pre><code>###############################################################################\n###                           gRPC Configuration                            ###\n###############################################################################\n# Enable defines if the gRPC server should be enabled.\nenable = true\n# Address defines the gRPC server address to bind to.\naddress = \"0.0.0.0:9090\"\n</code></pre> <p>Usage example:</p> <p>Tip</p> <p>You can get the precompiled <code>grpcurl</code> binary here.</p> <pre><code>grpcurl -plaintext 127.0.0.1:9090 list stratos.register.v1.Query\nstratos.register.v1.Query.BondedMetaNodeCount\nstratos.register.v1.Query.BondedResourceNodeCount\nstratos.register.v1.Query.MetaNode\nstratos.register.v1.Query.Params\nstratos.register.v1.Query.ResourceNode\nstratos.register.v1.Query.StakeByNode\nstratos.register.v1.Query.StakeByOwner\nstratos.register.v1.Query.StakeTotal\n</code></pre> <p>You can see all the gRPC queries here.</p> <p>To use your Full-Chain gRPC API for your SDS node (only after mainnet launch), edit your SDS config file:</p> <pre><code>nano ~/rsnode/configs/config.toml\n</code></pre> <p>and edit this line:</p> <pre><code>stratos_chain_url = '127.0.0.1:9090'\n</code></pre> <p></p> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/","title":"Full-Chain Node","text":""},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#introduction","title":"Introduction","text":"<p>Stratos blockchain facilitates all decentralized ledger transactions and functionalities, providing settlement services and related financial payment services for network providers and network users in an efficient, fair and transparent manner.</p> <p>The Stratos-chain full-nodes are dedicated servers with sufficient computing power that participate in block generation cycle. It is necessary in order to be a validator.</p> <p>In practice, running a full-node only implies running a non-compromised and up-to-date version of the software with low network latency and without downtime. It is encouraged to run a full-node even if you do not plan to be a validator.</p> <p>The Stratos-chain validator is a full-node that participates in the Stratos Chain block generation cycle and also voting for the validity of a block proposed.</p> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#requirements","title":"Requirements","text":"<p>Here are the recommended hardware/software to run a Stratos-chain full-node:</p> <p>Recommended Hardware</p> <ul> <li>CPU           i5 (4 cores)</li> <li>RAM           16GB</li> <li>Hard disk     2TB</li> </ul> <p>Software(tested version)</p> <ul> <li>Ubuntu 18.04+</li> <li>Go 1.18+ linux/amd64</li> </ul> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#setup-environment","title":"Setup Environment","text":"<p>In order to run a Stratos-chain full-node, you may need to build <code>stratos-chain</code> source code yourself which requires <code>Go 1.18+</code>, <code>git</code>, <code>curl</code> and <code>make</code> installed.</p> <p>This process depends on your operating system.</p> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#linux-users","title":"Linux Users","text":"<p>The following example is based on Ubuntu 18.04+ 64-bit(Debian) and assumes you are using a terminal environment by default.</p> <p>Please run the equivalent commands if you are running other Linux distributions.</p> <pre><code># Update the system\nsudo apt update\nsudo apt upgrade\n\n# Install git, snap and make(you can also install them separately as your needs)\nsudo apt install git build-essential curl snapd --yes\n\n# Install Go 1.18+ with Snap and export environment variables(You can also install Go 1.18+ in your way)\nsudo snap install go --classic\necho 'export GOPATH=\"$HOME/go\"' &gt;&gt; ~/.profile\necho 'export GOBIN=\"$GOPATH/bin\"' &gt;&gt; ~/.profile\necho 'export PATH=\"$GOBIN:$PATH\"' &gt;&gt; ~/.profile\nsource ~/.profile\n</code></pre> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#macos-users","title":"MacOS Users","text":"<p>To install the required build tools, you can easily install Xcode from the Mac App Store.</p> <p>The best practice to install Go is to use Homebrew.</p> <pre><code># Install software using Homebrew\nbrew install go git curl\n\n# Export environment variables\necho 'export GOPATH=\"$HOME/go\"' &gt;&gt; ~/.profile\necho 'export GOBIN=\"$GOPATH/bin\"' &gt;&gt; ~/.profile\necho 'export PATH=\"$GOBIN:$PATH\"' &gt;&gt; ~/.profile\nsource ~/.profile\n</code></pre> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#windows-users","title":"Windows Users","text":"<p>It is possible to build and run the software on Windows. However, we did not test it on Windows completely.</p> <p>It may give you unexpected results, or it may require additional setup.</p> <p>An alternative option is to install a separate virtual Linux system using VirtualBox or VMware Workstation.</p> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#setup-a-stratos-chain-full-node","title":"Setup a Stratos-chain full-node","text":""},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#create-a-user-account","title":"Create a user account","text":"<p>To create a separated and more secure environment, it is recommended to create a separated user account <code>stratos</code> to run your node.</p> <pre><code>sudo adduser stratos --home /home/stratos\n</code></pre> <p>Once the user account <code>stratos</code> is created, switch and login the system using <code>stratos</code>. You will proceed with the following steps in context of that user.</p> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#get-release-files","title":"Get release files","text":"<p>Tip</p> <p>There are two ways to get the these binary executables:</p> <ul> <li>Download pre-compiled executabled (for Ubuntu 18.04+ x86_64).</li> <li>Download source code and compile it yourself.</li> </ul> <p>Please choose only one of them based on your operating system.</p> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#pre-compiled-executables","title":"Pre-compiled executables","text":"<p>The following binary <code>stchaind</code> has been built and ready to be downloaded directly.</p> <pre><code># Make sure we are inside the $HOME folder\ncd $HOME\nwget https://github.com/stratosnet/stratos-chain/releases/download/v0.9.0/stchaind\n</code></pre> <p>Tip</p> <p>\ud83d\udca1 This binary is built for Ubuntu 18.04+ amd64. if you have other Linux kernels, please follow the next step to build your own binary with source code. For ease of use, we recommend saving this binary in your <code>$HOME</code> folder. </p> <p>If you are not sure what is your <code>$HOME</code> folder, in terminal, use <code>echo $HOME</code> to check. In the following instruction, we assume you have entered the <code>$HOME</code> folder(use <code>cd $HOME</code>)</p> <p></p> <ul> <li>Check the granularity</li> </ul> <pre><code># Make sure we are inside the $HOME folder and check these two binary executables\ncd $HOME\n# Check granularity\nmd5sum stchain*\n\n## Expected output\n## 1843b162a7d2b1f4363938fc73d421e8  stchaind\n</code></pre> <p></p> <ul> <li>Add execute permission to this binary</li> </ul> <pre><code># Make sure the file can be executed\nchmod +x stchaind\n</code></pre> <p></p> <ul> <li>Add the binary to the search path</li> </ul> <pre><code>echo 'export PATH=\"$HOME:$PATH\"' &gt;&gt; ~/.profile\nsource ~/.profile\n</code></pre> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#compile-the-source-code","title":"Compile the source code","text":"<p>Before the following steps, please make sure you have <code>Go 1.18+</code> installed link.</p> <p></p> <ul> <li>Build the extracted source code</li> </ul> <pre><code>git clone https://github.com/stratosnet/stratos-chain.git\ncd stratos-chain\ngit checkout tags/v0.9.0\nmake build\n</code></pre> <p></p> <ul> <li>Installing the binary executable</li> </ul> <p>The binary can be installed to the default $GOPATH/bin folder by running:</p> <pre><code>make install\n</code></pre> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#get-genesis-and-config-file","title":"Get genesis and config file","text":"<ul> <li>Initialize your node</li> </ul> <pre><code># Make sure we are inside the home directory\ncd $HOME\n# Create folders and initialize the node\nstchaind init \"&lt;your_node_moniker&gt;\" --chain-id tropos-5\n\n# ignore the output since you need to download the genesis file \n</code></pre> <p>Tip</p> <p>\ud83d\udca1 You can choose any <code>your_node_moniker</code> you prefer. It will be saved in the <code>config.toml</code> under the <code>.stchaind/config/</code> directory.</p> <p></p> <ul> <li>Download the <code>genesis.json</code> and <code>config.toml</code> files</li> </ul> <pre><code>wget https://raw.githubusercontent.com/stratosnet/stratos-chain-testnet/main/genesis.json\nwget https://raw.githubusercontent.com/stratosnet/stratos-chain-testnet/main/config.toml\n</code></pre> <p>Tip</p> <p>\ud83d\udca1 We strongly recommend using this downloaded <code>config.toml</code> for v0.9.0, instead of the ones for previous versions to avoid any mismatching. </p> <p>A sample of <code>config.toml</code> can be found below</p> <p></p> Example of config.toml <pre><code># This is a TOML config file.\n# For more information, see https://github.com/toml-lang/toml# NOTE: Any path below can be absolute (e.g. \"/var/myawesomeapp/data\") or\n# relative to the home directory (e.g. \"data\"). The home directory is\n# \"$HOME/.tendermint\" by default, but could be changed via $TMHOME env variable\n# or --home cmd flag.#######################################################################\n###                   Main Base Config Options                      ###\n#######################################################################\n# TCP or UNIX socket address of the ABCI application,\n# or the name of an ABCI application compiled in with the Tendermint binary\nproxy_app = \"tcp://127.0.0.1:26658\"\n# A custom human readable name for this node\nmoniker = \"node\"\n# If this node is many blocks behind the tip of the chain, FastSync\n# allows them to catchup quickly by downloading blocks in parallel\n# and verifying their commits\nfast_sync = true\n# Database backend: goleveldb | cleveldb | boltdb | rocksdb | badgerdb\n# * goleveldb (github.com/syndtr/goleveldb - most popular implementation)\n#   - pure go\n#   - stable\n# * cleveldb (uses levigo wrapper)\n#   - fast\n#   - requires gcc\n#   - use cleveldb build tag (go build -tags cleveldb)\n# * boltdb (uses etcd's fork of bolt - github.com/etcd-io/bbolt)\n#   - EXPERIMENTAL\n#   - may be faster is some use-cases (random reads - indexer)\n#   - use boltdb build tag (go build -tags boltdb)\n# * rocksdb (uses github.com/tecbot/gorocksdb)\n#   - EXPERIMENTAL\n#   - requires gcc\n#   - use rocksdb build tag (go build -tags rocksdb)\n# * badgerdb (uses github.com/dgraph-io/badger)\n#   - EXPERIMENTAL\n#   - use badgerdb build tag (go build -tags badgerdb)\ndb_backend = \"goleveldb\"\n# Database directory\ndb_dir = \"data\"\n# Output level for logging, including package level options\nlog_level = \"info\"\n# Output format: 'plain' (colored text) or 'json'\nlog_format = \"plain\"\n##### additional base config options #####\n# Path to the JSON file containing the initial validator set and other meta data\ngenesis_file = \"config/genesis.json\"\n# Path to the JSON file containing the private key to use as a validator in the consensus protocol\npriv_validator_key_file = \"config/priv_validator_key.json\"\n# Path to the JSON file containing the last sign state of a validator\npriv_validator_state_file = \"data/priv_validator_state.json\"\n# TCP or UNIX socket address for Tendermint to listen on for\n# connections from an external PrivValidator process\npriv_validator_laddr = \"\"\n# Path to the JSON file containing the private key to use for node authentication in the p2p protocol\nnode_key_file = \"config/node_key.json\"\n# Mechanism to connect to the ABCI application: socket | grpc\nabci = \"socket\"\n# If true, query the ABCI app on connecting to a new peer\n# so the app can decide if we should keep the connection or not\nfilter_peers = false\n#######################################################################\n###                 Advanced Configuration Options                  ###\n#######################################################################\n#######################################################\n###       RPC Server Configuration Options          ###\n#######################################################\n[rpc]\n# TCP or UNIX socket address for the RPC server to listen on\nladdr = \"tcp://127.0.0.1:26657\"\n# A list of origins a cross-domain request can be executed from\n# Default value '[]' disables cors support\n# Use '[\"*\"]' to allow any origin\ncors_allowed_origins = []\n# A list of methods the client is allowed to use with cross-domain requests\ncors_allowed_methods = [\"HEAD\", \"GET\", \"POST\", ]\n# A list of non simple headers the client is allowed to use with cross-domain requests\ncors_allowed_headers = [\"Origin\", \"Accept\", \"Content-Type\", \"X-Requested-With\", \"X-Server-Time\", ]\n# TCP or UNIX socket address for the gRPC server to listen on\n# NOTE: This server only supports /broadcast_tx_commit\ngrpc_laddr = \"\"\n# Maximum number of simultaneous connections.\n# Does not include RPC (HTTP&amp;WebSocket) connections. See max_open_connections\n# If you want to accept a larger number than the default, make sure\n# you increase your OS limits.\n# 0 - unlimited.\n# Should be &lt; {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}\n# 1024 - 40 - 10 - 50 = 924 = ~900\ngrpc_max_open_connections = 900\n# Activate unsafe RPC commands like /dial_seeds and /unsafe_flush_mempool\nunsafe = false\n# Maximum number of simultaneous connections (including WebSocket).\n# Does not include gRPC connections. See grpc_max_open_connections\n# If you want to accept a larger number than the default, make sure\n# you increase your OS limits.\n# 0 - unlimited.\n# Should be &lt; {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}\n# 1024 - 40 - 10 - 50 = 924 = ~900\nmax_open_connections = 900\n# Maximum number of unique clientIDs that can /subscribe\n# If you're using /broadcast_tx_commit, set to the estimated maximum number\n# of broadcast_tx_commit calls per block.\nmax_subscription_clients = 100\n# Maximum number of unique queries a given client can /subscribe to\n# If you're using GRPC (or Local RPC client) and /broadcast_tx_commit, set to\n# the estimated # maximum number of broadcast_tx_commit calls per block.\nmax_subscriptions_per_client = 5\n# Experimental parameter to specify the maximum number of events a node will\n# buffer, per subscription, before returning an error and closing the\n# subscription. Must be set to at least 100, but higher values will accommodate\n# higher event throughput rates (and will use more memory).\nexperimental_subscription_buffer_size = 200\n# Experimental parameter to specify the maximum number of RPC responses that\n# can be buffered per WebSocket client. If clients cannot read from the\n# WebSocket endpoint fast enough, they will be disconnected, so increasing this\n# parameter may reduce the chances of them being disconnected (but will cause\n# the node to use more memory).\n#\n# Must be at least the same as \"experimental_subscription_buffer_size\",\n# otherwise connections could be dropped unnecessarily. This value should\n# ideally be somewhat higher than \"experimental_subscription_buffer_size\" to\n# accommodate non-subscription-related RPC responses.\nexperimental_websocket_write_buffer_size = 200\n# If a WebSocket client cannot read fast enough, at present we may\n# silently drop events instead of generating an error or disconnecting the\n# client.\n#\n# Enabling this experimental parameter will cause the WebSocket connection to\n# be closed instead if it cannot read fast enough, allowing for greater\n# predictability in subscription behaviour.\nexperimental_close_on_slow_client = false\n# How long to wait for a tx to be committed during /broadcast_tx_commit.\n# WARNING: Using a value larger than 10s will result in increasing the\n# global HTTP write timeout, which applies to all connections and endpoints.\n# See https://github.com/tendermint/tendermint/issues/3435\ntimeout_broadcast_tx_commit = \"10s\"\n# Maximum size of request body, in bytes\nmax_body_bytes = 1000000\n# Maximum size of request header, in bytes\nmax_header_bytes = 1048576\n# The path to a file containing certificate that is used to create the HTTPS server.\n# Might be either absolute path or path related to Tendermint's config directory.\n# If the certificate is signed by a certificate authority,\n# the certFile should be the concatenation of the server's certificate, any intermediates,\n# and the CA's certificate.\n# NOTE: both tls_cert_file and tls_key_file must be present for Tendermint to create HTTPS server.\n# Otherwise, HTTP server is run.\ntls_cert_file = \"\"\n# The path to a file containing matching private key that is used to create the HTTPS server.\n# Might be either absolute path or path related to Tendermint's config directory.\n# NOTE: both tls-cert-file and tls-key-file must be present for Tendermint to create HTTPS server.\n# Otherwise, HTTP server is run.\ntls_key_file = \"\"\n# pprof listen address (https://golang.org/pkg/net/http/pprof)\npprof_laddr = \"localhost:6060\"\n#######################################################\n###           P2P Configuration Options             ###\n#######################################################\n[p2p]\n# Address to listen for incoming connections\nladdr = \"tcp://0.0.0.0:26656\"\n# Address to advertise to peers for them to dial\n# If empty, will use the same port as the laddr,\n# and will introspect on the listener or use UPnP\n# to figure out the address. ip and port are required\n# example: 159.89.10.97:26656\nexternal_address = \"\"\n# Comma separated list of seed nodes to connect to\nseeds = \"\"\n# Comma separated list of nodes to keep persistent connections to\npersistent_peers = \"\"\n# UPNP port forwarding\nupnp = false\n# Path to address book\naddr_book_file = \"config/addrbook.json\"\n# Set true for strict address routability rules\n# Set false for private or local networks\naddr_book_strict = true\n# Maximum number of inbound peers\nmax_num_inbound_peers = 40\n# Maximum number of outbound peers to connect to, excluding persistent peers\nmax_num_outbound_peers = 10\n# List of node IDs, to which a connection will be (re)established ignoring any existing limits\nunconditional_peer_ids = \"\"\n# Maximum pause when redialing a persistent peer (if zero, exponential backoff is used)\npersistent_peers_max_dial_period = \"0s\"\n# Time to wait before flushing messages out on the connection\nflush_throttle_timeout = \"100ms\"\n# Maximum size of a message packet payload, in bytes\nmax_packet_msg_payload_size = 1024\n# Rate at which packets can be sent, in bytes/second\nsend_rate = 5120000\n# Rate at which packets can be received, in bytes/second\nrecv_rate = 5120000\n# Set true to enable the peer-exchange reactor\npex = true\n# Seed mode, in which node constantly crawls the network and looks for\n# peers. If another node asks it for addresses, it responds and disconnects.\n#\n# Does not work if the peer-exchange reactor is disabled.\nseed_mode = false\n# Comma separated list of peer IDs to keep private (will not be gossiped to other peers)\nprivate_peer_ids = \"\"\n# Toggle to disable guard against peers connecting from the same ip.\nallow_duplicate_ip = false\n# Peer connection configuration.\nhandshake_timeout = \"20s\"\ndial_timeout = \"3s\"\n#######################################################\n###          Mempool Configuration Option          ###\n#######################################################\n[mempool]\nrecheck = true\nbroadcast = true\nwal_dir = \"\"\n# Maximum number of transactions in the mempool\nsize = 5000\n# Limit the total size of all txs in the mempool.\n# This only accounts for raw transactions (e.g. given 1MB transactions and\n# max_txs_bytes=5MB, mempool will only accept 5 transactions).\nmax_txs_bytes = 1073741824\n# Size of the cache (used to filter transactions we saw earlier) in transactions\ncache_size = 10000\n# Do not remove invalid transactions from the cache (default: false)\n# Set to true if it's not possible for any invalid transaction to become valid\n# again in the future.\nkeep-invalid-txs-in-cache = false\n# Maximum size of a single transaction.\n# NOTE: the max size of a tx transmitted over the network is {max_tx_bytes}.\nmax_tx_bytes = 1048576\n# Maximum size of a batch of transactions to send to a peer\n# Including space needed by encoding (one varint per transaction).\n# XXX: Unused due to https://github.com/tendermint/tendermint/issues/5796\nmax_batch_bytes = 0\n#######################################################\n###         State Sync Configuration Options        ###\n#######################################################\n[statesync]\n# State sync rapidly bootstraps a new node by discovering, fetching, and restoring a state machine\n# snapshot from peers instead of fetching and replaying historical blocks. Requires some peers in\n# the network to take and serve state machine snapshots. State sync is not attempted if the node\n# has any local state (LastBlockHeight &gt; 0). The node will have a truncated block history,\n# starting from the height of the snapshot.\nenable = false\n# RPC servers (comma-separated) for light client verification of the synced state machine and\n# retrieval of state data for node bootstrapping. Also needs a trusted height and corresponding\n# header hash obtained from a trusted source, and a period during which validators can be trusted.\n#\n# For Cosmos SDK-based chains, trust_period should usually be about 2/3 of the unbonding time (~2\n# weeks) during which they can be financially punished (slashed) for misbehavior.\nrpc_servers = \"\"\ntrust_height = 0\ntrust_hash = \"\"\ntrust_period = \"168h0m0s\"\n# Time to spend discovering snapshots before initiating a restore.\ndiscovery_time = \"15s\"\n# Temporary directory for state sync snapshot chunks, defaults to the OS tempdir (typically /tmp).\n# Will create a new, randomly named directory within, and remove it when done.\ntemp_dir = \"\"\n# The timeout duration before re-requesting a chunk, possibly from a different\n# peer (default: 1 minute).\nchunk_request_timeout = \"10s\"\n# The number of concurrent chunk fetchers to run (default: 1).\nchunk_fetchers = \"4\"\n#######################################################\n###       Fast Sync Configuration Connections       ###\n#######################################################\n[fastsync]\n# Fast Sync version to use:\n#   1) \"v0\" (default) - the legacy fast sync implementation\n#   2) \"v1\" - refactor of v0 version for better testability\n#   2) \"v2\" - complete redesign of v0, optimized for testability &amp; readability\nversion = \"v0\"\n#######################################################\n###         Consensus Configuration Options         ###\n#######################################################\n[consensus]\nwal_file = \"data/cs.wal/wal\"\n# How long we wait for a proposal block before prevoting nil\ntimeout_propose = \"3s\"\n# How much timeout_propose increases with each round\ntimeout_propose_delta = \"500ms\"\n# How long we wait after receiving +2/3 prevotes for \u201canything\u201d (ie. not a single block or nil)\ntimeout_prevote = \"1s\"\n# How much the timeout_prevote increases with each round\ntimeout_prevote_delta = \"500ms\"\n# How long we wait after receiving +2/3 precommits for \u201canything\u201d (ie. not a single block or nil)\ntimeout_precommit = \"1s\"\n# How much the timeout_precommit increases with each round\ntimeout_precommit_delta = \"500ms\"\n# How long we wait after committing a block, before starting on the new\n# height (this gives us a chance to receive some more precommits, even\n# though we already have +2/3).\ntimeout_commit = \"5s\"\n# How many blocks to look back to check existence of the node's consensus votes before joining consensus\n# When non-zero, the node will panic upon restart\n# if the same consensus key was used to sign {double_sign_check_height} last blocks.\n# So, validators should stop the state machine, wait for some blocks, and then restart the state machine to avoid panic.\ndouble_sign_check_height = 0\n# Make progress as soon as we have all the precommits (as if TimeoutCommit = 0)\nskip_timeout_commit = false\n# EmptyBlocks mode and possible interval between empty blocks\ncreate_empty_blocks = true\ncreate_empty_blocks_interval = \"0s\"\n# Reactor sleep duration parameters\npeer_gossip_sleep_duration = \"100ms\"\npeer_query_maj23_sleep_duration = \"2s\"\n#######################################################\n###   Transaction Indexer Configuration Options     ###\n#######################################################\n[tx_index]\n# What indexer to use for transactions\n#\n# The application will set which txs to index. In some cases a node operator will be able\n# to decide which txs to index based on configuration set in the application.\n#\n# Options:\n#   1) \"null\"\n#   2) \"kv\" (default) - the simplest possible indexer, backed by key-value storage (defaults to levelDB; see DBBackend).\n#       - When \"kv\" is chosen \"tx.height\" and \"tx.hash\" will always be indexed.\nindexer = \"kv\"\n#######################################################\n###       Instrumentation Configuration Options     ###\n#######################################################\n[instrumentation]\n# When true, Prometheus metrics are served under /metrics on\n# PrometheusListenAddr.\n# Check out the documentation for the list of available metrics.\nprometheus = false\n# Address to listen for Prometheus collector(s) connections\nprometheus_listen_addr = \":26660\"\n# Maximum number of simultaneous connections.\n# If you want to accept a larger number than the default, make sure\n# you increase your OS limits.\n# 0 - unlimited.\nmax_open_connections = 3\n# Instrumentation namespace\nnamespace = \"tendermint\"\n</code></pre> <p></p> <ul> <li>Change <code>moniker</code> in the downloaded <code>config.toml</code> file</li> </ul> <p>Please change your node moniker by modifying the <code>config.toml</code> file. Open this file with an editor, search <code>moniker</code> (usually at Line #16) in the file to find the \u201cmoniker\u201d field. </p> <p>Change it to any value you like. It\u2019s your node name that will show on the network.</p> <pre><code># A custom human readable name for this node\nmoniker = \"&lt;your_node_moniker&gt;\"\n</code></pre> <ul> <li>Move the downloaded <code>config.toml</code> and <code>genesis.json</code> files to <code>$HOME/.stchaind/config/</code> folder. Replace if you already have these files.</li> </ul> <pre><code>mv config.toml $HOME/.stchaind/config/\nmv genesis.json $HOME/.stchaind/config/\n</code></pre> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#directory-structure","title":"Directory structure","text":"<p>After you finished the above steps, your <code>$HOME</code> folder should include the following directories and files.</p> <pre><code>.\n\u251c\u2500\u2500 ...\n\u251c\u2500\u2500 .stchaind\n\u2502   \u251c\u2500\u2500 config\n\u2502   \u2502   \u251c\u2500\u2500 app.toml\n\u2502   \u2502   \u251c\u2500\u2500 config.toml\n\u2502   \u2502   \u251c\u2500\u2500 genesis.json\n\u2502   \u2502   \u251c\u2500\u2500 node_key.json\n\u2502   \u2502   \u2514\u2500\u2500 priv_validator_key.json\n\u2502   \u251c\u2500\u2500 data\n\u2502   \u2502    \u2514\u2500\u2500 priv_validator_state.json \u2502   \u2514\u2500\u2500 keyring-test\n\u251c\u2500\u2500 ...\n</code></pre> <p>Tip</p> <p>\ud83d\udca1 By default, directory <code>.stchaind</code> will be created in the <code>$HOME</code> folder. The <code>.stchaind</code> folder contains the node's configurations and data.</p> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#start-the-full-chain-node","title":"Start the full-chain node","text":"<p>There are three ways to run your Stratos-chain full-node. </p> <p>Please choose ONE of them to start the node.</p> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#in-foreground","title":"In foreground","text":"<pre><code># Make sure we are inside the home directory\ncd $HOME\n# run your node\nstchaind start\n\n# Use `Ctrl+c` to stop the node.\n</code></pre>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#in-background","title":"In background","text":"<pre><code># Make sure we are inside the home directory\ncd $HOME\n# run your node in backend\nstchaind start 2&gt;&amp;1 &gt;&gt; chain.log &amp; </code></pre> <p>Use an editor to check your node log at <code>chain.log</code></p> <p>Use the following Linux Command to stop your node.</p> <pre><code>pkill stchaind\n</code></pre> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#as-service","title":"As service","text":"<p>All below steps require root privileges</p> <p></p> <ul> <li>Create the service file</li> </ul> <p>Create the <code>/lib/systemd/system/stratos.service</code> file with the following content</p> <pre><code>[Unit]\nDescription=Stratos Chain Node\nAfter=network-online.target\n\n[Service]\nUser=stratos\nExecStart=/home/stratos/stchaind start --home=/home/stratos/.stchaind\nRestart=on-failure\nRestartSec=3\nLimitNOFILE=8192\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Tip</p> <p>\ud83d\udca1 In the [service] section:</p> <ul> <li><code>User</code> is your system login username</li> <li><code>ExecStart</code> designates the absolute path to the binary <code>stchaind</code></li> <li><code>--home</code> is the absolute path to your node folder.</li> <li>We used the default values for these variables. If you use a different username, group or folder to hold your node data instead of the default values, please modify these values according to your situations. Make sure the above values are correct.</li> </ul> <p></p> <ul> <li>Start your service</li> </ul> <p>Once you have successfully created the service, you need to enable and start it by running</p> <pre><code>systemctl daemon-reload\nsystemctl enable stratos.service\nsystemctl start stratos.service\n</code></pre> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#service-operations","title":"Service operations","text":"<ul> <li>Check the service status</li> </ul> <pre><code>systemctl status stratos.service\n</code></pre> <ul> <li>Check service log</li> </ul> <pre><code>journalctl -u stratos.service -f # exit with ctrl+c\n</code></pre> <ul> <li>Stop the service</li> </ul> <pre><code>systemctl stop stratos.service\n</code></pre>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#check-node-status","title":"Check node status","text":"<p>Once you start your full-node, it will connect to the peers and start syncing. You can check the status of the node by running the following command</p> <pre><code># Check the status of the node\nstchaind status\n</code></pre> <p>The output will be similar to</p> <pre><code>stchaind status\n{\n\"NodeInfo\": {\n\"protocol_version\": {\n\"p2p\": \"8\",\n\"block\": \"11\",\n\"app\": \"0\"\n},\n\"id\": \"16a0758d175cbf5c08d41dffa73eb5c0190869ed\",\n\"listen_addr\": \"tcp://0.0.0.0:26656\",\n\"network\": \"test-chain\",\n\"version\": \"0.34.21\",\n\"channels\": \"40202122233038606100\",\n\"moniker\": \"node\",\n\"other\": {\n\"tx_index\": \"on\",\n\"rpc_address\": \"tcp://127.0.0.1:26657\"\n}\n},\n\"SyncInfo\": {\n\"latest_block_hash\": \"697A2DB243E5191C6D85285A2ADD4924526924969C6C70FE71827C9FE41D4373\",\n\"latest_app_hash\": \"E978F87BB23D351B853F5F0CF9FBBBA4464FF5D7CE3746BF3E2357F28CBCE041\",\n\"latest_block_height\": \"497\",\n\"latest_block_time\": \"2023-01-11T01:10:37.562405326Z\",\n\"earliest_block_hash\": \"139676534FECFA507D56A06B03BD528E70ACA6D4DB6560219707011966613DE4\",\n\"earliest_app_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n\"earliest_block_height\": \"1\",\n\"earliest_block_time\": \"2023-01-09T17:08:58.4890503Z\",\n\"catching_up\": false\n},\n\"ValidatorInfo\": {\n\"Address\": \"18A7169C1B427D994133F7B3D4504E92789DB37C\",\n\"PubKey\": {\n\"type\": \"tendermint/PubKeyEd25519\",\n\"value\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n},\n\"VotingPower\": \"500000\"\n}\n}\n</code></pre> <p>If the <code>catching_up</code> value is <code>false</code> in the <code>sync_info</code> section, it means that you are fully synced.</p> <p>If it is <code>true</code>, it means your node is still syncing.</p> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#setup-a-wallet","title":"Setup a wallet","text":"<p>Once the node finishes catch-up, you are ready to operate your node for various transactions(tx) and queries.</p> <p>Tip</p> <p>\ud83d\udca1 By default, the following commands can be applied in the node folder(<code>$HOME</code>) directory.</p> <p>In order to hold the tokens that you will later delegate to your validator node, or pay staking for your SDS resource node, first, you need to create a local wallet account.</p> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#create-a-new-wallet","title":"Create a new wallet","text":"<p>To create a new wallet account, type the following command</p> <pre><code>stchaind keys add &lt;your wallet name&gt; --hd-path=\"m/44'/606'/0'/0/0\" --keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Tip</p> <p>\ud83d\udca1 In the testing phase, the <code>keyring's backend</code> is <code>test</code>, i.e., <code>--keyring-backend=test</code></p> <p>Please select a wallet name that you will easily remember. This name will be used all over the places inside other commands later.</p> <p>After creating a new local wallet account, you will get its <code>address</code> and <code>pubkey</code>.</p> <p>In addition, you will have a secret recovery phrase(mnemonic phrase) which can be used to recover an existing wallet account and should be kept secret.</p> <p>Example:</p> <pre><code>stchaind keys add myWallet --hd-path=\"m/44'/606'/0'/0/0\" --keyring-backend=test\n- name: myWallet\ntype: local\naddress: st1x2c6gy4vr8alsyzuqr2x8x8xxtvs97sk3jt6dp\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"A7HCZTlHEarBPabkOgId5SlyQKdqEsbXJHit7y9LXRy+\"}'\nmnemonic: \"\"\n**Important** write this mnemonic phrase in a safe place.\nIt is the only way to recover your account if you ever forget your password.\nvenue chest pattern tool certain identify adult theme thing public foster promote pave topple thing uncle brisk suffer present popular envelope wrap holiday goddess\n</code></pre> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#recover-an-existing-wallet","title":"Recover an existing wallet","text":"<p>If you already have a Stratos wallet account, you can recover it by typing the following command</p> <pre><code>stchaind keys add &lt;your wallet name&gt; --recover --hd-path=\"m/44'/606'/0'/0/0\" --keyring-backend=&lt;keyring's backend&gt; </code></pre> <p>Tip</p> <p>\ud83d\udca1 In the testing phase, <code>--keyring-backend=test</code></p> <p>Example:</p> <pre><code>stchaind keys add myWallet1 --recover --hd-path=\"m/44'/606'/0'/0/0\" --keyring-backend=test  </code></pre> <p></p> <p>After the above <code>keys add</code> command executed, a <code>keyring-test</code> folder will be created which contains your wallets' information with their addresses. </p> <p>The <code>keyring-test</code> folder looks like</p> <pre><code>.\n\u251c\u2500\u2500 32b1a412ac19fbf8105c00d46398e632d902fa16.address\n\u251c\u2500\u2500 d0c57269c450f81234307a33bd148ac4f90549e5.address\n\u251c\u2500\u2500 myWallet1.info\n\u2514\u2500\u2500 myWallet.info\n</code></pre> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#check-your-wallet","title":"Check your wallet","text":"<p>There are two ways to check your local wallets</p> <p></p> <ul> <li>Check all local wallet accounts</li> </ul> <pre><code>stchaind keys list --keyring-backend=&lt;keyring's backend&gt; </code></pre> <p>Example:</p> <pre><code>stchaind keys list --keyring-backend=test\n- name: user0\ntype: local\naddress: st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"A/wF15Wd3ogCXstE7S4Zf3DA4KXb0W7exQhP004PLTi3\"}'\nmnemonic: \"\"\n- name: user1\ntype: local\naddress: st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AgnhB5EkHL8+jD0/zRDR11nIpfOirTRrjgCX6uibhmDW\"}'\nmnemonic: \"\"\n- name: user10\ntype: local\naddress: st1lkcrz3ktt2p7ppu9arglpqcn94pcdd9a9pmatf\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"A2sZ2Z9BU9oDELC06Gj8Lfc5UycxTaPux3sEIq8sIzSW\"}'\nmnemonic: \"\"\n- name: user2\ntype: local\naddress: st16czjk2ym0prgvy4gl970t84vrp96s5kayfqmf2\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AwfcJTOVWdx6ai61cy8VGJ1SdWHzwm2CCmr/+PwSpFeR\"}'\nmnemonic: \"\"\n- name: user3\ntype: local\naddress: st17patveqxcq42rguc7nayr2g3jtawpzvhfmmumt\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AtFxbuB4s+2SYzImGPIBwe0H0mKCXbIPu1T63OvbgE/3\"}'\nmnemonic: \"\"\n</code></pre> <p></p> <ul> <li>Check a specific local wallet account</li> </ul> <pre><code>stchaind keys show &lt;your wallet name&gt; --keyring-backend=&lt;keyring's backend&gt; </code></pre> <p>Example:</p> <pre><code>stchaind keys show myWallet1 --keyring-backend=test\n- name: myWallet1\ntype: local\naddress: st16rzhy6wy2rupydps0gem69y2cnus2j09n42ksx\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"A13YKi3/7p9FsFPTfVgxEO0YK8bnDHmBPfA3ID+k37ET\"}'\nmnemonic: \"\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/setup-and-run-a-stratos-chain-full-node/#faucet","title":"Faucet","text":"<p>Faucet will be available at faucet-tropos.thestratos.org to get test tokens into your wallet.</p> <pre><code>curl --header \"Content-Type: application/json\" --request POST --data '{\"denom\":\"stos\",\"address\":\"your wallet address\"} ' https://faucet-tropos.thestratos.org/credit\n</code></pre> <p>Tip</p> <p>Replace \"your wallet address\" with your st1xx wallet address</p> <p>\ud83d\udca11stos = 1,000,000,000gwei = 1,000,000,000,000,000,000wei</p> <p></p> <ul> <li>Check wallet account balance</li> </ul> <p>You can query your account info using this command:</p> <pre><code>stchaind query account &lt;your wallet address&gt;\n</code></pre> <p>Example:</p> <pre><code>stchaind query account st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\n|\n'@type': /cosmos.auth.v1beta1.BaseAccount\naccount_number: \"1\"\naddress: st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\npub_key: null\nsequence: \"0\"\n</code></pre> <p></p> <p>You can query your wallet balances using this command:</p> <pre><code>stchaind query bank balances &lt;your wallet address&gt;\n</code></pre> <p>Example:</p> <pre><code>stchaind query bank balances st1d3qtsjyypa639q9kf0wmuf2dn4a7zrnujw84q4\n|\nbalances:\n- amount: \"200\"\ndenom: utros\n- amount: \"9998000000000000000\"\ndenom: wei\npagination:\nnext_key: null\ntotal: \"0\n</code></pre> <p></p> <ul> <li>Try your first tx - <code>send</code></li> </ul> <p>This tx command will send an amount of tokens from one wallet address to another:</p> <pre><code>stchaind tx bank send &lt;from address&gt; &lt;to address&gt; &lt;amount&gt; --keyring-backend=&lt;keyring's backend&gt; --chain-id=&lt;current chain-id&gt; --gas=auto --gas-prices=1000000000wei\n</code></pre> <p>Tip</p> <ul> <li>The current <code>chain-id</code> can be found on the <code>Stratos Explorer</code> right next to the search bar at the top of the page.</li> <li>In the testing phase, <code>--keyring-backend=test</code></li> <li>Make sure your <code>&lt;from address&gt;</code> has enough tokens</li> <li>Please wait for around 7 seconds for block generation after a transaction.</li> </ul> <p>Example:</p> <p>Let us assume:</p> <ul> <li><code>from address</code>: st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0</li> <li><code>to address</code>: st123wun5lnwerdrt0mk2uxtusgawpfr228a0sseg</li> <li><code>amount</code>: 10stos</li> </ul> <pre><code>stchaind tx bank send st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0 st123wun5lnwerdrt0mk2uxtusgawpfr228a0sseg 10stos --chain-id=tropos-5  --keyring-backend=test --gas=100000 --gas-prices=1000000000wei -y\ncode: 0\ncodespace: \"\"\ndata: \"\"\nevents: []\ngas_used: \"0\"\ngas_wanted: \"0\"\nheight: \"0\"\ninfo: \"\"\nlogs: []\nraw_log: '[]'\ntimestamp: \"\"\ntx: null\ntxhash: BA96CF87646592487ABB9DDDE8FA86FE71441226281B04E15C5C66EDE415FBC6\n</code></pre> <p></p> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/","title":"Stratos Chain stchaind commands part 1","text":"<p>This document is the first part that describes a summarized list of <code>stchaind</code> commands for Stratos Chain.</p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#requirements","title":"Requirements","text":"<p>Unlike other projects, Stratos does not require expensive GPUs and high wattage power supplies, but if the node wants to obtain revenue, it needs to provide enough bandwidth and storage capacity to ensure the traffic on the node can reach the reward requirements. </p> <p>We recommend the following to run your node:</p> <pre><code>* CPU i5 4 cores\n* 16GB memory\n* 2TB hard disk\n</code></pre> <p>Software(tested version):</p> <pre><code>* Ubuntu 18.04+\n* Go 1.18+ linux/amd64 (optional, if compile the binary with source code)\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#connect-to-stratos-chain-testnet","title":"Connect to Stratos Chain Testnet","text":"<p>Please refer to full-node setup guide to:</p> <p> download related files</p> <p> start your node to catch up to the latest block height(synchronization)</p> <p> create your Stratos Chain Wallet</p> <p> <code>Faucet</code> or <code>send</code> an amount of tokens to this wallet</p> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#directory-structure","title":"Directory Structure","text":"<p>After the node has caught up to the latest block, your Stratos-chain Wallet has been created and fed with an amount of tokens, <code>$HOME/.stchaind</code> directory will include the following directories and files.</p> <pre><code>.\n\u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 addrbook.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 app.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 client.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 genesis.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 node_key.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 priv_validator_key.json\n\u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 application.db\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 blockstore.db\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 cs.wal\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 evidence.db\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 priv_validator_state.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 snapshots\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 state.db\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tx_index.db\n\u2514\u2500\u2500 keyring-test\n\u251c\u2500\u2500 6894f6eef2b730a5f071eed1f3aeb471dfeeeaaf.address\n\u251c\u2500\u2500 d6052b289b78468612a8f97cf59eac184ba852dd.address\n\u251c\u2500\u2500 d704353fe67f948c99d2e3105adc5159c9e8f2af.address\n\u251c\u2500\u2500 f07ab66406c02aa1a398f4fa41a91192fae08997.address\n\u251c\u2500\u2500 fdb03146cb5a83e08785e8d1f083132d4386b4bd.address\n\u251c\u2500\u2500 user0.info\n\u251c\u2500\u2500 user10.info\n\u251c\u2500\u2500 user1.info\n\u251c\u2500\u2500 user2.info\n\u2514\u2500\u2500 user3.info\n</code></pre> <p></p> <p>In <code>stchaind/config</code> folder:</p> <ul> <li><code>addrbook.json</code> stores peer addresses.</li> <li><code>app.toml</code> contains the default settings required for app.</li> <li><code>config.toml</code> contains various options pertaining to the stratos-chain configurations.</li> <li><code>genesis.json</code> defines the initial state upon genesis of stratos-chain.</li> <li><code>node_key.json</code> contains the node private key and should thus be kept secret.</li> <li><code>priv_validator_key.json</code> contains the validator address, public key and private key, and should thus be kept secret.</li> </ul> <p></p> <p>In <code>stchaind/data</code> folder:</p> <ul> <li>All <code>*.db</code> folders are <code>Tendermint</code> databases</li> <li><code>Tendermint</code> uses a <code>write ahead log</code> (WAL) for consensus</li> <li><code>priv_validator_state.json</code>holds the validator's state</li> </ul> <p></p> <p>In  <code>stchaind/keyring-test</code> folder: </p> <ul> <li>holds the user's information and address in the keyring-backend </li> </ul> <p>Tip</p> <p>By default, the binary executable <code>stchaind</code> has been saved or created in the <code>$HOME</code> folder. If you are not sure what is your <code>$HOME</code> folder, in terminal, use <code>echo $HOME</code> to check. In the following instruction, we suppose you have entered the <code>$HOME</code> folder(use <code>cd $HOME</code>)</p> <p>In Linux:</p> <pre><code>$ echo $HOME\n/home/&lt;your login name&gt;\n</code></pre> <p>In Mac:</p> <pre><code>$ echo $HOME\n/Users/&lt;your login name&gt;\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#stchaind-commands","title":"'stchaind' Commands","text":"<p>For ease of use, these commands have been classified by the following modules:</p> <ul> <li><code>Bank</code></li> <li><code>Distribution</code></li> <li><code>Gov</code></li> <li><code>Slashing</code></li> <li><code>Staking</code></li> <li><code>Register</code></li> <li><code>Sds</code></li> <li><code>Pot</code></li> <li><code>Tendermint</code></li> <li><code>Others</code></li> </ul> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#global-flags","title":"Global Flags","text":"<p>Each command has its specific flags as well as several global flags. The specific flags will be explained along with each command, while the global flags are summarized as the following that can be used for all <code>stchaind</code> commands.</p> <pre><code>Global Flags(can be used for all stchaind commands):\n-b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n--chain-id string          Specify Chain ID for sending Tx (default \"testnet\")\n--fees string              Fees to pay along with transaction; eg: 10wei\n--from string              Name or address of private key with which to sign\n--gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n--gas-prices string        Gas prices to determine the transaction fee (e.g. 10wei)\n-h, --help                     help for stchaind\n--home string              directory for config and data (default \"/home/hong/.stchaind\")\n--keyring-backend string   Select keyring's backend (default \"os\")\n--log_format string        The logging format (json|plain) (default \"plain\")\n--log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n--node string              &lt;host&gt;:&lt;port&gt; to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n--trace                    print out full stack trace on errors\n</code></pre> <p>Tip</p> <ul> <li> <p><code>--chain-id</code>: the current <code>chain-id</code> may change when updating in testing phase . When it is applied, user needs to point out current <code>chain-id</code> which can be found on this page, right next to the search bar at the top of the page </p> </li> <li> <p><code>--home</code>: this directory contains node's account information. By default, node's account info is saved or created under <code>$HOME/.stchaind</code>. In this case, user does not need to add <code>--home</code> flag in the commands. Otherwise, user has to use this flag to specify the path to the node's root directory(default '$HOME') explicitly if not using the default directory. In the following instruction, we suppose the node info has been installed or created under <code>$HOME/.stchaind</code> and skip the <code>--home</code> flag. User can add it where applicable.</p> </li> </ul> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#bank-module","title":"Bank Module","text":""},{"location":"docs-validator-node/stchaind-commands-part-1/#-send","title":"-<code>send</code>","text":"<p>Create and sign a <code>send</code> transaction.</p> <pre><code>Usage:\nstchaind tx bank send [from_key_or_address] [to_address] [amount] [flags]\nFlags:\n-a, --account-number uint   The account number of the signing account (offline mode only)\n--dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n--gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                  help for send\n--keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                Use a connected Ledger device\n--note string           Note to add a description to the transaction (previously --memo)\n--offline               Offline mode (does not allow any online functionality\n-o, --output string         Output format (text|json) (default \"json\")\n-s, --sequence uint         The sequence number of the signing account (offline mode only)\n--sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx bank send st1sqzsk8mplxx22fdgg878ccc3329gfd9g7d9g9d st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx 1gwei \\\n--chain-id=tropos-5  \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-balances","title":"-<code>balances</code>","text":"<p>query account bank balances.</p> <pre><code>Usage:\nstchaind query bank balances [account address] [flags]\nFlags:\n--count-total       count total number of records in all balances to query for\n--denom string      The specific balance denomination to query for\n--height int        Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help              help for balances\n--limit uint        pagination limit of all balances to query for (default 100)\n--offset uint       pagination offset of all balances to query for\n-o, --output string     Output format (text|json) (default \"text\")\n--page uint         pagination page of all balances to query for. This sets offset to a multiple of limit (default 1)\n--page-key string   pagination page-key of all balances to query for\n--reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query bank balances st16czjk2ym0prgvy4gl970t84vrp96s5kayfqmf2\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#distribution-module","title":"Distribution Module","text":""},{"location":"docs-validator-node/stchaind-commands-part-1/#-withdraw-rewards","title":"-<code>withdraw-rewards</code>","text":"<p>Withdraw rewards from a given delegation address and optionally withdraw validator's commission if the delegation address given is a validator operator.</p> <pre><code>Usage:\nstchaind tx distribution withdraw-rewards [validator-addr] [flags]\nFlags:\n-a, --account-number uint   The account number of the signing account (offline mode only)\n--commission            Withdraw the validator's commission in addition to the rewards\n--dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n--gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                  help for withdraw-rewards\n--keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                Use a connected Ledger device\n--note string           Note to add a description to the transaction (previously --memo)\n--offline               Offline mode (does not allow any online functionality\n-o, --output string         Output format (text|json) (default \"json\")\n-s, --sequence uint         The sequence number of the signing account (offline mode only)\n--sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                   Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx distribution withdraw-rewards stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5  \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-withdraw-all-rewards","title":"-<code>withdraw-all-rewards</code>","text":"<p>Withdraw all delegation rewards for a delegator.</p> <pre><code>Usage:\nstchaind tx distribution withdraw-all-rewards [flags]\nFlags:\n-a, --account-number uint   The account number of the signing account (offline mode only)\n--dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n--gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                  help for withdraw-all-rewards\n--keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                Use a connected Ledger device\n--max-msgs int          Limit the number of messages per tx (0 for unlimited)\n--note string           Note to add a description to the transaction (previously --memo)\n--offline               Offline mode (does not allow any online functionality\n-o, --output string         Output format (text|json) (default \"json\")\n-s, --sequence uint         The sequence number of the signing account (offline mode only)\n--sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                   Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx distribution withdraw-all-rewards \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5  \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-commission","title":"-<code>commission</code>","text":"<p>Query validator commission rewards from delegators to that validator.</p> <pre><code>Usage:\nstchaind query distribution commission [validator] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for commission\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query distribution commission stvaloper1gtw399h9vfnekqsz3dg4n6mj0qgdpnh30x66xa\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-rewards","title":"-<code>rewards</code>","text":"<p>Query all rewards earned by a delegator, optionally restrict to reward from a single validator.</p> <pre><code>Usage:\nstchaind query distribution rewards [delegator-addr] [validator-addr] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for rewards\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query distribution rewards st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda --height=9765\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-outstanding-rewards","title":"-<code>outstanding-rewards</code>","text":"<p>Query distribution outstanding (un-withdrawn) rewards for a validator and all their delegations.</p> <pre><code>Usage:\nstchaind query distribution validator-outstanding-rewards [validator] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for validator-outstanding-rewards\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query distribution validator-outstanding-rewards stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-community-pool","title":"-<code>community-pool</code>","text":"<p>Query all coins in the community pool which is under Governance control.</p> <pre><code>Usage:\nstchaind query distribution community-pool [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for community-pool\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query distribution community-pool --height=9765\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-slashes","title":"-<code>slashes</code>","text":"<p>Query all slashes of a validator for a given block range.</p> <pre><code>Usage:\nstchaind query distribution slashes [validator] [start-height] [end-height] [flags]\nFlags:\n--count-total       count total number of records in validator slashes to query for\n--height int        Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help              help for slashes\n--limit uint        pagination limit of validator slashes to query for (default 100)\n--offset uint       pagination offset of validator slashes to query for\n-o, --output string     Output format (text|json) (default \"text\")\n--page uint         pagination page of validator slashes to query for. This sets offset to a multiple of limit (default 1)\n--page-key string   pagination page-key of validator slashes to query for\n--reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query distribution slashes stvaloper1095s2f3m60qz48spy3wr52gw8xmy7xqywnxnrq 0 500\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-distribution-params","title":"-<code>distribution-params</code>","text":"<p>Query distribution params.</p> <pre><code>Usage:\nstchaind query distribution params [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for params\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query distribution params\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#gov-module","title":"Gov Module","text":""},{"location":"docs-validator-node/stchaind-commands-part-1/#-submit-proposal","title":"-<code>submit-proposal</code>","text":"<p>Submit a proposal along with an initial deposit. Proposal title, description, type and deposit can be given directly or through a proposal JSON file.</p> <p>Tip</p> <ul> <li> <p>In the <code>Tropos Incentive Testnet</code> testing phase, the deposit should use <code>utros</code>(NOT <code>stos</code>, <code>gwei</code> or <code>wei</code>). Otherwise, you will get an error and the deposit tokens won't be back.</p> </li> <li> <p>The minimum deposit is <code>10000000000utros</code>.</p> </li> </ul> <p>Except for itself, the command <code>submit-proposal</code> also provides three sub-commands, <code>param-change</code>, <code>community-pool-spend</code> and <code>software-upgrade</code>, to submit a proposal for changing global parameters, distributing funds in <code>community-pool</code> and upgrading software.</p> <pre><code>Usage:\nstchaind tx gov submit-proposal [flags]\nstchaind tx gov submit-proposal [command]\nAvailable Commands:\ncancel-software-upgrade Cancel the current software upgrade proposal\ncommunity-pool-spend    Submit a community pool spend proposal\nparam-change            Submit a parameter change proposal\nsoftware-upgrade        Submit a software upgrade proposal\nFlags:\n-a, --account-number uint   The account number of the signing account (offline mode only)\n--deposit string        The proposal deposit\n--description string    The proposal description\n--dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n--gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                  help for submit-proposal\n--keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                Use a connected Ledger device\n--note string           Note to add a description to the transaction (previously --memo)\n--offline               Offline mode (does not allow any online functionality\n-o, --output string         Output format (text|json) (default \"json\")\n--proposal string       Proposal file path (if this path is given, other proposal flags are ignored)\n-s, --sequence uint         The sequence number of the signing account (offline mode only)\n--sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n--title string          The proposal title\n--type string           The proposal Type\n-y, --yes                   Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p></p> <ul> <li><code>submit-proposal</code> example:</li> </ul> <pre><code>Usage:\nstchaind tx gov submit-proposal &lt;proposal.json&gt; --from=&lt;Name|address of private key&gt;\n</code></pre> <p>Where <code>proposal.json</code> contains:</p> <pre><code>    {\n\"title\": \"Test Proposal\",\n\"description\": \"My awesome proposal\",\n\"type\": \"Text\",\n\"deposit\": \"100000000000utros\"\n}\n</code></pre> <p>Which is equivalent to:</p> <pre><code>stchaind tx gov submit-proposal \\\n--title=\"Test Proposal\" \\\n--description=\"My awesome proposal\" \\\n--type=\"Text\" \\\n--deposit=\"100000000000utros\" \\\n--from=&lt;name|address of private key&gt;\n</code></pre> <p><code>submit-proposal</code> Tx command:</p> <pre><code>stchaind tx gov submit-proposal \\\n--title=\"Test Proposal\" \\\n--description=\"My awesome proposal\" \\\n--type=\"Text\" \\\n--deposit=\"100000000000utros\" \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5  \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei\n</code></pre> <p></p> <ul> <li><code>param-change</code> example:</li> </ul> <p>Submit a parameter proposal along with an initial deposit. The proposal details must be supplied via a JSON file. For values that contains objects, only non-empty fields will be updated.</p> <pre><code>Usage:\nstchaind tx gov submit-proposal param-change [proposal-file] [flags]\n</code></pre> <p><code>param-change</code> example tx command:</p> <pre><code>stchaind tx gov submit-proposal param-change &lt;proposal-file&gt; \\\n--from=&lt;name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend'&gt; \\\n--gas=auto --gas-prices=1000000000wei\n</code></pre> <p>A sample of <code>param_change.json</code> could be:</p> <pre><code>{\n\"title\": \"Param-Change\",\n\"description\": \"This is a test to update deposit params in gov Module\",\n\"changes\": [\n{\n\"subspace\": \"gov\",\n\"key\": \"depositparams\",\n\"value\": {\"max_deposit_period\":\"72800000000000\"}\n}\n],\n\"deposit\": \"1000000000000utros\"\n}\n</code></pre> <p><code>param-change</code> tx command:</p> <pre><code>stchaind tx gov submit-proposal param-change ./helpers/param_change.json \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei\n</code></pre> <p></p> <ul> <li><code>community-pool-spend</code> example:</li> </ul> <p>Submit a community pool spend proposal along with an initial deposit. The proposal details must be supplied via a JSON file.</p> <pre><code>Usage:\nstchaind tx gov submit-proposal community-pool-spend [proposal-file] [flags]\n</code></pre> <p>The <code>proposal.json</code> could be: <pre><code>    {\n\"title\": \"Community Pool Spend\",\n\"description\": \"Pay me some STOSes!\",\n\"recipient\": \"st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\",\n\"amount\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"1000000000000\"\n}\n],\n\"deposit\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"1000000000000\"\n}\n]\n}\n</code></pre></p> <p><code>community-pool-spend</code> tx command:</p> <pre><code>stchaind tx gov submit-proposal community-pool-spend ./helpers/proposal.json \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei\n</code></pre> <p></p> <ul> <li>software-upgrade example:</li> </ul> <p>Submit a software upgrade along with an initial deposit.</p> <pre><code>Usage:\nstchaind tx gov submit-proposal software-upgrade [name] (--upgrade-height [height]) (--upgrade-info [info]) [flags]\n</code></pre> <p><code>software-upgrade</code> tx command:</p> <pre><code>stchaind tx gov submit-proposal software-upgrade=\"v0.3.1\" \\\n--upgrade-height=1000 \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--description=test1 \\\n--title=test1 \\\n--deposit=100000000000utros \\\n--info=testinfo \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-deposit","title":"-<code>deposit</code>","text":"<p>Deposit tokens for an active proposal by <code>proposal-id</code> which can be found with the command <code>stchaind query gov proposals</code>.</p> <p>Tip</p> <ul> <li> <p>In the <code>Tropos Incentive Testnet</code> testing phase, the deposit should use <code>utros</code>, NOT <code>stos</code>, <code>gwei</code> or <code>wei</code>. Otherwise, you will get an error and the deposit tokens won't be back.</p> </li> <li> <p>The minimum deposit is <code>10000000000utros</code></p> </li> </ul> <pre><code>Usage:\nstchaind tx gov deposit [proposal-id] [deposit] [flags]\nFlags:\n-a, --account-number uint   The account number of the signing account (offline mode only)\n--dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n--gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                  help for deposit\n--keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                Use a connected Ledger device\n--note string           Note to add a description to the transaction (previously --memo)\n--offline               Offline mode (does not allow any online functionality\n-o, --output string         Output format (text|json) (default \"json\")\n-s, --sequence uint         The sequence number of the signing account (offline mode only)\n--sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                   Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx gov deposit 7 100000000utros \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-vote-transaction","title":"-<code>vote</code> (transaction)","text":"<p>Submit a vote for an active proposal. Vote options include <code>yes</code>/<code>no</code>/<code>no_with_veto</code>/<code>abstain</code>.</p> <pre><code>Usage:\nstchaind tx gov vote [proposal-id] [option] [flags]\nFlags:\n-a, --account-number uint   The account number of the signing account (offline mode only)\n--dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n--gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                  help for vote\n--keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                Use a connected Ledger device\n--note string           Note to add a description to the transaction (previously --memo)\n--offline               Offline mode (does not allow any online functionality\n-o, --output string         Output format (text|json) (default \"json\")\n-s, --sequence uint         The sequence number of the signing account (offline mode only)\n--sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                   Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx gov vote 7 yes \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-proposal","title":"-<code>proposal</code>","text":"<p>Query details for a proposal. You can find the <code>proposal-id</code> by running <code>stchaind query gov proposals</code></p> <pre><code>Usage:\nstchaind query gov proposal [proposal-id] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for proposal\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query gov proposal 7\n</code></pre> <p>Result:</p> <pre><code>content:\ntitle: Param-Change Staking MaxValidators to 100\ndescription: This is a test to update MaxValidators to 100 in staking Module\nchanges:\n- subspace: staking\nkey: MaxValidators\nvalue: \"100\"\nid: 7\nproposal_status: 3\nfinal_tally_result:\n\"yes\": \"400000000\"\nabstain: \"0\"\n\"no\": \"0\"\nno_with_veto: \"0\"\nsubmit_time: 2021-07-23T14:40:04.976927421Z\ndeposit_end_time: 2021-07-23T14:41:44.976927421Z\ntotal_deposit:\n- denom: utros\namount: \"100010000\"\nvoting_start_time: 2021-07-23T14:40:41.961523583Z\nvoting_end_time: 2021-07-23T14:42:21.961523583Z\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-proposals","title":"-<code>proposals</code>","text":"<p>Query details of all proposals with optional filters(flags).</p> <pre><code>Usage:\nstchaind query gov proposals [flags]\nFlags:\n--count-total        count total number of records in proposals to query for\n--depositor string   (optional) filter by proposals deposited on by depositor\n--height int         Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help               help for proposals\n--limit uint         pagination limit of proposals to query for (default 100)\n--offset uint        pagination offset of proposals to query for\n-o, --output string      Output format (text|json) (default \"text\")\n--page uint          pagination page of proposals to query for. This sets offset to a multiple of limit (default 1)\n--page-key string    pagination page-key of proposals to query for\n--reverse            results are sorted in descending order\n--status string      (optional) filter proposals by proposal status, status: deposit_period/voting_period/passed/rejected\n--voter string       (optional) filter by proposals voted on by voted\nstchaind query gov proposals --depositor st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\nstchaind query gov proposals --voter st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\nstchaind query gov proposals --status (DepositPeriod|VotingPeriod|Passed|Rejected)\nstchaind query gov proposals --page=2 --limit=100\n</code></pre> <p>Example:</p> <pre><code>stchaind query gov proposals\n</code></pre> <p>Result:</p> <pre><code>- content:\ntitle: Param-Change Staking MaxValidators to 5\ndescription: This is a test to update MaxValidators to 5 in staking Module\nchanges:\n- subspace: staking\nkey: MaxValidators\nvalue: \"5\"\nid: 1\nproposal_status: 3\nfinal_tally_result:\n\"yes\": \"383333332\"\nabstain: \"0\"\n\"no\": \"0\"\nno_with_veto: \"0\"\nsubmit_time: 2021-07-19T15:38:08.619640056Z\ndeposit_end_time: 2021-07-19T15:39:48.619640056Z\ntotal_deposit:\n- denom: utros\namount: \"100010000\"\nvoting_start_time: 2021-07-19T15:38:23.789218262Z\nvoting_end_time: 2021-07-19T15:40:03.789218262Z\n...\n- content:\ntitle: Param-Change Staking MaxValidators to 100\ndescription: This is a test to update MaxValidators to 100 in staking Module\nchanges:\n- subspace: staking\nkey: MaxValidators\nvalue: \"100\"\nid: 7\nproposal_status: 3\nfinal_tally_result:\n\"yes\": \"400000000\"\nabstain: \"0\"\n\"no\": \"0\"\nno_with_veto: \"0\"\nsubmit_time: 2021-07-23T14:40:04.976927421Z\ndeposit_end_time: 2021-07-23T14:41:44.976927421Z\ntotal_deposit:\n- denom: utros\namount: \"100010000\"\nvoting_start_time: 2021-07-23T14:40:41.961523583Z\nvoting_end_time: 2021-07-23T14:42:21.961523583Z\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-vote-query","title":"-<code>vote</code> (query)","text":"<p>Query details for a single vote on a proposal given its identifier.</p> <pre><code>Usage:\nstchaind query gov vote [proposal-id] [voter-addr] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for vote\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query gov vote 7 st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\n</code></pre> <p>Result:</p> <pre><code>proposal_id: 7\nvoter: st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\noption: 1\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-votes","title":"-<code>votes</code>","text":"<p>Query vote details for a single proposal by its identifier.</p> <pre><code>Usage:\nstchaind query gov votes [proposal-id] [flags]\nFlags:\n--count-total       count total number of records in votes to query for\n--height int        Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help              help for votes\n--limit uint        pagination limit of votes to query for (default 100)\n--offset uint       pagination offset of votes to query for\n-o, --output string     Output format (text|json) (default \"text\")\n--page uint         pagination page of votes to query for. This sets offset to a multiple of limit (default 1)\n--page-key string   pagination page-key of votes to query for\n--reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query gov votes 7\n</code></pre> <p>Result:</p> <pre><code>- proposal_id: 7\nvoter: st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\noption: 1\n- proposal_id: 7\nvoter: st1m4f4hnyfhpaeqlcgv7lfhgzjwmrvfeggwnpygz\noption: 1\n- proposal_id: 7\nvoter: st1kuhyf59qvukk8r5manky062d6c66utvytm7az6\noption: 1\n- proposal_id: 7\nvoter: st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\noption: 1\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-deposit_1","title":"-<code>deposit</code>","text":"<p>Query details for a single proposal deposit on a proposal by its identifier.</p> <pre><code>Usage:\nstchaind query gov deposit [proposal-id] [depositer-addr] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for deposit\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query gov deposit 7 st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\n</code></pre> <p>Result:</p> <pre><code>proposal_id: 7\ndepositor: st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\namount:\n- denom: utros\namount: \"100000000\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-deposits","title":"-<code>deposits</code>","text":"<p>Query details for all deposits on a proposal.</p> <pre><code>Usage:\nstchaind query gov deposits [proposal-id] [flags]\nFlags:\n--count-total       count total number of records in deposits to query for\n--height int        Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help              help for deposits\n--limit uint        pagination limit of deposits to query for (default 100)\n--offset uint       pagination offset of deposits to query for\n-o, --output string     Output format (text|json) (default \"text\")\n--page uint         pagination page of deposits to query for. This sets offset to a multiple of limit (default 1)\n--page-key string   pagination page-key of deposits to query for\n--reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query gov deposits 7\n</code></pre> <p>Result:</p> <pre><code>- proposal_id: 7\ndepositor: st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\namount:\n- denom: utros\namount: \"100000000\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#slashing-module","title":"Slashing Module","text":""},{"location":"docs-validator-node/stchaind-commands-part-1/#-unjail","title":"-<code>unjail</code>","text":"<p>Unjail a jailed validator.</p> <pre><code>Usage:\nstchaind tx slashing unjail [flags]\nFlags:\n-a, --account-number uint   The account number of the signing account (offline mode only)\n--dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n--gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                  help for unjail\n--keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                Use a connected Ledger device\n--note string           Note to add a description to the transaction (previously --memo)\n--offline               Offline mode (does not allow any online functionality\n-o, --output string         Output format (text|json) (default \"json\")\n-s, --sequence uint         The sequence number of the signing account (offline mode only)\n--sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                   Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx slashing unjail \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-signing-info","title":"-<code>signing-info</code>","text":"<p>Use a validators' consensus public key to find the signing-info for that validator.</p> <pre><code>Usage:\nstchaind query slashing signing-info [validator-conspub] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for signing-info\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query slashing signing-info stvalconspub1zcjduepqsnwlx7rv0ghyvh9tm99zle39df99jt8hccwt8jdrvjs26zqrzh9shdmgyc\n</code></pre> <p>Result:</p> <pre><code>address: stvalcons1sa58sznp26ftquypx994q2eurq6qy38tfm3rn3\nstart_height: 0\nindex_offset: 3874\njailed_until: 1970-01-01T00:00:00Z\ntombstoned: false\nmissed_blocks_counter: 0\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-slashing-params","title":"-<code>slashing-params</code>","text":"<p>Query genesis parameters for the slashing module.</p> <pre><code>Usage:\nstchaind query slashing params [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for params\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query slashing params\n</code></pre> <p>Result:</p> <pre><code>signed_blocks_window: 10000\nmin_signed_per_window: \"0.500000000000000000\"\ndowntime_jail_duration: 10m0s\nslash_fraction_double_sign: \"0.050000000000000000\"\nslash_fraction_downtime: \"0.010000000000000000\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#staking-module","title":"Staking Module","text":""},{"location":"docs-validator-node/stchaind-commands-part-1/#-delegate","title":"-<code>delegate</code>","text":"<p>Delegate an amount of liquid coins to a validator from your wallet.</p> <pre><code>Usage:\nstchaind tx staking delegate [validator-addr] [amount] [flags]\nFlags:\n-a, --account-number uint   The account number of the signing account (offline mode only)\n--dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n--gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                  help for delegate\n--keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                Use a connected Ledger device\n--note string           Note to add a description to the transaction (previously --memo)\n--offline               Offline mode (does not allow any online functionality\n-o, --output string         Output format (text|json) (default \"json\")\n-s, --sequence uint         The sequence number of the signing account (offline mode only)\n--sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                   Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx staking delegate stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k 1000gwei \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-redelegate","title":"-<code>redelegate</code>","text":"<p>Redelegate an amount of illiquid staking tokens from one validator to another.</p> <pre><code>Usage:\nstchaind tx staking redelegate [src-validator-addr] [dst-validator-addr] [amount] [flags]\nFlags:\n-a, --account-number uint   The account number of the signing account (offline mode only)\n--dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n--gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                  help for redelegate\n--keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                Use a connected Ledger device\n--note string           Note to add a description to the transaction (previously --memo)\n--offline               Offline mode (does not allow any online functionality\n-o, --output string         Output format (text|json) (default \"json\")\n-s, --sequence uint         The sequence number of the signing account (offline mode only)\n--sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                   Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx staking redelegate stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k stvaloper1gtw399h9vfnekqsz3dg4n6mj0qgdpnh30x66xa 1000gwei \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-unbond","title":"-<code>unbond</code>","text":"<p>Unbond an amount of bonded shares from a validator.</p> <pre><code>Usage:\nstchaind tx staking unbond [validator-addr] [amount] [flags]\nFlags:\n-a, --account-number uint   The account number of the signing account (offline mode only)\n--dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n--gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                  help for unbond\n--keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                Use a connected Ledger device\n--note string           Note to add a description to the transaction (previously --memo)\n--offline               Offline mode (does not allow any online functionality\n-o, --output string         Output format (text|json) (default \"json\")\n-s, --sequence uint         The sequence number of the signing account (offline mode only)\n--sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                   Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx staking unbond stvaloper12adksjsd7gcsn23h5jmvdygzx2lfw5q4pyf57u 10000gwei \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-create-validator","title":"-<code>create-validator</code>","text":"<p>Create new validator initialized with a self-delegation to it.</p> <pre><code>Usage:\nstchaind tx staking create-validator [flags]\nFlags:\n-a, --account-number uint                 The account number of the signing account (offline mode only)\n--amount string                       Amount of coins to bond\n--commission-max-change-rate string   The maximum commission change rate percentage (per day)\n--commission-max-rate string          The maximum commission rate percentage\n--commission-rate string              The initial commission rate percentage\n--details string                      The validator's (optional) details\n--dry-run                             ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string                  Fee account pays fees for the transaction instead of deducting from the signer\n--gas string                          gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only                       Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                                help for create-validator\n--identity string                     The optional identity signature (ex. UPort or Keybase)\n--ip string                           The node's public IP. It takes effect only when used in combination with --generate-only\n--keyring-dir string                  The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                              Use a connected Ledger device\n--min-self-delegation string          The minimum self delegation required on the validator\n--moniker string                      The validator's name\n--node-id string                      The node's ID\n--note string                         Note to add a description to the transaction (previously --memo)\n--offline                             Offline mode (does not allow any online functionality\n-o, --output string                       Output format (text|json) (default \"json\")\n--pubkey string                       The validator's Protobuf JSON encoded public key\n--security-contact string             The validator's (optional) security contact email\n-s, --sequence uint                       The sequence number of the signing account (offline mode only)\n--sign-mode string                    Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint                 Set a block timeout height to prevent the tx from being committed past a certain height\n--website string                      The validator's (optional) website\n-y, --yes                                 Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Tip</p> <ul> <li><code>moniker</code>: the validator's name</li> <li><code>pubkey</code>: the private key associated with this Tendermint PubKey is used to sign prevotes and precommits</li> <li><code>website</code>: website(Optional)</li> <li><code>description</code>: description(Optional)</li> <li><code>commission-rate</code>: the commission rate on block rewards and fees charged to delegators</li> <li><code>commission-max-rate</code>: the maximum commission rate which this validator can charge. This parameter cannot be changed after create-validator is processed.</li> <li><code>commission-max-change-rate</code>: the maximum daily increase of the validator commission. This parameter cannot be changed after create-validator is processed.</li> <li><code>min-self-delegation</code>: minimum amount of tokens the validator needs to have bonded at all time. If the validator's self-delegated stake falls below this limit, their entire staking pool will unbond. \"1\" = 1000000gwei.</li> <li><code>amount</code>: the amount of tokens to be bonded to the validator at creation. This value should be greater than the value of <code>min-self-delegation</code></li> </ul> <p>Example:</p> <pre><code>stchaind tx staking create-validator \\\n--amount=100stos \\\n--pubkey='{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"JwtmYzaX0b+zjuDypUI2+qy8wa/LFtUUUg0+vr11tpg=\"}' \\\n--moniker=\"myValidator\" \\\n--commission-rate=0.10 \\\n--commission-max-rate=0.20 \\\n--commission-max-change-rate=0.01 \\\n--min-self-delegation=1 \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--chain-id=tropos-5  --keyring-backend=test --gas=auto --gas-prices=1000000000wei -y </code></pre> <p>The value of <code>--pubkey</code> can be retrieved by using the command <code>stchaind tendermint show-validator</code></p> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-edit-validator","title":"-<code>edit-validator</code>","text":"<p>Edit an existing validator account.</p> <pre><code>Usage:\nstchaind tx staking edit-validator [flags]\nFlags:\n-a, --account-number uint          The account number of the signing account (offline mode only)\n--commission-rate string       The new commission rate percentage\n--details string               The validator's (optional) details (default \"[do-not-modify]\")\n--dry-run                      ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string           Fee account pays fees for the transaction instead of deducting from the signer\n--gas string                   gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only                Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                         help for edit-validator\n--identity string              The (optional) identity signature (ex. UPort or Keybase) (default \"[do-not-modify]\")\n--keyring-dir string           The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                       Use a connected Ledger device\n--min-self-delegation string   The minimum self delegation required on the validator\n--moniker string               The validator's name (default \"[do-not-modify]\")\n--note string                  Note to add a description to the transaction (previously --memo)\n--offline                      Offline mode (does not allow any online functionality\n-o, --output string                Output format (text|json) (default \"json\")\n--security-contact string      The validator's (optional) security contact email (default \"[do-not-modify]\")\n-s, --sequence uint                The sequence number of the signing account (offline mode only)\n--sign-mode string             Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint          Set a block timeout height to prevent the tx from being committed past a certain height\n--website string               The validator's (optional) website (default \"[do-not-modify]\")\n-y, --yes                          Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Tip</p> <ul> <li><code>min_self_delegation</code> allows to increase only</li> <li><code>commission-max-rate</code> cannot be changed after create-validator</li> <li><code>commission-max-change-rate</code>cannot be changed after create-validator</li> </ul> <p>Example:</p> <pre><code>stchaind tx staking edit-validator \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--keyring-backend=test \\\n--min-self-delegation=100  \\\n--memo=\"Change 'min-self-delegation' from 1 to 100\" \\\n--chain-id=tropos-5  --keyring-backend=test --gas=auto --gas-prices=1000000000wei -y\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-delegation","title":"-<code>delegation</code>","text":"<p>Query a delegation based on delegator address and validator address.</p> <pre><code>Usage:\nstchaind query staking delegation [delegator-addr] [validator-addr] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for delegation\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking delegation st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k\n</code></pre> <p>Result:</p> <pre><code>delegation:\ndelegator_address: st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\nvalidator_address: stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k\nshares: \"100000000000000000000.000000000000000000\"\nbalance:\ndenom: wei\namount: \"1000000000000000000000\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-delegations","title":"-<code>delegations</code>","text":"<p>Query delegations for an individual delegator on all validators.</p> <pre><code>Usage:\nstchaind query staking delegations [delegator-addr] [flags]\nFlags:\n--count-total       count total number of records in delegations to query for\n--height int        Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help              help for delegations\n--limit uint        pagination limit of delegations to query for (default 100)\n--offset uint       pagination offset of delegations to query for\n-o, --output string     Output format (text|json) (default \"text\")\n--page uint         pagination page of delegations to query for. This sets offset to a multiple of limit (default 1)\n--page-key string   pagination page-key of delegations to query for\n--reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking delegations st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n</code></pre> <p>Result:</p> <pre><code>delegation_responses:\n- balance:\namount: \"500000000000\"\ndenom: wei\ndelegation:\ndelegator_address: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\nshares: \"500000000000.000000000000000000\"\nvalidator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\npagination:\nnext_key: null\ntotal: \"0\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-delegations-to","title":"-<code>delegations-to</code>","text":"<p>Query all delegations made to one validator.</p> <pre><code>Usage:\nstchaind query staking delegations-to [validator-addr] [flags]\nFlags:\n--count-total       count total number of records in validator delegations to query for\n--height int        Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help              help for delegations-to\n--limit uint        pagination limit of validator delegations to query for (default 100)\n--offset uint       pagination offset of validator delegations to query for\n-o, --output string     Output format (text|json) (default \"text\")\n--page uint         pagination page of validator delegations to query for. This sets offset to a multiple of limit (default 1)\n--page-key string   pagination page-key of validator delegations to query for\n--reverse           results are sorted in descending ord\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking delegations-to stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n</code></pre> <p>Result:</p> <pre><code>delegation_responses:\n- balance:\namount: \"500000000000\"\ndenom: wei\ndelegation:\ndelegator_address: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\nshares: \"500000000000.000000000000000000\"\nvalidator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\npagination:\nnext_key: null\ntotal: \"0\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-unbonding-delegations","title":"-<code>unbonding-delegations</code>","text":"<p>Query unbonding delegations for an individual delegator.</p> <pre><code>Usage:\nstchaind query staking unbonding-delegations [delegator-addr] [flags]\nFlags:\n--count-total       count total number of records in unbonding delegations to query for\n--height int        Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help              help for unbonding-delegations\n--limit uint        pagination limit of unbonding delegations to query for (default 100)\n--offset uint       pagination offset of unbonding delegations to query for\n-o, --output string     Output format (text|json) (default \"text\")\n--page uint         pagination page of unbonding delegations to query for. This sets offset to a multiple of limit (default 1)\n--page-key string   pagination page-key of unbonding delegations to query for\n--reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind q staking unbonding-delegations st1xnhfx7c0nev9me835409efjj7whd672xs6d2m2\n</code></pre> <p>Result:</p> <pre><code>- delegator_address: st1xnhfx7c0nev9me835409efjj7whd672xs6d2m2\nvalidator_address: stvaloper1xnhfx7c0nev9me835409efjj7whd672x8ky28p\nentries:\n- creation_height: 5805\ncompletion_time: 2021-08-30T19:53:31.144199109Z\ninitial_balance: \"10000\"\nbalance: \"10000\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-unbonding-delegation","title":"-<code>unbonding-delegation</code>","text":"<p>Query unbonding delegations for an individual delegator on an individual validator.</p> <pre><code>Usage:\nstchaind query staking unbonding-delegation [delegator-addr] [validator-addr] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for unbonding-delegation\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example</p> <pre><code>stchaind q staking unbonding-delegation st1xnhfx7c0nev9me835409efjj7whd672xs6d2m2 stvaloper1xnhfx7c0nev9me835409efjj7whd672x8ky28p\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-unbonding-delegations-from","title":"-<code>unbonding-delegations-from</code>","text":"<p>Query all unbonding delegatations from a validator.</p> <pre><code>Usage:\nstchaind query staking unbonding-delegations-from [validator-addr] [flags]\nFlags:\n--count-total       count total number of records in unbonding delegations to query for\n--height int        Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help              help for unbonding-delegations-from\n--limit uint        pagination limit of unbonding delegations to query for (default 100)\n--offset uint       pagination offset of unbonding delegations to query for\n-o, --output string     Output format (text|json) (default \"text\")\n--page uint         pagination page of unbonding delegations to query for. This sets offset to a multiple of limit (default 1)\n--page-key string   pagination page-key of unbonding delegations to query for\n--reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking unbonding-delegations-from stvaloper1xnhfx7c0nev9me835409efjj7whd672x8ky28p\n</code></pre> <p>Result:</p> <pre><code>- delegator_address: st1xnhfx7c0nev9me835409efjj7whd672xs6d2m2\nvalidator_address: stvaloper1xnhfx7c0nev9me835409efjj7whd672x8ky28p\nentries:\n- creation_height: 5805\ncompletion_time: 2021-08-30T19:53:31.144199109Z\ninitial_balance: \"10000\"\nbalance: \"10000\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-redelegation","title":"-<code>redelegation</code>","text":"<p>Query a redelegation record based on delegator and a source and destination validator address.</p> <pre><code>Usage:\nstchaind query staking redelegation [delegator-addr] [src-validator-addr] [dst-validator-addr] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for redelegation\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking redelegation st15xlpwafgnvvs5hdk8938dp2ve6cjmy4vcf4l76 stvaloper1gamc7ajhzukp08nle9z9asyfx4u4dlz53dquzj stvaloper1zgqhnz69jppcwg9z27vtq3zq9r3du5v6vjqvpq\n</code></pre> <p>Result:</p> <pre><code>- redelegation:\ndelegator_address: st15xlpwafgnvvs5hdk8938dp2ve6cjmy4vcf4l76\nvalidator_src_address: stvaloper1gamc7ajhzukp08nle9z9asyfx4u4dlz53dquzj\nvalidator_dst_address: stvaloper1zgqhnz69jppcwg9z27vtq3zq9r3du5v6vjqvpq\nentries: []\nentries:\n- redelegationentry:\ncreation_height: 1909\ncompletion_time: 2021-09-02T19:33:26.890343914Z\ninitial_balance: \"10000\"\nshares_dst: \"10000.000000000000000000\"\nbalance: \"10000\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-redelegations","title":"-<code>redelegations</code>","text":"<p>Query all redelegations records for one delegator.</p> <pre><code>Usage:\nstchaind query staking redelegations [delegator-addr] [flags]\nFlags:\n--count-total       count total number of records in delegator redelegations to query for\n--height int        Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help              help for redelegations\n--limit uint        pagination limit of delegator redelegations to query for (default 100)\n--offset uint       pagination offset of delegator redelegations to query for\n-o, --output string     Output format (text|json) (default \"text\")\n--page uint         pagination page of delegator redelegations to query for. This sets offset to a multiple of limit (default 1)\n--page-key string   pagination page-key of delegator redelegations to query for\n--reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking redelegations st15xlpwafgnvvs5hdk8938dp2ve6cjmy4vcf4l76\n</code></pre> <p>Result:</p> <pre><code>- redelegation:\ndelegator_address: st15xlpwafgnvvs5hdk8938dp2ve6cjmy4vcf4l76\nvalidator_src_address: stvaloper1gamc7ajhzukp08nle9z9asyfx4u4dlz53dquzj\nvalidator_dst_address: stvaloper1zgqhnz69jppcwg9z27vtq3zq9r3du5v6vjqvpq\nentries: []\nentries:\n- redelegationentry:\ncreation_height: 1909\ncompletion_time: 2021-09-02T19:33:26.890343914Z\ninitial_balance: \"10000\"\nshares_dst: \"10000.000000000000000000\"\nbalance: \"10000\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-redelegations-from","title":"-<code>redelegations-from</code>","text":"<p>Query all unbonding delegatations from a validator.</p> <pre><code>Usage:\nstchaind query staking unbonding-delegations-from [validator-addr] [flags]\nFlags:\n--count-total       count total number of records in unbonding delegations to query for\n--height int        Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help              help for unbonding-delegations-from\n--limit uint        pagination limit of unbonding delegations to query for (default 100)\n--offset uint       pagination offset of unbonding delegations to query for\n-o, --output string     Output format (text|json) (default \"text\")\n--page uint         pagination page of unbonding delegations to query for. This sets offset to a multiple of limit (default 1)\n--page-key string   pagination page-key of unbonding delegations to query for\n--reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking unbonding-delegations-from stvaloper1xnhfx7c0nev9me835409efjj7whd672x8ky28p\n</code></pre> <p>Result:</p> <pre><code>- delegator_address: st1xnhfx7c0nev9me835409efjj7whd672xs6d2m2\nvalidator_address: stvaloper1xnhfx7c0nev9me835409efjj7whd672x8ky28p\nentries:\n- creation_height: 5805\ncompletion_time: 2021-08-30T19:53:31.144199109Z\ninitial_balance: \"10000\"\nbalance: \"10000\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-historical-info","title":"-<code>historical-info</code>","text":"<p>Query historical info at given height.</p> <pre><code>Usage:\nstchaind query staking historical-info [height] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for historical-info\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <pre><code>Note:\nThe response of `historical-info` is depended on the `skating` parameter `HistoricalEntries`. If `HistoricalEntries` is \"0\", the response will always be\nERROR: no historical info found\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking historical-info 300\n</code></pre> <p>Result:</p> <pre><code>header:\napp_hash: fun5OdjHvsMZU1g+mcpgnfDuVBDSTTQjrTjJ3jvEkpo=\nchain_id: test-chain\nconsensus_hash: BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=\ndata_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\nevidence_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\nheight: \"300\"\nlast_block_id:\nhash: heoL6s+ZfzE4xdhvUuKe5OKppwYIklXVvV+hDQe17G0=\npart_set_header:\nhash: wHoreN7ckwhF3a4dTDRKi47wvrIq0gme2AgNXBf/E3U=\ntotal: 1\nlast_commit_hash: sk5idFtJj7qZFHyVbQ/PsB/TQfovdKn2SEekPWF7ZJc=\nlast_results_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\nnext_validators_hash: UjS9kaOnUeBVw1h2V43kpGYxGoDVQLWYha9o721NVt4=\nproposer_address: GKcWnBtCfZlBM/ez1FBOknids3w=\ntime: \"2023-01-11T00:51:55.887814534Z\"\nvalidators_hash: UjS9kaOnUeBVw1h2V43kpGYxGoDVQLWYha9o721NVt4=\nversion:\napp: \"0\"\nblock: \"11\"\nvalset:\n- commission:\ncommission_rates:\nmax_change_rate: \"0.010000000000000000\"\nmax_rate: \"0.200000000000000000\"\nrate: \"0.100000000000000000\"\nupdate_time: \"2023-01-09T17:08:58.489050300Z\"\nconsensus_pubkey:\n'@type': /cosmos.crypto.ed25519.PubKey\nkey: 69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\ndelegator_shares: \"500000000000.000000000000000000\"\ndescription:\ndetails: \"\"\nidentity: \"\"\nmoniker: node\nsecurity_contact: \"\"\nwebsite: \"\"\njailed: false\nmin_self_delegation: \"1\"\noperator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\nstatus: BOND_STATUS_BONDED\ntokens: \"500000000000\"\nunbonding_height: \"0\"\nunbonding_time: \"1970-01-01T00:00:00Z\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-pool","title":"-<code>pool</code>","text":"<p>Query values for amounts stored in the staking pool.</p> <pre><code>Usage:\nstchaind query staking pool [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for pool\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking pool\n</code></pre> <p>Result:</p> <pre><code>bonded_tokens: \"500000000000\"\nnot_bonded_tokens: \"0\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-staking-params","title":"-<code>staking-params</code>","text":"<p>Query values set as staking parameters.</p> <pre><code>Usage:\nstchaind query staking params [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for params\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking params\n</code></pre> <p>Result:</p> <pre><code>bond_denom: wei\nhistorical_entries: 10000\nmax_entries: 7\nmax_validators: 100\nunbonding_time: 1814400s\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-validator","title":"-<code>validator</code>","text":"<p>Query details about an individual validator</p> <pre><code>Usage:\nstchaind query staking validator [validator-addr] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for validator\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking validator stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n</code></pre> <p>Result:</p> <pre><code>- |\ncommission:\ncommission_rates:\nmax_change_rate: \"0.010000000000000000\"\nmax_rate: \"0.200000000000000000\"\nrate: \"0.100000000000000000\"\nupdate_time: \"2023-01-09T17:08:58.489050300Z\"\nconsensus_pubkey:\n'@type': /cosmos.crypto.ed25519.PubKey\nkey: 69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\ndelegator_shares: \"500000000000.000000000000000000\"\ndescription:\ndetails: \"\"\nidentity: \"\"\nmoniker: node\nsecurity_contact: \"\"\nwebsite: \"\"\njailed: false\nmin_self_delegation: \"1\"\noperator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\nstatus: BOND_STATUS_BONDED\ntokens: \"500000000000\"\nunbonding_height: \"0\"\nunbonding_time: \"1970-01-01T00:00:00Z\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-1/#-validators","title":"-<code>validators</code>","text":"<p>Query values for amounts stored in the staking pool.</p> <pre><code>Usage:\nstchaind query staking validators [flags]\nFlags:\n--count-total       count total number of records in validators to query for\n--height int        Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help              help for validators\n--limit uint        pagination limit of validators to query for (default 100)\n--offset uint       pagination offset of validators to query for\n-o, --output string     Output format (text|json) (default \"text\")\n--page uint         pagination page of validators to query for. This sets offset to a multiple of limit (default 1)\n--page-key string   pagination page-key of validators to query for\n--reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking validators\n</code></pre> <p>Result:</p> <pre><code>- |\npagination:\nnext_key: null\ntotal: \"0\"\nvalidators:\n- commission:\ncommission_rates:\nmax_change_rate: \"0.010000000000000000\"\nmax_rate: \"0.200000000000000000\"\nrate: \"0.100000000000000000\"\nupdate_time: \"2023-01-09T17:08:58.489050300Z\"\nconsensus_pubkey:\n'@type': /cosmos.crypto.ed25519.PubKey\nkey: 69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\ndelegator_shares: \"500000000000.000000000000000000\"\ndescription:\ndetails: \"\"\nidentity: \"\"\nmoniker: node\nsecurity_contact: \"\"\nwebsite: \"\"\njailed: false\nmin_self_delegation: \"1\"\noperator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\nstatus: BOND_STATUS_BONDED\ntokens: \"500000000000\"\nunbonding_height: \"0\"\nunbonding_time: \"1970-01-01T00:00:00Z\"\n</code></pre> <p></p> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/","title":"Stratos Chain stchaind commands part 2","text":"<p>This document is the second part of <code>stchaind</code> commands for Stratos Chain.</p> <ul> <li><code>Bank</code></li> <li><code>Distribution</code></li> <li><code>Gov</code></li> <li><code>Slashing</code></li> <li><code>Staking</code></li> <li><code>Register</code></li> <li><code>Sds</code></li> <li><code>Pot</code></li> <li><code>Tendermint</code></li> <li><code>Others</code></li> </ul> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#register-module","title":"Register Module","text":""},{"location":"docs-validator-node/stchaind-commands-part-2/#-create-resource-node","title":"-<code>create-resource-node</code>","text":"<p>Create a new resource node</p> <pre><code>Usage:\nstchaind tx register create-resource-node [flags]\nFlags:\n-a, --account-number uint       The account number of the signing account (offline mode only)\n--amount string             Amount of coins to bond\n--details string            The node's (optional) details\n--dry-run                   ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string        Fee account pays fees for the transaction instead of deducting from the signer\n--gas string                gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only             Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                      help for create-resource-node\n--identity string           The (optional) identity signature (ex. UPort or Keybase)\n--keyring-dir string        The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                    Use a connected Ledger device\n--moniker string            The node's name\n--network-address string    The address of the PP node\n--node-type uint32          The value of node_type is determined by the three node types (storage=4/database=2/computation=1) and their arbitrary combinations.\n--note string               Note to add a description to the transaction (previously --memo)\n--offline                   Offline mode (does not allow any online functionality\n-o, --output string             Output format (text|json) (default \"json\")\n--pubkey string             The resource node's Protobuf JSON encoded public key\n--security-contact string   The node's (optional) security contact email\n-s, --sequence uint             The sequence number of the signing account (offline mode only)\n--sign-mode string          Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint       Set a block timeout height to prevent the tx from being committed past a certain height\n--website string            The node's (optional) website\n-y, --yes                       Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register create-resource-node \\\n--network-address=&lt;network-address&gt; \\\n--amount=&lt;amount&gt; \\\n--pubkey=&lt;pubkey of resource node&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--moniker=&lt;name of resource node&gt; \\\n--node-type=&lt;resource node type, int 1~7&gt;\n</code></pre> <p>Transaction example:</p> <pre><code> stchaind tx register create-resource-node \\\n--network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv \\\n--amount=10stos \\\n--pubkey=stsdspub1zcjduepqmrsput8d8c4tqeztrwzjjntg0jdgvmuyd5pur2g0chpxv5cccdsq4drddm \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--moniker=resource-node0 \\\n--node-type=1 \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p>There are three ways to check if the new resource node is in the resource-node list:</p> <ul> <li>Client Command</li> <li>REST API</li> <li>GRPC Command</li> </ul> <p>Client Command:</p> <pre><code>stchaind query register get-resource-node --network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\n</code></pre> <p>Response: <pre><code>creation_time: \"2023-01-10T16:48:24.591781632Z\"\ndescription:\ndetails: \"\"\nidentity: \"\"\nmoniker: resource-node0\nsecurity_contact: \"\"\nwebsite: \"\"\nnetwork_address: stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\nnode_type: 1\nowner_address: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\npubkey:\n'@type': /cosmos.crypto.ed25519.PubKey\nkey: 2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\nstatus: BOND_STATUS_BONDED\nsuspend: true\ntokens: \"10000000000000000000\"\n</code></pre></p> <p>REST API:</p> <pre><code>http://127.0.0.1:1317/register/staking/address/stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\n</code></pre> <p>Response:</p> <pre><code>{\"height\":\"7\",\"result\":{\n\"network_address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n\"pubkey\": {\n\"type\": \"tendermint/PubKeyEd25519\",\n\"value\": \"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"\n},\n\"suspend\": true,\n\"status\": 3,\n\"tokens\": \"10000000000000000000\",\n\"owner_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"description\": {\n\"moniker\": \"resource-node0\",\n\"identity\": \"\",\n\"website\": \"\",\n\"security_contact\": \"\",\n\"details\": \"\"\n},\n\"creation_time\": \"2023-01-10T16:48:24.591781632Z\",\n\"node_type\": 1,\n\"bonded_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"10000000000000000000\"\n},\n\"un_bonding_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n},\n\"un_bonded_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n}\n</code></pre> <p>GRPC Command:</p> <pre><code>grpcurl -plaintext -d '{\"network_addr\":\"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\"query_type\":\"0\" }' 127.0.0.1:9090 stratos.register.v1.Query.StakeByNode\n</code></pre> <p>Note:</p> <pre><code>query_type     = 0   query the staking info of both resource nodes or meta and nodes with this account address\nquery_type     = 1   query the staking info of only meta node with this account address\nquery_type     = 2   query the staking info of only resource node with this account address\n</code></pre> <p>Response:</p> <pre><code>{\n\"stakingInfo\": {\n\"networkAddress\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n\"pubkey\": {\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"},\n\"suspend\": true,\n\"status\": \"BOND_STATUS_BONDED\",\n\"tokens\": \"10000000000000000000\",\n\"ownerAddress\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"description\": {\n\"moniker\": \"resource-node0\"\n},\n\"creationTime\": \"2023-01-10T18:16:14.738068297Z\",\n\"nodeType\": 1,\n\"bondedStake\": {\n\"denom\": \"wei\",\n\"amount\": \"10000000000000000000\"\n},\n\"unBondingStake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n},\n\"unBondedStake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n}\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-update-resource-node","title":"-<code>update-resource-node</code>","text":"<p>Update a resource node info</p> <pre><code>Usage:\nstchaind tx register update-resource-node [flags]\nFlags:\n-a, --account-number uint       The account number of the signing account (offline mode only)\n--details string            The node's (optional) details\n--dry-run                   ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string        Fee account pays fees for the transaction instead of deducting from the signer\n--gas string                gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only             Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                      help for update-resource-node\n--identity string           The (optional) identity signature (ex. UPort or Keybase)\n--keyring-dir string        The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                    Use a connected Ledger device\n--moniker string            The node's name\n--network-address string    The address of the PP node\n--node-type uint32          The value of node_type is determined by the three node types (storage=4/database=2/computation=1) and their arbitrary combinations.\n--note string               Note to add a description to the transaction (previously --memo)\n--offline                   Offline mode (does not allow any online functionality\n-o, --output string             Output format (text|json) (default \"json\")\n--security-contact string   The node's (optional) security contact email\n-s, --sequence uint             The sequence number of the signing account (offline mode only)\n--sign-mode string          Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint       Set a block timeout height to prevent the tx from being committed past a certain height\n--website string            The node's (optional) website\n-y, --yes                       Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register update-resource-node \\\n--network-address=&lt;resourceNode_address&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--moniker=&lt;name of resource node&gt; \\\n--node-type=&lt;resource node type, int 1~7&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register update-resource-node \\\n--network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--moniker=resource-nodeupdate \\\n--node-type=7 \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p>Check if the new resource node info has been updated.</p> <pre><code>stchaind query register get-resource-node --network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\n</code></pre> <p>Response:</p> <pre><code>creation_time: \"2023-01-10T18:16:14.738068297Z\"\ndescription:\ndetails: \"\"\nidentity: \"\"\nmoniker: resource-nodeupdate\nsecurity_contact: \"\"\nwebsite: \"\"\nnetwork_address: stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\nnode_type: 7\nowner_address: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\npubkey:\n'@type': /cosmos.crypto.ed25519.PubKey\nkey: 2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\nstatus: BOND_STATUS_BONDED\nsuspend: true\ntokens: \"10000000000000000000\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-update-resource-node-stake","title":"-<code>update-resource-node-stake</code>","text":"<p>update resource node's stake</p> <pre><code>Usage:\nstchaind tx register update-resource-node-stake [flags]\nFlags:\n-a, --account-number uint      The account number of the signing account (offline mode only)\n--dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n--gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                     help for update-resource-node-stake\n--incr-stake string        Boolean indicator of increase/decrease of stake delta, true for increase and false for decrease\n--keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                   Use a connected Ledger device\n--network-address string   The address of the PP node\n--note string              Note to add a description to the transaction (previously --memo)\n--offline                  Offline mode (does not allow any online functionality\n-o, --output string            Output format (text|json) (default \"json\")\n-s, --sequence uint            The sequence number of the signing account (offline mode only)\n--sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n--stake-delta string       Stake change of coins to be made (always positive like 100000gwei)\n--timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                      Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register update-resource-node-stake \\\n--network-address=&lt;resource_node_address&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--stake-delta=&lt;delta_amount&gt; \\\n--incr-stake=&lt;bool&gt; \\\n--gas=auto\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register update-resource-node \\\n--network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--moniker=resource-nodeupdate \\\n--node-type=7 --chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-remove-resource-node","title":"-<code>remove-resource-node</code>","text":"<p>remove a resource node</p> <pre><code>Usage:\nstchaind tx register remove-resource-node [flag] [flags]\nFlags:\n-a, --account-number uint      The account number of the signing account (offline mode only)\n--dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n--gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                     help for remove-resource-node\n--keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                   Use a connected Ledger device\n--network-address string   The address of the PP node\n--note string              Note to add a description to the transaction (previously --memo)\n--offline                  Offline mode (does not allow any online functionality\n-o, --output string            Output format (text|json) (default \"json\")\n-s, --sequence uint            The sequence number of the signing account (offline mode only)\n--sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                      Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register remove-resource-node \\\n--network-address=&lt;resource_node_address&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register remove-resource-node \\\n--network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p>Check the status update of the resource node</p> <pre><code>http://127.0.0.1:1317/register/staking/address/stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\n</code></pre> <p>Response:</p> <pre><code>    {\n\"height\": \"173\",\n\"result\": {\n\"network_address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n\"pubkey\": {\n\"type\": \"tendermint/PubKeyEd25519\",\n\"value\": \"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"\n},\n\"suspend\": true,\n\"status\": 2,\n\"tokens\": \"10000000000000000000\",\n\"owner_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"description\": {\n\"moniker\": \"resource-nodeupdate\",\n\"identity\": \"\",\n\"website\": \"\",\n\"security_contact\": \"\",\n\"details\": \"\"\n},\n\"creation_time\": \"2023-01-10T18:16:14.738068297Z\",\n\"node_type\": 7,\n\"bonded_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n},\n\"un_bonding_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"10000000000000000000\"\n},\n\"un_bonded_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n}\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-create-meta-node","title":"-<code>create-meta-node</code>","text":"<p>Create a new meta node</p> <pre><code>Usage:\nstchaind tx register create-meta-node [flags]\nFlags:\n-a, --account-number uint       The account number of the signing account (offline mode only)\n--amount string             Amount of coins to bond\n--details string            The node's (optional) details\n--dry-run                   ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string        Fee account pays fees for the transaction instead of deducting from the signer\n--gas string                gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only             Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                      help for create-meta-node\n--identity string           The (optional) identity signature (ex. UPort or Keybase)\n--keyring-dir string        The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                    Use a connected Ledger device\n--moniker string            The node's name\n--network-address string    The address of the PP node\n--note string               Note to add a description to the transaction (previously --memo)\n--offline                   Offline mode (does not allow any online functionality\n-o, --output string             Output format (text|json) (default \"json\")\n--pubkey string             The resource node's Protobuf JSON encoded public key\n--security-contact string   The node's (optional) security contact email\n-s, --sequence uint             The sequence number of the signing account (offline mode only)\n--sign-mode string          Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint       Set a block timeout height to prevent the tx from being committed past a certain height\n--website string            The node's (optional) website\n-y, --yes                       Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register create-meta-node \\\n--network-address=&lt;network-address&gt; \\\n--amount=&lt;amount&gt; \\\n--pubkey=&lt;pubkey of meta node&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--moniker=&lt;name of resource node&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register create-meta-node \\\n--network-address=stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca \\\n--amount=10stos \\\n--pubkey=stsdspub1zcjduepqv7sj69c52rsdu5m8nk6tg4v5y8fh43w2hl9aa7mp3qgr9ym0feyshrc4wv \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--moniker=meta-node0 \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-meta-node-reg-vote","title":"-<code>meta-node-reg-vote</code>","text":"<p>vote for the registration of a new meta node</p> <pre><code>Usage:\nstchaind tx register meta-node-reg-vote [flags]\nFlags:\n-a, --account-number uint                The account number of the signing account (offline mode only)\n--candidate-network-address string    (default \"The network address of the candidate PP node\")\n--candidate-owner-address string      (default \"The owner address of the candidate PP node\")\n--dry-run                            ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string                 Fee account pays fees for the transaction instead of deducting from the signer\n--gas string                         gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only                      Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                               help for meta-node-reg-vote\n--keyring-dir string                 The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                             Use a connected Ledger device\n--note string                        Note to add a description to the transaction (previously --memo)\n--offline                            Offline mode (does not allow any online functionality\n--opinion                            Opinion of the vote for the registration of Meta node.\n-o, --output string                      Output format (text|json) (default \"json\")\n-s, --sequence uint                      The sequence number of the signing account (offline mode only)\n--sign-mode string                   Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint                Set a block timeout height to prevent the tx from being committed past a certain height\n--voter-network-address string        (default \"The address of the PP node that made the vote.\")\n-y, --yes                                Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Warning</p> <p>A newly-created meta node needs 7 days by default to be voted by other active meta nodes</p> <p>Example:</p> <pre><code>Usage:\nstchaind tx register meta-node-reg-vote \\\n--candidate-network-address=&lt;candidate-network-address&gt; \\\n--candidate-owner-address=&lt;candidate-owner-address&gt; \\\n--opinion=&lt;true|false&gt; \\\n--voter-network-address=&lt;voter-network-address&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register meta-node-reg-vote \\\n--candidate-network-address=stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--candidate-owner-address=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--opinion=true \\\n--voter-network-address=stsds13yakj2xgzzdfcw7kd5gtfcfv2k6sn5eg4vdfem \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-update-meta-node","title":"-<code>update-meta-node</code>","text":"<p>Update meta node info</p> <pre><code>Usage:\nstchaind tx register update-meta-node [flags]\nFlags:\n-a, --account-number uint       The account number of the signing account (offline mode only)\n--details string            The node's (optional) details\n--dry-run                   ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string        Fee account pays fees for the transaction instead of deducting from the signer\n--gas string                gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only             Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                      help for update-meta-node\n--identity string           The (optional) identity signature (ex. UPort or Keybase)\n--keyring-dir string        The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                    Use a connected Ledger device\n--moniker string            The node's name\n--network-address string    The address of the PP node\n--note string               Note to add a description to the transaction (previously --memo)\n--offline                   Offline mode (does not allow any online functionality\n-o, --output string             Output format (text|json) (default \"json\")\n--security-contact string   The node's (optional) security contact email\n-s, --sequence uint             The sequence number of the signing account (offline mode only)\n--sign-mode string          Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint       Set a block timeout height to prevent the tx from being committed past a certain height\n--website string            The node's (optional) website\n-y, --yes                       Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register update-meta-node \\\n--network-address&lt;network-address&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--moniker=&lt;name of meta node&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register update-meta-node \\\n--network-address=stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--moniker=meta-node \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-remove-meta-node","title":"-<code>remove-meta-node</code>","text":"<p>Remove an meta node</p> <pre><code>Usage:\nstchaind tx register remove-meta-node &lt;meta_node_address&gt; &lt;owner_address&gt; [flags]\nFlags:\n-a, --account-number uint      The account number of the signing account (offline mode only)\n-b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n--dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fees string              Fees to pay along with transaction; eg: 10gwei\n--from string              Name or address of private key with which to sign\n--gas string               gas limit to set per-transaction; set to \"auto\" to calculate required gas automatically (default 200000) (default \"200000\")\n--gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n--gas-prices string        Gas prices to determine the transaction fee (e.g. 10gwei)\n--generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible and the node operates offline)\n-h, --help                     help for remove-meta-node\n--indent                   Add indent to JSON response\n--keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n--ledger                   Use a connected Ledger device\n--memo string              Memo to send along with transaction\n--node string              &lt;host&gt;:&lt;port&gt; to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n-s, --sequence uint            The sequence number of the signing account (offline mode only)\n--trust-node               Trust connected full node (don't verify proofs for responses) (default true)\n-y, --yes                      Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register remove-meta-node \\\n--network-address=&lt;meta_node_address&gt; \\\n--from=owner_address&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--gas=auto\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register remove-meta-node \\\n--network-address=stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p>Check if the meta node has been removed from the meta-node list using REST API</p> <pre><code>stchaind query register get-meta-node --network-address=stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca\n</code></pre> <p>Response:</p> <pre><code>    node:\ncreation_time: \"2023-01-10T19:45:09.674241234Z\"\ndescription:\ndetails: \"\"\nidentity: \"\"\nmoniker: meta-node0\nsecurity_contact: \"\"\nwebsite: \"\"\nnetwork_address: stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca\nowner_address: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\npubkey:\n'@type': /cosmos.crypto.ed25519.PubKey\nkey: Z6EtFxRQ4N5TZ520tFWUIdN6xcq/y977YYgQMpNvTkk=\nstatus: BOND_STATUS_UNBONDING\nsuspend: false\ntokens: \"10000000000000000000\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-update-meta-node-stake","title":"-<code>update-meta-node-stake</code>","text":"<p>update meta node's stake</p> <pre><code>Usage:\nstchaind tx register update-meta-node-stake [flags]\nFlags:\n-a, --account-number uint      The account number of the signing account (offline mode only)\n--dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n--gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                     help for update-meta-node-stake\n--incr-stake string        Boolean indicator of increase/decrease of stake delta, true for increase and false for decrease\n--keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                   Use a connected Ledger device\n--network-address string   The address of the PP node\n--note string              Note to add a description to the transaction (previously --memo)\n--offline                  Offline mode (does not allow any online functionality\n-o, --output string            Output format (text|json) (default \"json\")\n-s, --sequence uint            The sequence number of the signing account (offline mode only)\n--sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n--stake-delta string       Stake change of coins to be made (always positive like 100000gwei)\n--timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                      Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register update-meta-node-stake \\\n--network-address=&lt;meta_node_address&gt; \\\n--from=&lt;owner_address&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--stake-delta=&lt;delta_amount&gt; \\\n--incr-stake=&lt;true|false&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register update-meta-node-stake \\\n--network-address=stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--stake-delta=100gwei \\\n--incr-stake=true \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-get-resource-nodes","title":"-<code>get-resource-nodes</code>","text":"<p>Query details about an individual resource node by its network address</p> <pre><code>Usage:\nstchaind query register get-resource-node [flags]\nFlags:\n--height int               Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help                     help for get-resource-node\n--network-address string   The address of the PP node\n-o, --output string            Output format (text|json) (default \"text\"\n</code></pre> <p>Example:</p> <p>Query by network-address:</p> <pre><code>Usage:\nstchaind query register get-resource-node --network-address=&lt;resource_node_address&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind query register get-resource-node --network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-get-meta-nodes","title":"<code>-get-meta-nodes</code>","text":"<p>Query all meta nodes by network id or moniker</p> <pre><code>Usage:\nstchaind query register get-meta-node [flags]\nFlags:\n--height int               Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help                     help for get-meta-node\n--network-address string   The address of the PP node\n-o, --output string            Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <p>Query by network address: <pre><code>Usage:\nstchaind query register get-meta-nodes --network-address=&lt;meta_node_address&gt;\n</code></pre></p> <p>Transaction example:</p> <pre><code>stchaind query register get-meta-node --network-address=stsds14c3em44vlh276cujnr2ez802uyjyeqrrsu9fuh\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-get-resource-count","title":"-<code>get-resource-count</code>","text":"<p>Query the total number of bonded resource nodes</p> <pre><code>Usage:\nstchaind query register get-resource-count [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for get-resource-count\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query register get-resource-count\nnumber: \"2\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-get-meta-count","title":"-<code>get-meta-count</code>","text":"<p>Query the total number of bonded meta nodes</p> <pre><code>Usage:\nstchaind query register get-meta-count [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for get-meta-count\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <p>Example: <pre><code>stchaind query register get-meta-count\nnumber: \"4\"\n</code></pre></p> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-register-params","title":"-<code>register-params</code>","text":"<p>Query values set as register parameters</p> <pre><code>Usage:\nstchaind query register params [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for params\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query register params\nbond_denom: wei\nmax_entries: 16\nresource_node_reg_enabled: true\nunbonding_completion_time: 1209600s\nunbonding_threashold_time: 15552000s\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#sds-module","title":"SDS Module","text":""},{"location":"docs-validator-node/stchaind-commands-part-2/#-upload-transaction","title":"-<code>upload</code> (transaction)","text":"<p>Create and sign a file upload tx</p> <pre><code>Usage:\nstchaind tx sds upload [flags]\nFlags:\n-a, --account-number uint   The account number of the signing account (offline mode only)\n--dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n--file-hash string      The hash of uploaded file\n--gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                  help for upload\n--keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                Use a connected Ledger device\n--note string           Note to add a description to the transaction (previously --memo)\n--offline               Offline mode (does not allow any online functionality\n-o, --output string         Output format (text|json) (default \"json\")\n--reporter string       The reporter address of meta node that reported the file\n-s, --sequence uint         The sequence number of the signing account (offline mode only)\n--sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n--uploader string       The owner address of resource node that uploaded the file\n-y, --yes                   Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx sds upload \\\n--file-hash=&lt;file hash&gt; \\\n--uploader=&lt;file uploader, owner address of resource node&gt; \\\n--reporter=&lt;file reporter, meta node address&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Transaction example:</p> <pre><code> stchaind tx sds upload \\\n--file-hash=001A1FC0B82DD3B0353B59E90388EEA2B73DEECA872955B414EBC99ECD3E3C1F \\\n--uploader=st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw \\\n--reporter=stsds14c3em44vlh276cujnr2ez802uyjyeqrrsu9fuh \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-prepay","title":"-<code>prepay</code>","text":"<p>Create and sign a prepay tx</p> <pre><code>Usage:\nstchaind tx sds prepay [from_address] [coins] [flags]\nFlags:\n-a, --account-number uint   The account number of the signing account (offline mode only)\n--dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n--gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                  help for prepay\n--keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                Use a connected Ledger device\n--note string           Note to add a description to the transaction (previously --memo)\n--offline               Offline mode (does not allow any online functionality\n-o, --output string         Output format (text|json) (default \"json\")\n-s, --sequence uint         The sequence number of the signing account (offline mode only)\n--sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                   Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx sds prepay &lt;from_address, Name|address of private key&gt; &lt;coins&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--gas=auto\n</code></pre> <p>Transaction example:</p> <pre><code> stchaind tx sds prepay st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh 10stos \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-upload-query","title":"-<code>upload</code> (query)","text":"<p>Query uploaded file info by hash</p> <pre><code>Usage:\nstchaind query sds upload [file_hash] [flags]\nFlags:\n--count-total       count total number of records in upload to query for\n--height int        Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help              help for upload\n--limit uint        pagination limit of upload to query for (default 100)\n--offset uint       pagination offset of upload to query for\n-o, --output string     Output format (text|json) (default \"text\")\n--page uint         pagination page of upload to query for. This sets offset to a multiple of limit (default 1)\n--page-key string   pagination page-key of upload to query for\n--reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind query sds upload &lt;file hash&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind query sds upload 001A1FC0B82DD3B0353B59E90388EEA2B73DEECA872955B414EBC99ECD3E3C1F\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-sds-params","title":"-<code>sds-params</code>","text":"<p>Query values set as sds parameters</p> <pre><code>Usage:\nstchaind query sds params [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for params\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query sds params\nbond_denom: wei\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#pot-module","title":"Pot Module","text":""},{"location":"docs-validator-node/stchaind-commands-part-2/#-foundation-deposit","title":"-<code>foundation-deposit</code>","text":"<p>Deposit to foundation account</p> <pre><code>Usage:\nstchaind tx pot foundation-deposit [flags]\nFlags:\n-a, --account-number uint   The account number of the signing account (offline mode only)\n--amount string         Amount of coins to withdraw\n--dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n--gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                  help for foundation-deposit\n--keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                Use a connected Ledger device\n--note string           Note to add a description to the transaction (previously --memo)\n--offline               Offline mode (does not allow any online functionality\n-o, --output string         Output format (text|json) (default \"json\")\n-s, --sequence uint         The sequence number of the signing account (offline mode only)\n--sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n--timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                   Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx pot foundation-deposit \\\n--amount=&lt;amount&gt; \\\n--from=&lt;from_address, Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx pot foundation-deposit \\\n--amount=40000stos \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-withdraw","title":"-<code>withdraw</code>","text":"<p>withdraw POT reward</p> <pre><code>Usage:\nstchaind tx pot withdraw [flags]\nFlags:\n-a, --account-number uint      The account number of the signing account (offline mode only)\n--amount string            Amount of coins to withdraw\n-b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n--dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fees string              Fees to pay along with transaction; eg: 10gwei\n--from string              Name or address of private key with which to sign\n--gas string               gas limit to set per-transaction; set to \"auto\" to calculate required gas automatically (default 200000) (default \"200000\")\n--gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n--gas-prices string        Gas prices to determine the transaction fee (e.g. 10gwei)\n--generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible and the node operates offline)\n-h, --help                     help for withdraw\n--indent                   Add indent to JSON response\n--keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n--ledger                   Use a connected Ledger device\n--memo string              Memo to send along with transaction\n--node string              &lt;host&gt;:&lt;port&gt; to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n-s, --sequence uint            The sequence number of the signing account (offline mode only)\n--target-address string    The target account where the money is deposited after withdraw\n--trust-node               Trust connected full node (don't verify proofs for responses) (default true)\n-y, --yes                      Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx pot withdraw \\\n--amount=&lt;amount to withdraw&gt; \\\n--target-address=&lt;wallet address of reciever&gt; \\\n--from=&lt;from_address, Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx pot withdraw \\\n--amount=100utros \\\n--target-address=st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh --chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-legacy-withdraw","title":"-<code>legacy-withdraw</code>","text":"<p>Temporarily used to withdraw POT reward recorded by legacy wallet address</p> <pre><code>Usage:\nstchaind tx pot legacy-withdraw [flags]\nFlags:\n-a, --account-number uint     The account number of the signing account (offline mode only)\n--amount string           Amount of coins to withdraw\n--dry-run                 ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n--fee-account string      Fee account pays fees for the transaction instead of deducting from the signer\n--gas string              gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n--generate-only           Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n-h, --help                    help for legacy-withdraw\n--keyring-dir string      The client Keyring directory; if omitted, the default 'home' directory will be used\n--ledger                  Use a connected Ledger device\n--note string             Note to add a description to the transaction (previously --memo)\n--offline                 Offline mode (does not allow any online functionality\n-o, --output string           Output format (text|json) (default \"json\")\n-s, --sequence uint           The sequence number of the signing account (offline mode only)\n--sign-mode string        Choose sign mode (direct|amino-json), this is an advanced feature\n--target-address string   The target wallet address to deposit into after withdrawing\n--timeout-height uint     Set a block timeout height to prevent the tx from being committed past a certain height\n-y, --yes                     Skip tx broadcasting prompt confirmation\nIn testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx pot legacy-withdraw \\\n--amount=&lt;amount to withdraw&gt; \\\n--target-address=&lt;wallet address of reciever&gt; \\\n--from=&lt;from_address, Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx pot legacy-withdraw \\\n--amount=100utros \\\n--target-address=st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--chain-id=tropos-5 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-report","title":"-<code>report</code>","text":"<p>Query volume report by epoch</p> <pre><code>Usage:\nstchaind query pot report [flags]\nFlags:\n--epoch string    the epoch when this PoT message reported.\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for report\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query pot report --epoch=1\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-pot-params","title":"-<code>pot-params</code>","text":"<p>Query values set as pot parameters</p> <pre><code>Usage:\nstchaind query pot params [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for params\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query pot params bond_denom: wei\ncommunity_tax: \"0.020000000000000000\"\nmature_epoch: \"2016\"\nmining_reward_params:\n- block_chain_percentage_in_ten_thousand: \"2000\"\nmeta_node_percentage_in_ten_thousand: \"2000\"\nmining_reward:\namount: \"80000000000\"\ndenom: utros\nresource_node_percentage_in_ten_thousand: \"6000\"\ntotal_mined_valve_end:\namount: \"16819200000000000\"\ndenom: utros\ntotal_mined_valve_start:\namount: \"0\"\ndenom: utros\n- block_chain_percentage_in_ten_thousand: \"2000\"\nmeta_node_percentage_in_ten_thousand: \"1800\"\nmining_reward:\namount: \"40000000000\"\ndenom: utros\nresource_node_percentage_in_ten_thousand: \"6200\"\ntotal_mined_valve_end:\namount: \"25228800000000000\"\ndenom: utros\ntotal_mined_valve_start:\namount: \"16819200000000000\"\ndenom: utros\n- block_chain_percentage_in_ten_thousand: \"2000\"\nmeta_node_percentage_in_ten_thousand: \"1600\"\nmining_reward:\namount: \"20000000000\"\ndenom: utros\nresource_node_percentage_in_ten_thousand: \"6400\"\ntotal_mined_valve_end:\namount: \"29433600000000000\"\ndenom: utros\ntotal_mined_valve_start:\namount: \"25228800000000000\"\ndenom: utros\n- block_chain_percentage_in_ten_thousand: \"2000\"\nmeta_node_percentage_in_ten_thousand: \"1400\"\nmining_reward:\namount: \"10000000000\"\ndenom: utros\nresource_node_percentage_in_ten_thousand: \"6600\"\ntotal_mined_valve_end:\namount: \"31536000000000000\"\ndenom: utros\ntotal_mined_valve_start:\namount: \"29433600000000000\"\ndenom: utros\n- block_chain_percentage_in_ten_thousand: \"2000\"\nmeta_node_percentage_in_ten_thousand: \"1200\"\nmining_reward:\namount: \"5000000000\"\ndenom: utros\nresource_node_percentage_in_ten_thousand: \"6800\"\ntotal_mined_valve_end:\namount: \"32587200000000000\"\ndenom: utros\ntotal_mined_valve_start:\namount: \"31536000000000000\"\ndenom: utros\n- block_chain_percentage_in_ten_thousand: \"2000\"\nmeta_node_percentage_in_ten_thousand: \"1000\"\nmining_reward:\namount: \"2500000000\"\ndenom: utros\nresource_node_percentage_in_ten_thousand: \"7000\"\ntotal_mined_valve_end:\namount: \"40000000000000000\"\ndenom: utros\ntotal_mined_valve_start:\namount: \"32587200000000000\"\ndenom: utros\nreward_denom: utros\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#tendermint","title":"<code>Tendermint</code>","text":"<p>Tendermint subcommands</p> <pre><code>Usage:\nstchaind tendermint [command]\nAvailable Commands:\nreset-state      Remove all the data and WAL\nshow-address     Shows this node's tendermint validator consensus address\nshow-node-id     Show this node's ID\nshow-validator   Show this node's tendermint validator info\nunsafe-reset-all (unsafe) Remove all the data and WAL, reset this node's validator to genesis state\nversion          Print tendermint libraries' version\nFlags:\n-h, --help   help for tendermint\nGlobal Flags:\n-b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n--chain-id string          Specify Chain ID for sending Tx (default \"testnet\")\n--fees string              Fees to pay along with transaction; eg: 10wei\n--from string              Name or address of private key with which to sign\n--gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n--gas-prices string        Gas prices to determine the transaction fee (e.g. 10wei)\n--home string              directory for config and data (default \"/home/hong/.stchaind\")\n--keyring-backend string   Select keyring's backend (default \"os\")\n--log_format string        The logging format (json|plain) (default \"plain\")\n--log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n--node string              &lt;host&gt;:&lt;port&gt; to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n--trace                    print out full stack trace on errors\n</code></pre>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-show-address","title":"-<code>show-address</code>","text":"<p>Shows this node's tendermint validator consensus address</p> <pre><code>Usage:\nstchaind tendermint show-address [flags]\nFlags:\n-h, --help   help for show-address\n</code></pre> <p>Example:</p> <pre><code>stchaind tendermint show-address\nstvalcons1rzn3d8qmgf7ejsfn77eag5zwjfufmvmu7sn802\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-show-node-id","title":"-<code>show-node-id</code>","text":"<p>Show this node's ID</p> <pre><code>Usage:\nstchaind tendermint show-node-id [flags]\nFlags:\n-h, --help   help for show-node-id\n</code></pre> <p>Example:</p> <pre><code>stchaind tendermint show-node-id\nd3875ac126c90fa293f0591ad99cd587b6b5c6cc\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-show-validator","title":"-<code>show-validator</code>","text":"<p>Show this node's tendermint validator info</p> <pre><code>Usage:\nstchaind tendermint show-validator [flags]\nFlags:\n-h, --help   help for show-validator\n</code></pre> <p>Example:</p> <p><pre><code>stchaind tendermint show-validator\n{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"}\n</code></pre> </p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-version","title":"-<code>version</code>","text":"<p>Print protocols' and libraries' version numbers against which this app has been compiled</p> <pre><code>Usage:\nstchaind tendermint version [flags]\nFlags:\n-h, --help   help for version\n</code></pre> <p>Example:</p> <pre><code>stchaind tendermint version\ntendermint: 0.34.21\nabci: 0.17.0\nblockprotocol: 11\np2pprotocol: 8\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#others","title":"<code>Others</code>","text":""},{"location":"docs-validator-node/stchaind-commands-part-2/#-init-nodes","title":"-<code>init nodes</code>","text":"<p>Initialize validator's and node's configuration files.</p> <pre><code>Usage:\nstchaind init [moniker] [flags]\nFlags:\n-h, --help        help for init\n-o, --overwrite   overwrite the genesis.json file\n--recover     provide seed phrase to recover existing key instead of creating\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-start-st-chain","title":"-<code>start st-chain</code>","text":"<p>Run the full node application with Tendermint in or out of process. By default, the application will run with Tendermint in process.</p> <p>Pruning options can be provided via the '--pruning' flag or alternatively with '--pruning-keep-recent', 'pruning-keep-every', and 'pruning-interval' together.</p> <p>For '--pruning' the options are as follows:</p> <p>default: the last 100 states are kept in addition to every 500th state; pruning at 10 block intervals nothing: all historic states will be saved, nothing will be deleted (i.e. archiving node) everything: all saved states will be deleted, storing only the current state; pruning at 10 block intervals custom: allow pruning options to be manually specified through 'pruning-keep-recent', 'pruning-keep-every', and 'pruning-interval'</p> <p>Node halting configurations exist in the form of two flags: '--halt-height' and '--halt-time'. During the ABCI Commit phase, the node will check if the current block height is greater than or equal to the halt-height or if the current block time is greater than or equal to the halt-time. If so, the node will attempt to gracefully shutdown and the block will not be committed. In addition, the node will not be able to commit subsequent blocks.</p> <p>For profiling and benchmarking purposes, CPU profiling can be enabled via the '--cpu-profile' flag which accepts a path for the resulting pprof file.</p> <pre><code>Usage:\nstchaind start [flags]\nFlags:\n--abci string                                     specify abci transport (socket | grpc) (default \"socket\")\n--address string                                  Listen address (default \"tcp://0.0.0.0:26658\")\n--api.enable                                      Defines if Cosmos-sdk REST server should be enabled\n--api.enabled-unsafe-cors                         Defines if CORS should be enabled (unsafe - use it at your own risk)\n--consensus.create_empty_blocks                   set this to false to only produce blocks when there are txs or when the AppHash changes (default true)\n--consensus.create_empty_blocks_interval string   the possible interval between empty blocks (default \"0s\")\n--consensus.double_sign_check_height int          how many blocks to look back to check existence of the node's consensus votes before joining consensus\n--cpu-profile string                              Enable CPU profiling and write to the provided file\n--db_backend string                               database backend: goleveldb | cleveldb | boltdb | rocksdb | badgerdb (default \"goleveldb\")\n--db_dir string                                   database directory (default \"data\")\n--evm.max-tx-gas-wanted uint                      the gas wanted for each eth tx returned in ante handler in check tx mode (default 500000)\n--evm.tracer string                               the EVM tracer type to collect execution traces from the EVM transaction execution (json|struct|access_list|markdown)\n--fast_sync                                       fast blockchain syncing (default true)\n--genesis_hash bytesHex                           optional SHA-256 hash of the genesis file\n--grpc-web.address string                         The gRPC-Web server address to listen on (default \"0.0.0.0:9091\")\n--grpc-web.enable                                 Define if the gRPC-Web server should be enabled. (Note gRPC must also be enabled.) (default true)\n--grpc.address string                             the gRPC server address to listen on (default \"0.0.0.0:9090\")\n--grpc.enable                                     Define if the gRPC server should be enabled (default true)\n--halt-height uint                                Block height at which to gracefully halt the chain and shutdown the node\n--halt-time uint                                  Minimum block time (in Unix seconds) at which to gracefully halt the chain and shutdown the node\n-h, --help                                            help for start\n--inter-block-cache                               Enable inter-block caching (default true)\n--inv-check-period uint                           Assert registered invariants every N blocks\n--json-rpc.address string                         the JSON-RPC server address to listen on (default \"0.0.0.0:8545\")\n--json-rpc.api strings                            Defines a list of JSON-RPC namespaces that should be enabled (default [eth,net,web3])\n--json-rpc.block-range-cap eth_getLogs            Sets the max block range allowed for eth_getLogs query (default 10000)\n--json-rpc.enable                                 Define if the gRPC server should be enabled (default true)\n--json-rpc.evm-timeout duration                   Sets a timeout used for eth_call (0=infinite) (default 5s)\n--json-rpc.filter-cap int32                       Sets the global cap for total number of filters that can be created (default 200)\n--json-rpc.gas-cap uint                           Sets a cap on gas that can be used in eth_call/estimateGas unit is gwei (0=infinite) (default 25000000)\n--json-rpc.http-idle-timeout duration             Sets a idle timeout for json-rpc http server (0=infinite) (default 2m0s)\n--json-rpc.http-timeout duration                  Sets a read/write timeout for json-rpc http server (0=infinite) (default 30s)\n--json-rpc.logs-cap eth_getLogs                   Sets the max number of results can be returned from single eth_getLogs query (default 10000)\n--json-rpc.txfee-cap float                        Sets a cap on transaction fee that can be sent via the RPC APIs (1 = default 1 gwei) (default 1)\n--json-rpc.ws-address string                      the JSON-RPC WS server address to listen on (default \"0.0.0.0:8546\")\n--min-retain-blocks uint                          Minimum block height offset during ABCI commit to prune Tendermint blocks\n--minimum-gas-prices string                       Minimum gas prices to accept for transactions; Any fee in a tx must meet this minimum (e.g. 0.01stos)\n--moniker string                                  node name (default \"ubuntu\")\n--p2p.laddr string                                node listen address. (0.0.0.0:0 means any interface, any port) (default \"tcp://0.0.0.0:26656\")\n--p2p.persistent_peers string                     comma-delimited ID@host:port persistent peers\n--p2p.pex                                         enable/disable Peer-Exchange (default true)\n--p2p.private_peer_ids string                     comma-delimited private peer IDs\n--p2p.seed_mode                                   enable/disable seed mode\n--p2p.seeds string                                comma-delimited ID@host:port seed nodes\n--p2p.unconditional_peer_ids string               comma-delimited IDs of unconditional peers\n--p2p.upnp                                        enable/disable UPNP port forwarding\n--priv_validator_laddr string                     socket address to listen on for connections from external priv_validator process\n--proxy_app string                                proxy app address, or one of: 'kvstore', 'persistent_kvstore', 'counter', 'e2e' or 'noop' for local testing. (default \"tcp://127.0.0.1:26658\")\n--pruning string                                  Pruning strategy (default|nothing|everything|custom) (default \"default\")\n--pruning-interval uint                           Height interval at which pruned heights are removed from disk (ignored if pruning is not 'custom')\n--pruning-keep-every uint                         Offset heights to keep on disk after 'keep-every' (ignored if pruning is not 'custom')\n--pruning-keep-recent uint                        Number of recent heights to keep on disk (ignored if pruning is not 'custom')\n--rpc.grpc_laddr string                           GRPC listen address (BroadcastTx only). Port required\n--rpc.laddr string                                RPC listen address. Port required (default \"tcp://127.0.0.1:26657\")\n--rpc.pprof_laddr string                          pprof listen address (https://golang.org/pkg/net/http/pprof)\n--rpc.unsafe                                      enabled unsafe rpc methods\n--state-sync.snapshot-interval uint               State sync snapshot interval\n--state-sync.snapshot-keep-recent uint32          State sync snapshot to keep (default 2)\n--tls.certificate-path string                     the cert.pem file path for the server TLS configuration\n--tls.key-path string                             the key.pem file path for the server TLS configuration\n--trace-store string                              Enable KVStore tracing to an output file\n--transport string                                Transport protocol: socket, grpc (default \"socket\")\n--unsafe-skip-upgrades ints                       Skip a set of upgrade heights to continue the old binary\n--with-tendermint                                 Run abci app embedded in-process with tendermint (default true)\n--x-crisis-skip-assert-invariants                 Skip x/crisis invariants check on startup\n</code></pre> <p>Example:</p> <pre><code>stchaind start\n</code></pre> <p>Result:</p> <pre><code>stchaind start\n11:40AM INF Unlocking keyring\n11:40AM INF starting ABCI with Tendermint\n11:40AM INF Starting multiAppConn service impl=multiAppConn module=proxy server=node\n11:40AM INF Starting localClient service connection=query impl=localClient module=abci-client server=node\n11:40AM INF Starting localClient service connection=snapshot impl=localClient module=abci-client server=node\n11:40AM INF Starting localClient service connection=mempool impl=localClient module=abci-client server=node\n11:40AM INF Starting localClient service connection=consensus impl=localClient module=abci-client server=node\n11:40AM INF Starting EventBus service impl=EventBus module=events server=node\n11:40AM INF Starting PubSub service impl=PubSub module=pubsub server=node\n11:40AM INF Starting IndexerService service impl=IndexerService module=txindex server=node\n11:40AM INF ABCI Handshake App Info hash=\"r\ufffdp=W\\\"\ufffd\ufffd\\x05v\\x17K\ufffd\\a \ufffdA?\ufffd/\ufffd\ufffd\ufffd\ufffd\ufffdk\u012d\\x17W\\x14}\" height=2551 module=consensus protocol-version=0 server=node software-version=v0.8.0\n11:40AM INF ABCI Replay Blocks appHeight=2551 module=consensus server=node stateHeight=2551 storeHeight=2551\n11:40AM INF Completed ABCI Handshake - Tendermint and App are synced appHash=\"r\ufffdp=W\\\"\ufffd\ufffd\\x05v\\x17K\ufffd\\a \ufffdA?\ufffd/\ufffd\ufffd\ufffd\ufffd\ufffdk\u012d\\x17W\\x14}\" appHeight=2551 module=consensus server=node\n11:40AM INF Version info block=11 p2p=8 server=node tendermint_version=0.34.19\n11:40AM INF This node is a validator addr=EA5F7899F5CC81675EA98BF329BB93CAE294B01C module=consensus pubKey=eYVLsz4XOB5HiadCpXxeUP48FTYrmFUGIe+hYv92E7I= server=node\n11:40AM INF P2P Node ID ID=f8e9d6c5874feb1e9441380eb8e189ba88238d80 file=node/stchaind/config/node_key.json module=p2p server=node\n11:40AM INF Adding persistent peers addrs=[] module=p2p server=node\n11:40AM INF Adding unconditional peer ids ids=[] module=p2p server=node\n11:40AM INF Add our address to book addr={\"id\":\"f8e9d6c5874feb1e9441380eb8e189ba88238d80\",\"ip\":\"0.0.0.0\",\"port\":26656} book=node/stchaind/config/addrbook.json module=p2p server=node\n11:40AM INF Starting Node service impl=Node server=node\n11:40AM INF Starting pprof server laddr=localhost:6060 server=node\n11:40AM INF Starting RPC HTTP server on 127.0.0.1:26657 module=rpc-server server=node\n11:40AM INF Starting P2P Switch service impl=\"P2P Switch\" module=p2p server=node\n11:40AM INF Starting Consensus service impl=ConsensusReactor module=consensus server=node\n11:40AM INF Reactor  module=consensus server=node waitSync=false\n11:40AM INF Starting State service impl=ConsensusState module=consensus server=node\n11:40AM INF Starting baseWAL service impl=baseWAL module=consensus server=node wal=node/stchaind/data/cs.wal/wal\n11:40AM INF Starting Group service impl=Group module=consensus server=node wal=node/stchaind/data/cs.wal/wal\n11:40AM INF Starting TimeoutTicker service impl=TimeoutTicker module=consensus server=node\n11:40AM INF Searching for height height=2552 max=0 min=0 module=consensus server=node wal=node/stchaind/data/cs.wal/wal\n11:40AM INF Searching for height height=2551 max=0 min=0 module=consensus server=node wal=node/stchaind/data/cs.wal/wal\n11:40AM INF Found height=2551 index=0 module=consensus server=node wal=node/stchaind/data/cs.wal/wal\n11:40AM INF Catchup by replaying consensus messages height=2552 module=consensus server=node\n11:40AM INF Replay: New Step height=2552 module=consensus round=0 server=node step=RoundStepNewHeight\n11:40AM INF Replay: Done module=consensus server=node\n11:40AM INF Starting Evidence service impl=Evidence module=evidence server=node\n11:40AM INF Starting StateSync service impl=StateSync module=statesync server=node\n11:40AM INF Starting PEX service impl=PEX module=pex server=node\n11:40AM INF Starting AddrBook service book=node/stchaind/config/addrbook.json impl=AddrBook module=p2p server=node\n11:40AM INF Starting Mempool service impl=Mempool module=mempool server=node\n11:40AM INF Starting BlockchainReactor service impl=BlockchainReactor module=blockchain server=node\n11:40AM INF Saving AddrBook to file book=node/stchaind/config/addrbook.json module=p2p server=node size=0\n11:40AM INF Ensure peers module=pex numDialing=0 numInPeers=0 numOutPeers=0 numToDial=10 server=node\n11:40AM INF No addresses to dial. Falling back to seeds module=pex server=node\n11:40AM INF starting API server... server=api\n11:40AM INF Starting RPC HTTP server on [::]:1317 server=api\n...\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-config","title":"-<code>config</code>","text":"<p>Create or query an application CLI configuration file.</p> <pre><code>Usage:\nstchaind config &lt;key&gt; &lt;value&gt; [flags]\nFlags:\n--get    print configuration value or its default if unset\n-h, --help   help for config\n</code></pre> <p>Create Configuration Example:</p> <pre><code>stchaind config keyring-backend local-test\nconfiguration saved to $HOME/.stchaind/config/client.toml\n</code></pre> <p>Query Configuration Example:</p> <pre><code>stchaind config keyring-backend\ntest\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-keys","title":"-<code>keys</code>","text":"<p>Keyring management commands. These keys may be in any format supported by the Tendermint crypto library and can be used by light-clients, full nodes, or any other application that needs to sign with a private key.</p> <pre><code>The keyring supports the following backends:\nos          Uses the operating system's default credentials store.\nfile        Uses encrypted file-based keystore within the app's configuration directory.\nThis keyring will request a password each time it is accessed, which may occur\nmultiple times in a single command resulting in repeated password prompts.\nkwallet     Uses KDE Wallet Manager as a credentials management application.\npass        Uses the pass command line utility to store and retrieve keys.\ntest        Stores keys insecurely to disk. It does not prompt for a password to be unlocked\nand it should be use only for testing purposes.\nkwallet and pass backends depend on external tools. Refer to their respective documentation for more\ninformation:\nKWallet     https://github.com/KDE/kwallet\npass        https://www.passwordstore.org/\nThe pass backend requires GnuPG: https://gnupg.org/\nUsage:\nstchaind keys [command]\nAvailable Commands:\nadd                   Add an encrypted private key (either newly generated or recovered), encrypt it, and save to &lt;name&gt; file\ndelete                Delete the given keys\nexport                Export private keys\nimport                Import private keys into the local keybase\nlist                  List all keys\nmigrate               Migrate keys from the legacy (db-based) Keybase\nmnemonic              Compute the bip39 mnemonic for some input entropy\nparse                 Parse address from hex to bech32 and vice versa\nshow                  Retrieve key information by name or address\nunsafe-export-eth-key **UNSAFE** Export an Ethereum private key\nunsafe-import-eth-key **UNSAFE** Import Ethereum private keys into the local keybase\nFlags:\n-h, --help                 help for keys\n--keyring-dir string   The client Keyring directory; if omitted, the default 'home' directory will be used\n--output string        Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind keys list --keyring-backend=test\n</code></pre> <p>Result:</p> <pre><code>- name: user0\ntype: local\naddress: st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"A/wF15Wd3ogCXstE7S4Zf3DA4KXb0W7exQhP004PLTi3\"}'\nmnemonic: \"\"\n- name: user1\ntype: local\naddress: st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AgnhB5EkHL8+jD0/zRDR11nIpfOirTRrjgCX6uibhmDW\"}'\nmnemonic: \"\"\n- name: user10\ntype: local\naddress: st1lkcrz3ktt2p7ppu9arglpqcn94pcdd9a9pmatf\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"A2sZ2Z9BU9oDELC06Gj8Lfc5UycxTaPux3sEIq8sIzSW\"}'\nmnemonic: \"\"\n- name: user2\ntype: local\naddress: st16czjk2ym0prgvy4gl970t84vrp96s5kayfqmf2\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AwfcJTOVWdx6ai61cy8VGJ1SdWHzwm2CCmr/+PwSpFeR\"}'\nmnemonic: \"\"\n- name: user3\ntype: local\naddress: st17patveqxcq42rguc7nayr2g3jtawpzvhfmmumt\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AtFxbuB4s+2SYzImGPIBwe0H0mKCXbIPu1T63OvbgE/3\"}'\nmnemonic: \"\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-status","title":"-<code>status</code>","text":"<p>Query remote node for status.</p> <pre><code>Usage:\nstchaind status [flags]\nFlags:\n-h, --help   help for status\n</code></pre> <p>Example:</p> <pre><code>stchaind status\n</code></pre> <p>Result:</p> <pre><code>{\n\"NodeInfo\": {\n\"protocol_version\": {\n\"p2p\": \"8\",\n\"block\": \"11\",\n\"app\": \"0\"\n},\n\"id\": \"16a0758d175cbf5c08d41dffa73eb5c0190869ed\",\n\"listen_addr\": \"tcp://0.0.0.0:26656\",\n\"network\": \"test-chain\",\n\"version\": \"0.34.21\",\n\"channels\": \"40202122233038606100\",\n\"moniker\": \"node\",\n\"other\": {\n\"tx_index\": \"on\",\n\"rpc_address\": \"tcp://127.0.0.1:26657\"\n}\n},\n\"SyncInfo\": {\n\"latest_block_hash\": \"697A2DB243E5191C6D85285A2ADD4924526924969C6C70FE71827C9FE41D4373\",\n\"latest_app_hash\": \"E978F87BB23D351B853F5F0CF9FBBBA4464FF5D7CE3746BF3E2357F28CBCE041\",\n\"latest_block_height\": \"497\",\n\"latest_block_time\": \"2023-01-11T01:10:37.562405326Z\",\n\"earliest_block_hash\": \"139676534FECFA507D56A06B03BD528E70ACA6D4DB6560219707011966613DE4\",\n\"earliest_app_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n\"earliest_block_height\": \"1\",\n\"earliest_block_time\": \"2023-01-09T17:08:58.4890503Z\",\n\"catching_up\": false\n},\n\"ValidatorInfo\": {\n\"Address\": \"18A7169C1B427D994133F7B3D4504E92789DB37C\",\n\"PubKey\": {\n\"type\": \"tendermint/PubKeyEd25519\",\n\"value\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n},\n\"VotingPower\": \"500000\"\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-version_1","title":"-<code>version</code>","text":"<p>Print the application binary version information</p> <pre><code>Usage:\nstchaind version [flags]\nFlags:\n-h, --help            help for version\n--long            Print long version information\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind version v0.9.0\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-account","title":"-<code>account</code>","text":"<p>Query for account by address.</p> <pre><code>Usage:\nstchaind query account [address] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for account\n-o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query account st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\n</code></pre> <p>Result:</p> <pre><code>'@type': /stratos.types.v1.EthAccount\nbase_account:\naccount_number: \"0\"\naddress: st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\npub_key:\n'@type': /stratos.crypto.v1.ethsecp256k1.PubKey\nkey: A/wF15Wd3ogCXstE7S4Zf3DA4KXb0W7exQhP004PLTi3\nsequence: \"4\"\ncode_hash: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-tendermint-validator-set","title":"-<code>tendermint-validator-set</code>","text":"<p>Get the full tendermint validator set at given height</p> <pre><code>Usage:\nstchaind query tendermint-validator-set [height] [flags]\nFlags:\n-h, --help        help for tendermint-validator-set\n--limit int   Query number of results returned per page (default 100)\n--page int    Query a specific page of paginated results (default 1)\n</code></pre> <p>Example:</p> <pre><code>stchaind query tendermint-validator-set 1\n</code></pre> <p>Result:</p> <pre><code>block_height: \"1\"\ntotal: \"1\"\nvalidators:\n- address: stvalcons1rzn3d8qmgf7ejsfn77eag5zwjfufmvmu7sn802\nproposer_priority: \"0\"\npub_key:\ntype: tendermint/PubKeyEd25519\nvalue: 69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\nvoting_power: \"500000\"\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-block","title":"-<code>block</code>","text":"<p>Get verified data for a block at given height.</p> <pre><code>Usage:\nstchaind query block [height] [flags]\nFlags:\n-h, --help   help for block\n</code></pre> <p>Example:</p> <pre><code>stchaind query block 150\n</code></pre> <p>Result:</p> <p><pre><code>{\n\"block_id\": {\n\"hash\": \"74E410DF477CB2B54265160FE75B48E096BCF60A29F47B825EB017FAE1BB0263\",\n\"parts\": {\n\"total\": 1,\n\"hash\": \"9870B5AAC0D6207850D7AC4D3072D5AC17C6AF120D50EB667E054D5613B12C6D\"\n}\n},\n\"block\": {\n\"header\": {\n\"version\": {\n\"block\": \"11\"\n},\n\"chain_id\": \"test-chain\",\n\"height\": \"150\",\n\"time\": \"2023-01-10T22:19:55.918496162Z\",\n\"last_block_id\": {\n\"hash\": \"56676AC4975414BD2BF86C29CBCC9124A97AF84E1654AC41862B520595E0E6A7\",\n\"parts\": {\n\"total\": 1,\n\"hash\": \"B919897435939A560885651505D570FE93A77EA695F0E6A24F294E507F9F1BC9\"\n}\n},\n\"last_commit_hash\": \"3435730FE67F2F8D2092DC384C42FBD4026DF749EE49DEEBBD4042F67B96911B\",\n\"data_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n\"validators_hash\": \"5234BD91A3A751E055C35876578DE4A466311A80D540B59885AF68EF6D4D56DE\",\n\"next_validators_hash\": \"5234BD91A3A751E055C35876578DE4A466311A80D540B59885AF68EF6D4D56DE\",\n\"consensus_hash\": \"048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F\",\n\"app_hash\": \"724DAFFA7A2B129A8E956D531DF4F24616E76D03976ED899F4DFBBE1FBF53B39\",\n\"last_results_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n\"evidence_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n\"proposer_address\": \"18A7169C1B427D994133F7B3D4504E92789DB37C\"\n},\n\"data\": {\n\"txs\": null\n},\n\"evidence\": {\n\"evidence\": null\n},\n\"last_commit\": {\n\"height\": \"149\",\n\"round\": 0,\n\"block_id\": {\n\"hash\": \"56676AC4975414BD2BF86C29CBCC9124A97AF84E1654AC41862B520595E0E6A7\",\n\"parts\": {\n\"total\": 1,\n\"hash\": \"B919897435939A560885651505D570FE93A77EA695F0E6A24F294E507F9F1BC9\"\n}\n},\n\"signatures\": [\n{\n\"block_id_flag\": 2,\n\"validator_address\": \"18A7169C1B427D994133F7B3D4504E92789DB37C\",\n\"timestamp\": \"2023-01-10T22:19:55.918496162Z\",\n\"signature\": \"otYHnEyBJBM09TrcpX9CqwYGmgiJMErteqA5jUPFeplqGmIvZY7gHIzFfZh8RQKkN1umR1C0IyQypRvDQ2zJAw==\"\n}\n]\n}\n}\n}\n</code></pre> </p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-txs","title":"-<code>txs</code>","text":"<p>Search for transactions that match the exact given events where results are paginated. Each event takes the form of '{eventType}.{eventAttribute}={value}'. Please refer to each module's documentation for the full set of events to query for. Each module documents its respective events under 'xx_events.md'.</p> <pre><code>Usage:\nstchaind query txs [flags]\nFlags:\n--events string   list of transaction events in the form of {eventType}.{eventAttribute}={value}\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for txs\n--limit int       Query number of transactions results per page returned (default 30)\n-o, --output string   Output format (text|json) (default \"text\")\n--page int        Query a specific page of paginated results (default 1)\nExample:\nstchaind query txs --events 'message.sender=cosmos1...&amp;message.action=withdraw_delegator_reward' --page 1 --limit 30\n</code></pre> <p>Example:</p> <pre><code>stchaind query txs \\\n--events 'message.sender=st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k' \\\n--chain-id=tropos-5 \\\n--limit=20\n</code></pre> <p>Result:</p> <pre><code>  {\n\"total_count\": \"2\",\n\"count\": \"2\",\n\"page_number\": \"1\",\n\"page_total\": \"1\",\n\"limit\": \"20\",\n\"txs\": [\n{\n\"height\": \"3681\",\n\"txhash\": \"EA0AB730219917533E73B1509EC38AE26614B2A8C4C4EA4E90026262127E8672\",\n\"raw_log\": \"[{\\\"msg_index\\\":0,\\\"log\\\":\\\"\\\",\\\"events\\\":[{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"vote\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"governance\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\\\"}]},{\\\"type\\\":\\\"proposal_vote\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"option\\\",\\\"value\\\":\\\"Yes\\\"},{\\\"key\\\":\\\"proposal_id\\\",\\\"value\\\":\\\"7\\\"}]}]}]\",\n\"logs\": [\n{\n\"msg_index\": 0,\n\"log\": \"\",\n\"events\": [\n{\n\"type\": \"message\",\n\"attributes\": [\n{\n\"key\": \"action\",\n\"value\": \"vote\"\n},\n{\n\"key\": \"module\",\n\"value\": \"governance\"\n},\n{\n\"key\": \"sender\",\n\"value\": \"st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\"\n}\n]\n},\n{\n\"type\": \"proposal_vote\",\n\"attributes\": [\n{\n\"key\": \"option\",\n\"value\": \"Yes\"\n},\n{\n\"key\": \"proposal_id\",\n\"value\": \"7\"\n}\n]\n}\n]\n}\n],\n\"gas_wanted\": \"200000\",\n\"gas_used\": \"38472\",\n\"tx\": {\n\"type\": \"cosmos-sdk/StdTx\",\n\"value\": {\n\"msg\": [\n{\n\"type\": \"cosmos-sdk/MsgVote\",\n\"value\": {\n\"proposal_id\": \"7\",\n\"voter\": \"st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\",\n\"option\": \"Yes\"\n}\n}\n],\n\"fee\": {\n\"amount\": [],\n\"gas\": \"200000\"\n},\n\"signatures\": [\n{\n\"pub_key\": {\n\"type\": \"tendermint/PubKeySecp256k1\",\n\"value\": \"A8h5ZfH926q3EMdHeOdT2Z5W1KDjOc3LT33quKK8uCdZ\"\n},\n\"signature\": \"yE56xpZ4OI3+HxQr5bklYHuAOspKlwVC7hiSKnja63khIlU+TTnEhgoRvNgYub58HVbOBtslHU7QncNKSWEEbg==\"\n}\n],\n\"memo\": \"\"\n}\n},\n\"timestamp\": \"2021-07-23T14:41:18Z\"\n},\n{\n\"height\": \"4400\",\n\"txhash\": \"D21722FE6C3DE53268EEAF1A9C433DACF635B2715F6B5DCFBD5EED7B28705BE8\",\n\"raw_log\": \"[{\\\"msg_index\\\":0,\\\"log\\\":\\\"\\\",\\\"events\\\":[{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"vote\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"governance\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\\\"}]},{\\\"type\\\":\\\"proposal_vote\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"option\\\",\\\"value\\\":\\\"Yes\\\"},{\\\"key\\\":\\\"proposal_id\\\",\\\"value\\\":\\\"9\\\"}]}]}]\",\n\"logs\": [\n{\n\"msg_index\": 0,\n\"log\": \"\",\n\"events\": [\n{\n\"type\": \"message\",\n\"attributes\": [\n{\n\"key\": \"action\",\n\"value\": \"vote\"\n},\n{\n\"key\": \"module\",\n\"value\": \"governance\"\n},\n{\n\"key\": \"sender\",\n\"value\": \"st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\"\n}\n]\n},\n{\n\"type\": \"proposal_vote\",\n\"attributes\": [\n{\n\"key\": \"option\",\n\"value\": \"Yes\"\n},\n{\n\"key\": \"proposal_id\",\n\"value\": \"9\"\n}\n]\n}\n]\n}\n],\n\"gas_wanted\": \"200000\",\n\"gas_used\": \"38508\",\n\"tx\": {\n\"type\": \"cosmos-sdk/StdTx\",\n\"value\": {\n\"msg\": [\n{\n\"type\": \"cosmos-sdk/MsgVote\",\n\"value\": {\n\"proposal_id\": \"9\",\n\"voter\": \"st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\",\n\"option\": \"Yes\"\n}\n}\n],\n\"fee\": {\n\"amount\": [],\n\"gas\": \"200000\"\n},\n\"signatures\": [\n{\n\"pub_key\": {\n\"type\": \"tendermint/PubKeySecp256k1\",\n\"value\": \"A8h5ZfH926q3EMdHeOdT2Z5W1KDjOc3LT33quKK8uCdZ\"\n},\n\"signature\": \"+w/Qhm6JdyQLXsquiKe0WCqCNjqois2Zhc76h0AphDhQZTKlpD9qlVuA/BX7gmVrmiUdqG/G4YExu8XkQSvnSg==\"\n}\n],\n\"memo\": \"\"\n}\n},\n\"timestamp\": \"2021-07-25T00:36:47Z\"\n}\n]\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-tx","title":"-<code>tx</code>","text":"<p>Query for a transaction by hash in a committed block.</p> <pre><code>Example:\nstchaind query tx &lt;hash&gt;\nstchaind query tx --type=acc_seq &lt;addr&gt;/&lt;sequence&gt;\nstchaind query tx --type=signature &lt;sig1_base64&gt;,&lt;sig2_base64...&gt;\nUsage:\nstchaind query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\nFlags:\n--height int      Use a specific height to query state at (this can error if the node is pruning state)\n-h, --help            help for tx\n-o, --output string   Output format (text|json) (default \"text\")\n--type string     The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query tx AB0EF3761603145EDC1B4121C91B51001249186E1362E7148C82E7DB12F7BDF0\n</code></pre> <p>Result:</p> <pre><code>code: 0\ncodespace: \"\"\ndata: 0A1E0A1C2F636F736D6F732E62616E6B2E763162657461312E4D736753656E64\nevents:\n- attributes:\n- index: true\nkey: c3BlbmRlcg==\nvalue: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\n- index: true\nkey: YW1vdW50\nvalue: MjAwMDAwMDAwMDAwMDAwd2Vp\ntype: coin_spent\n- attributes:\n- index: true\nkey: cmVjZWl2ZXI=\nvalue: c3QxN3hwZnZha20yYW1nOTYyeWxzNmY4NHoza2VsbDhjNWx2NWhqMnE=\n- index: true\nkey: YW1vdW50\nvalue: MjAwMDAwMDAwMDAwMDAwd2Vp\ntype: coin_received\n- attributes:\n- index: true\nkey: cmVjaXBpZW50\nvalue: c3QxN3hwZnZha20yYW1nOTYyeWxzNmY4NHoza2VsbDhjNWx2NWhqMnE=\n- index: true\nkey: c2VuZGVy\nvalue: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\n- index: true\nkey: YW1vdW50\nvalue: MjAwMDAwMDAwMDAwMDAwd2Vp\ntype: transfer\n- attributes:\n- index: true\nkey: c2VuZGVy\nvalue: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\ntype: message\n- attributes:\n- index: true\nkey: ZmVl\nvalue: MjAwMDAwMDAwMDAwMDAwd2Vp\n- index: true\nkey: ZmVlX3BheWVy\nvalue: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\ntype: tx\n- attributes:\n- index: true\nkey: YWNjX3NlcQ==\nvalue: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamgvMw==\ntype: tx\n- attributes:\n- index: true\nkey: c2lnbmF0dXJl\nvalue: N0ZtZ0Irc1RuUDVLazRxMTIxWXlWZEpKa2RFcTNHaW95ZHU4ZlRQK3B4b01DL1RsNzd1SmxDUkJhblNQN2p4MXhFandUeHQzem5HTDlLTlFMUkFBMlFBPQ==\ntype: tx\n- attributes:\n- index: true\nkey: YWN0aW9u\nvalue: L2Nvc21vcy5iYW5rLnYxYmV0YTEuTXNnU2VuZA==\ntype: message\n- attributes:\n- index: true\nkey: c3BlbmRlcg==\nvalue: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\n- index: true\nkey: YW1vdW50\nvalue: MTAwMDAwMDAwMHdlaQ==\ntype: coin_spent\n- attributes:\n- index: true\nkey: cmVjZWl2ZXI=\nvalue: c3Qxc3F6c2s4bXBsdjUyNDhneDZkZGR6enh3ZXF2ZXc4cnRzdDk2Zng=\n- index: true\nkey: YW1vdW50\nvalue: MTAwMDAwMDAwMHdlaQ==\ntype: coin_received\n- attributes:\n- index: true\nkey: cmVjaXBpZW50\nvalue: c3Qxc3F6c2s4bXBsdjUyNDhneDZkZGR6enh3ZXF2ZXc4cnRzdDk2Zng=\n- index: true\nkey: c2VuZGVy\nvalue: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\n- index: true\nkey: YW1vdW50\nvalue: MTAwMDAwMDAwMHdlaQ==\ntype: transfer\n- attributes:\n- index: true\nkey: c2VuZGVy\nvalue: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\ntype: message\n- attributes:\n- index: true\nkey: bW9kdWxl\nvalue: YmFuaw==\ntype: message\ngas_used: \"88709\"\ngas_wanted: \"200000\"\nheight: \"611\"\ninfo: \"\"\nlogs:\n- events:\n- attributes:\n- key: receiver\nvalue: st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\n- key: amount\nvalue: 1000000000wei\ntype: coin_received\n- attributes:\n- key: spender\nvalue: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n- key: amount\nvalue: 1000000000wei\ntype: coin_spent\n- attributes:\n- key: action\nvalue: /cosmos.bank.v1beta1.MsgSend\n- key: sender\nvalue: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n- key: module\nvalue: bank\ntype: message\n- attributes:\n- key: recipient\nvalue: st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\n- key: sender\nvalue: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n- key: amount\nvalue: 1000000000wei\ntype: transfer\nlog: \"\"\nmsg_index: 0\nraw_log: '[{\"events\":[{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\"},{\"key\":\"amount\",\"value\":\"1000000000wei\"}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"},{\"key\":\"amount\",\"value\":\"1000000000wei\"}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/cosmos.bank.v1beta1.MsgSend\"},{\"key\":\"sender\",\"value\":\"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"},{\"key\":\"module\",\"value\":\"bank\"}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\"},{\"key\":\"sender\",\"value\":\"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"},{\"key\":\"amount\",\"value\":\"1000000000wei\"}]}]}]'\ntimestamp: \"2023-01-11T01:20:11Z\"\ntx:\n'@type': /cosmos.tx.v1beta1.Tx\nauth_info:\nfee:\namount:\n- amount: \"200000000000000\"\ndenom: wei\ngas_limit: \"200000\"\ngranter: \"\"\npayer: \"\"\nsigner_infos:\n- mode_info:\nsingle:\nmode: SIGN_MODE_DIRECT\npublic_key:\n'@type': /stratos.crypto.v1.ethsecp256k1.PubKey\nkey: Agkwb1xacHBqeqGBIqRacXgf0qKTnEBPCEtH2vTE01Ke\nsequence: \"3\"\nbody:\nextension_options: []\nmemo: \"\"\nmessages:\n- '@type': /cosmos.bank.v1beta1.MsgSend\namount:\n- amount: \"1000000000\"\ndenom: wei\nfrom_address: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\nto_address: st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\nnon_critical_extension_options: []\ntimeout_height: \"0\"\nsignatures:\n- 7FmgB+sTnP5Kk4q121YyVdJJkdEq3Gioydu8fTP+pxoMC/Tl77uJlCRBanSP7jx1xEjwTxt3znGL9KNQLRAA2QA=\ntxhash: AB0EF3761603145EDC1B4121C91B51001249186E1362E7148C82E7DB12F7BDF0\n</code></pre> <p></p>"},{"location":"docs-validator-node/stchaind-commands-part-2/#-export","title":"-<code>export</code>","text":"<p>Export state to JSON.</p> <pre><code>Usage:\nstchaind export [flags]\nFlags:\n--for-zero-height              Export state to start at height zero (perform preproccessing)\n--height int                   Export state from a particular height (-1 means latest height) (default -1)\n-h, --help                         help for export\n--jail-allowed-addrs strings   Comma-separated list of operator addresses of jailed validators to unjail\n</code></pre> <p>Example:</p> <pre><code>stchaind export &gt; dump.json\n</code></pre> <p></p> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/","title":"Stratos Chain stchaind gRPC queries","text":"<p>Cosmos SDK gRPC definitions have been documented here</p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#register-module","title":"Register Module","text":""},{"location":"docs-validator-node/stratos-chain-grpc-queries/#grpc-gateway","title":"gRPC Gateway","text":"Method Name Request Type Response Type Description StakeTotal QueryTotalStakeRequest  fields: {} QueryTotalStakeResponse fields: Query total staking state of all registered resource nodes and meta nodes Params QueryParamsRequest  fields: {} QueryParamsResponse fields: Get params of Register Module ResourceNode QueryResourceNodeRequest  fields: QueryResourceNodeResponse fields: Get info of a registered resource node MetaNode QueryMetaNodeRequest  fields: QueryMetaNodeResponse fields: Get info of a registered meta node StakeByNode QueryStakeByNodeRequest  fields: QueryStakeByNodeResponse fields: Get staking info of a specific node StakeByOwner QueryStakeByOwnerRequest  fields: QueryStakeByOwnerResponse fields: Get all staking info of a specific owner BondedResourceNodeCount QueryBondedResourceNodeCountRequest  fields: {} QueryBondedResourceNodeCountResponse fields: Get params of Register Module BondedMetaNodeCount QueryBondedMetaNodeCountRequest  fields: {} QueryBondedMetaNodeCountResponse fields: Get params of Register Module <p>TotalStakesResponse: </p> Field Type Label resource_nodes_total_stake cosmos.base.v1beta1.Coin meta_nodes_total_stake cosmos.base.v1beta1.Coin total_bonded_stake cosmos.base.v1beta1.Coin total_unbonded_stake cosmos.base.v1beta1.Coin total_unbonding_stake cosmos.base.v1beta1.Coin <p></p> <p>Params:</p> Field Type Label bond_denom string unbonding_threashold_time google.protobuf.Duration unbonding_completion_time google.protobuf.Duration max_entries uint32 <p></p> <p>ResourceNode:</p> Field Type Label network_address string pubkey google.protobuf.Any suspend bool status cosmos.staking.v1beta1.BondStatus tokens string owner_address string description Description creation_time google.protobuf.Timestamp node_type uint32 <p></p> <p>MetaNode:</p> Field Type Label network_address string pubkey google.protobuf.Any suspend bool status cosmos.staking.v1beta1.BondStatus tokens string owner_address string description Description creation_time google.protobuf.Timestamp <p></p> <p>StakingInfo:</p> Field Type Label network_address string pubkey google.protobuf.Any suspend bool status cosmos.staking.v1beta1.BondStatus tokens string owner_address string description Description creation_time google.protobuf.Timestamp node_type uint32 bonded_stake cosmos.base.v1beta1.Coin un_bonding_stake cosmos.base.v1beta1.Coin un_bonded_stake cosmos.base.v1beta1.Coin <p></p> <p>Description:</p> Field Type Label moniker string identity string website string security_contact string details string"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-list","title":"- List","text":"<p>List all available grpc queries in Register Module</p> <p>Request:</p> <pre><code>grpcurl -plaintext 127.0.0.1:9090 list stratos.register.v1.Query\n</code></pre> <p>Response:</p> <pre><code>stratos.register.v1.Query.BondedMetaNodeCount\nstratos.register.v1.Query.BondedResourceNodeCount\nstratos.register.v1.Query.MetaNode\nstratos.register.v1.Query.Params\nstratos.register.v1.Query.ResourceNode\nstratos.register.v1.Query.StakeByNode\nstratos.register.v1.Query.StakeByOwner\nstratos.register.v1.Query.StakeTotal\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-staketotal","title":"- StakeTotal","text":"<p>Query total staking state of all registered resource nodes and meta nodes</p> <p>Request:</p> <pre><code> grpcurl -plaintext 127.0.0.1:9090 stratos.register.v1.Query.StakeTotal\n</code></pre> <p>Response:</p> <pre><code>{\n\"totalStakes\": {\n\"resourceNodesTotalStake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n},\n\"metaNodesTotalStake\": {\n\"denom\": \"wei\",\n\"amount\": \"100000000000000000000\"\n},\n\"totalBondedStake\": {\n\"denom\": \"wei\",\n\"amount\": \"100000000000000000000\"\n},\n\"totalUnbondedStake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n},\n\"totalUnbondingStake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n}\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-params","title":"- Params","text":"<p>Get params of Register Module</p> <p>Request:</p> <pre><code>grpcurl -plaintext 127.0.0.1:9090 stratos.register.v1.Query.Params\n</code></pre> <p>Response:</p> <pre><code>{\n\"params\": {\n\"bondDenom\": \"wei\",\n\"unbondingThreasholdTime\": \"15552000s\",\n\"unbondingCompletionTime\": \"1209600s\",\n\"maxEntries\": 16,\n\"resourceNodeRegEnabled\": true\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-resourcenode","title":"- ResourceNode","text":"<p>Get info of a registered resource node</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"network_addr\":\"stsds1xg2jzku8gptq6sjpjd9zus8qec7a39phcj8md9\"}' 127.0.0.1:9090 stratos.register.v1.Query.ResourceNode\n</code></pre> <p>Response:</p> <pre><code>{\n\"node\": {\n\"networkAddress\": \"stsds1xg2jzku8gptq6sjpjd9zus8qec7a39phcj8md9\",\n\"pubkey\": {\n\"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n\"key\": \"JZhVcpSQU7rXzlaiqjpSW4u2n6lE/Q+xHG2GFaUkFkA=\"\n},\n\"status\": \"BOND_STATUS_BONDED\",\n\"tokens\": \"2000000000000000000\",\n\"ownerAddress\": \"st1vvysda6ylqz2adauqg4djsz4rx6hv6mqv9fepp\",\n\"description\": {\n\"moniker\": \"stsds1xg2jzku8gptq6sjpjd9zus8qec7a39phcj8md9\"\n},\n\"creationTime\": \"2023-01-14T00:28:21.819038836Z\",\n\"nodeType\": 4\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-metanode","title":"- MetaNode","text":"<p>Get info of a registered meta node</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"network_addr\":\"stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\"}' 127.0.0.1:9090 stratos.register.v1.Query.MetaNode\n</code></pre> <p>Response:</p> <pre><code>{\n\"node\": {\n\"networkAddress\": \"stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\",\n\"pubkey\": {\n\"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n\"key\": \"ltODy8zL5IjJwCutlIexqlBb3GH0+aHZOrpT7f/aKnQ=\"\n},\n\"status\": \"BOND_STATUS_BONDED\",\n\"tokens\": \"100000000000000000000\",\n\"ownerAddress\": \"st1a8ngk4tjvuxneyuvyuy9nvgehkpfa38hm8mp3x\",\n\"description\": {\n\"moniker\": \"snode://stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64@127.0.0.1:8888\"\n},\n\"creationTime\": \"0001-01-01T00:00:00Z\"\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-stakebynode","title":"- StakeByNode","text":"<p>Get staking info of a specific node</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"network_addr\":\"stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\",\"query_type\": 1 }' 127.0.0.1:9090 stratos.register.v1.Query.StakeByNode\n</code></pre> <p>Response:</p> <pre><code>{\n\"stakingInfo\": {\n\"networkAddress\": \"stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\",\n\"pubkey\": {\n\"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n\"key\": \"ltODy8zL5IjJwCutlIexqlBb3GH0+aHZOrpT7f/aKnQ=\"\n},\n\"status\": \"BOND_STATUS_BONDED\",\n\"tokens\": \"100000000000000000000\",\n\"ownerAddress\": \"st1a8ngk4tjvuxneyuvyuy9nvgehkpfa38hm8mp3x\",\n\"description\": {\n\"moniker\": \"snode://stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64@127.0.0.1:8888\"\n},\n\"creationTime\": \"0001-01-01T00:00:00Z\",\n\"bondedStake\": {\n\"denom\": \"wei\",\n\"amount\": \"100000000000000000000\"\n},\n\"unBondingStake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n},\n\"unBondedStake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n}\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-stakebyowner","title":"- StakeByOwner","text":"<p>Get all staking info of a specific owner</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"owner_addr\":\"st1a8ngk4tjvuxneyuvyuy9nvgehkpfa38hm8mp3x\", \"pagination\": {\"limit\":20}}' 127.0.0.1:9090 stratos.register.v1.Query.StakeByOwner\n</code></pre> <p>Response:</p> <pre><code>{\n\"stakingInfos\": [\n{\n\"networkAddress\": \"stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\",\n\"pubkey\": {\n\"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n\"key\": \"ltODy8zL5IjJwCutlIexqlBb3GH0+aHZOrpT7f/aKnQ=\"\n},\n\"status\": \"BOND_STATUS_BONDED\",\n\"tokens\": \"100000000000000000000\",\n\"ownerAddress\": \"st1a8ngk4tjvuxneyuvyuy9nvgehkpfa38hm8mp3x\",\n\"description\": {\n\"moniker\": \"snode://stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64@127.0.0.1:8888\"\n},\n\"creationTime\": \"0001-01-01T00:00:00Z\",\n\"bondedStake\": {\n\"denom\": \"wei\",\n\"amount\": \"100000000000000000000\"\n},\n\"unBondingStake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n},\n\"unBondedStake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n}\n}\n],\n\"pagination\": {\n\"total\": \"1\"\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-bondedresourcenodecount","title":"- BondedResourceNodeCount","text":"<p>Queries total number of Bonded ResourceNodes</p> <p>Request:</p> <pre><code>grpcurl -plaintext 127.0.0.1:9090 stratos.register.v1.Query.BondedResourceNodeCount\n</code></pre> <p>Response:</p> <pre><code>{\n\"number\": \"2\"\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-bondedmetanodecount","title":"- BondedMetaNodeCount","text":"<p>Queries total number of Bonded MetaNodes</p> <p>Request:</p> <pre><code>grpcurl -plaintext 127.0.0.1:9090 stratos.register.v1.Query.BondedMetaNodeCount\n</code></pre> <p>Response:</p> <pre><code>{\n\"number\": \"4\"\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#sds-module","title":"SDS Module","text":""},{"location":"docs-validator-node/stratos-chain-grpc-queries/#grpc-gateway_1","title":"gRPC Gateway","text":"Method Name Request Type Response Type Description Fileupload QueryFileUploadRequest  fields: QueryFileUploadResponse fields: Query uploaded file info by hash Params QueryParamsRequest  fields: {} QueryParamsResponse fields: Get params of SDS Module Prepay QueryPrepayRequest  fields: QueryPrepayResponse fields: Query balance of prepayment in volume Poo <p>Params:</p> Field Type Label bond_denom string <p>FileInfo:</p> Field Type Label height string reporter string string string"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-list_1","title":"- List","text":"<p>List all available grpc queries in SDS Module</p> <p>Request:</p> <pre><code> grpcurl -plaintext 127.0.0.1:9090 list stratos.sds.v1.Query\n</code></pre> <p>Response:</p> <pre><code>stratos.sds.v1.Query.Fileupload\nstratos.sds.v1.Query.Params\nstratos.sds.v1.Query.Prepay\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-params_1","title":"- Params","text":"<p>Get params of SDS Module</p> <p>Request:</p> <pre><code> grpcurl -plaintext 127.0.0.1:9090 stratos.sds.v1.Query.Params\n</code></pre> <p>Response:</p> <pre><code>{\n\"params\": {\n\"bondDenom\": \"wei\"\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-prepay","title":"- Prepay","text":"<p>Query balance of prepayment in volume Pool</p> <p>Request:</p> <pre><code> grpcurl -plaintext -d '{\"acct_addr\":\"st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\"}' 127.0.0.1:9090 stratos.sds.v1.Query.Prepay\n</code></pre> <p>Response:</p> <pre><code>{\n\"balance\": \"9000000000000\"\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-fileupload","title":"- Fileupload","text":"<p>Query uploaded file info by hash</p> <p>Request:</p> <pre><code> grpcurl -plaintext -d '{\"file_hash\":\"001A1FC0B82DD3B0353B59E90388EEA2B73DEECA872955B414EBC99ECD3E3C1F\"}' 127.0.0.1:9090 stratos.sds.v1.Query.Fileupload\n</code></pre> <p>Response:</p> <pre><code>{\n\"fileInfo\": {\n\"height\": \"1147\",\n\"reporter\": \"stsds14c3em44vlh276cujnr2ez802uyjyeqrrsu9fuh\",\n\"uploader\": \"st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\"\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#pot-module","title":"POT Module","text":""},{"location":"docs-validator-node/stratos-chain-grpc-queries/#grpc-gateway_2","title":"gRPC Gateway","text":"Method Name Request Type Response Type Description PotRewardsByEpoch QueryPotRewardsByEpochRequest  fields: QueryPotRewardsByEpochResponse fields: Query pot reward by epoch Params QueryParamsRequest  fields: {} QueryParamsResponse fields: Get params of POT Module PotRewardsByOwner QueryPotRewardsByOwnerRequest  fields: QueryPotRewardsByOwnerResponse fields: Get pot reward by owner PotSlashingByOwner QueryPotSlashingByOwnerRequest  fields: QueryPotSlashingByOwnerResponse fields: Get pot slashing by owner VolumeReport QueryVolumeReportRequest  fields: QueryVolumeReportResponse fields: Get pot volume report by epoch <p>PotRewardByOwner:</p> Field Type Label wallet_address string MatureTotalReward cosmos.base.v1beta1.Coin repeated ImmatureTotalReward cosmos.base.v1beta1.Coin repeated <p>ReportInfo:</p> Field Type Label epoch int64 reference string"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-list_2","title":"- List","text":"<p>List all available grpc queries in POT Module</p> <p>Request:</p> <pre><code> grpcurl -plaintext 127.0.0.1:9090 list stratos.pot.v1.Query\n</code></pre> <p>Response:</p> <pre><code>stratos.pot.v1.Query.Params\nstratos.pot.v1.Query.PotRewardsByEpoch\nstratos.pot.v1.Query.PotRewardsByOwner\nstratos.pot.v1.Query.PotSlashingByOwner\nstratos.pot.v1.Query.VolumeReport\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-params_2","title":"- Params","text":"<p>Get params of POT Module</p> <p>Request:</p> <pre><code> grpcurl -plaintext 127.0.0.1:9090 stratos.pot.v1.Query.Params\n</code></pre> <p>Response:</p> <pre><code>{\n\"params\": {\n\"bondDenom\": \"wei\",\n\"rewardDenom\": \"utros\",\n\"matureEpoch\": \"2016\",\n\"miningRewardParams\": [\n{\n\"totalMinedValveStart\": {\n\"denom\": \"utros\",\n\"amount\": \"0\"\n},\n\"totalMinedValveEnd\": {\n\"denom\": \"utros\",\n\"amount\": \"16819200000000000\"\n},\n\"miningReward\": {\n\"denom\": \"utros\",\n\"amount\": \"80000000000\"\n},\n\"blockChainPercentageInTenThousand\": \"2000\",\n\"resourceNodePercentageInTenThousand\": \"6000\",\n\"metaNodePercentageInTenThousand\": \"2000\"\n},\n{\n\"totalMinedValveStart\": {\n\"denom\": \"utros\",\n\"amount\": \"16819200000000000\"\n},\n\"totalMinedValveEnd\": {\n\"denom\": \"utros\",\n\"amount\": \"25228800000000000\"\n},\n\"miningReward\": {\n\"denom\": \"utros\",\n\"amount\": \"40000000000\"\n},\n\"blockChainPercentageInTenThousand\": \"2000\",\n\"resourceNodePercentageInTenThousand\": \"6200\",\n\"metaNodePercentageInTenThousand\": \"1800\"\n},\n{\n\"totalMinedValveStart\": {\n\"denom\": \"utros\",\n\"amount\": \"25228800000000000\"\n},\n\"totalMinedValveEnd\": {\n\"denom\": \"utros\",\n\"amount\": \"29433600000000000\"\n},\n\"miningReward\": {\n\"denom\": \"utros\",\n\"amount\": \"20000000000\"\n},\n\"blockChainPercentageInTenThousand\": \"2000\",\n\"resourceNodePercentageInTenThousand\": \"6400\",\n\"metaNodePercentageInTenThousand\": \"1600\"\n},\n{\n\"totalMinedValveStart\": {\n\"denom\": \"utros\",\n\"amount\": \"29433600000000000\"\n},\n\"totalMinedValveEnd\": {\n\"denom\": \"utros\",\n\"amount\": \"31536000000000000\"\n},\n\"miningReward\": {\n\"denom\": \"utros\",\n\"amount\": \"10000000000\"\n},\n\"blockChainPercentageInTenThousand\": \"2000\",\n\"resourceNodePercentageInTenThousand\": \"6600\",\n\"metaNodePercentageInTenThousand\": \"1400\"\n},\n{\n\"totalMinedValveStart\": {\n\"denom\": \"utros\",\n\"amount\": \"31536000000000000\"\n},\n\"totalMinedValveEnd\": {\n\"denom\": \"utros\",\n\"amount\": \"32587200000000000\"\n},\n\"miningReward\": {\n\"denom\": \"utros\",\n\"amount\": \"5000000000\"\n},\n\"blockChainPercentageInTenThousand\": \"2000\",\n\"resourceNodePercentageInTenThousand\": \"6800\",\n\"metaNodePercentageInTenThousand\": \"1200\"\n},\n{\n\"totalMinedValveStart\": {\n\"denom\": \"utros\",\n\"amount\": \"32587200000000000\"\n},\n\"totalMinedValveEnd\": {\n\"denom\": \"utros\",\n\"amount\": \"40000000000000000\"\n},\n\"miningReward\": {\n\"denom\": \"utros\",\n\"amount\": \"2500000000\"\n},\n\"blockChainPercentageInTenThousand\": \"2000\",\n\"resourceNodePercentageInTenThousand\": \"7000\",\n\"metaNodePercentageInTenThousand\": \"1000\"\n}\n],\n\"communityTax\": \"20000000000000000\"\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-volumereport","title":"- VolumeReport","text":"<p>Get pot volume report by epoch</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"epoch\": 30 }' 127.0.0.1:9090 stratos.pot.v1.Query.VolumeReport\n</code></pre> <p>Response:</p> <pre><code>{\n\"reportInfo\": {\n\"epoch\": \"30\",\n\"reference\": \"report for epoch 3\",\n\"txHash\": \"DFA2976152D554DC30FF9C1BC4C497B839F3ED4BEB9ED3E531B6A559E16BF411\",\n\"reporter\": \"stsds14c3em44vlh276cujnr2ez802uyjyeqrrsu9fuh\"\n},\n\"height\": \"2865\"\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-potrewardsbyowner","title":"- PotRewardsByOwner","text":"<p>Get pot reward by owner</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"wallet_address\": \"st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\"} ' 127.0.0.1:9090 stratos.pot.v1.Query.PotRewardsByOwner\n</code></pre> <p>Response:</p> <pre><code>{\n\"rewards\": {\n\"walletAddress\": \"st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\",\n\"ImmatureTotalReward\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"900\"\n},\n{\n\"denom\": \"utros\",\n\"amount\": \"144000002130\"\n}\n]\n},\n\"height\": \"2961\"\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-potslashingbyowner","title":"- PotSlashingByOwner","text":"<p>Get pot slashing by owner </p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"wallet_address\": \"st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\"} ' 127.0.0.1:9090 stratos.pot.v1.Query.PotSlashingByOwner\n</code></pre> <p>Response:</p> <pre><code>{\n\"slashing\": \"0\",\n\"height\": \"2977\"\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-grpc-queries/#-potrewardsbyepoch","title":"- PotRewardsByEpoch","text":"<p>Query pot reward by epoch </p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"epoch\": 30, \"wallet_address\": \"st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\" }' 127.0.0.1:9090 stratos.pot.v1.Query.PotRewardsByEpoch\n</code></pre> <p>Response:</p> <pre><code>{\n\"rewards\": [\n{\n\"walletAddress\": \"st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\",\n\"rewardFromMiningPool\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"48000000710\"\n}\n],\n\"rewardFromTrafficPool\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"300\"\n}\n]\n}\n],\n\"height\": \"129\",\n\"pagination\": {\n}\n}\n</code></pre> <p></p> <p></p>"},{"location":"docs-validator-node/stratos-chain-rest-apis/","title":"Stratos Chain stchaind REST APIs","text":""},{"location":"docs-validator-node/stratos-chain-rest-apis/#overview","title":"Overview","text":"<p>Generally, all the APIs provided here could be grouped into HTTP GET and POST requests. We classified these APIs into sections based on their modules or their operations for an in-depth analysis.</p> <ul> <li><code>GET</code> Request</li> </ul> <p>The response content type is <code>application/json</code></p> <ul> <li><code>POST</code> Request</li> </ul> <p>The response content type is <code>application/json</code>. If it has a request body, the request content is also in <code>application/json</code> format.</p> <p>A <code>POST</code> request  will return an unsigned transaction, which equals to its equivalent <code>stchaind</code> command with a <code>--generate-only</code> flag.</p>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#stratos-chain-rest-apis","title":"Stratos-chain REST APIs","text":""},{"location":"docs-validator-node/stratos-chain-rest-apis/#node-status","title":"Node Status","text":"<code>GET /node_info</code> \u00a0\u00a0\u00a0\u00a0\u00a0queries information about the connected node  Request Example: <pre><code>https://rest-tropos.thestratos.org/node_info\n</code></pre> Response Example: <pre><code>{\n\"node_info\": {\n\"protocol_version\": {\n\"p2p\": \"8\",\n\"block\": \"11\",\n\"app\": \"0\"\n},\n\"id\": \"16a0758d175cbf5c08d41dffa73eb5c0190869ed\",\n\"listen_addr\": \"tcp://0.0.0.0:26656\",\n\"network\": \"test-chain\",\n\"version\": \"0.34.21\",\n\"channels\": \"40202122233038606100\",\n\"moniker\": \"node\",\n\"other\": {\n\"tx_index\": \"on\",\n\"rpc_address\": \"tcp://127.0.0.1:26657\"\n}\n},\n\"application_version\": {\n\"name\": \"\",\n\"server_name\": \"stchaind\",\n\"version\": \"v0.8.0\",\n\"commit\": \"\",\n\"build_tags\": \"\",\n\"go\": \"go version go1.19.4 linux/amd64\",\n\"build_deps\": [\n\"filippo.io/edwards25519@v1.0.0-beta.2\",\n\"github.com/99designs/keyring@v1.1.6 =&gt; github.com/cosmos/keyring@v1.1.7-0.20210622111912-ef00f8ac3d76\",\n\"github.com/ChainSafe/go-schnorrkel@v0.0.0-20200405005733-88cbf1b4c40d\",\n\"github.com/VictoriaMetrics/fastcache@v1.6.0\",\n\"github.com/Workiva/go-datastructures@v1.0.53\",\n\"github.com/armon/go-metrics@v0.3.10\",\n\"github.com/beorn7/perks@v1.0.1\",\n\"github.com/bgentry/speakeasy@v0.1.0\",\n\"github.com/btcsuite/btcd@v0.22.1\",\n\"github.com/btcsuite/btcd/chaincfg/chainhash@v1.0.1\",\n\"github.com/btcsuite/btcutil@v1.0.3-0.20201208143702-a53e38424cce\",\n\"github.com/cenkalti/backoff/v4@v4.1.1\",\n\"github.com/cespare/xxhash/v2@v2.1.2\",\n\"github.com/coinbase/rosetta-sdk-go@v0.7.0\",\n\"github.com/confio/ics23/go@v0.7.0 =&gt; github.com/cosmos/cosmos-sdk/ics23/go@v0.8.0\",\n\"github.com/cosmos/btcutil@v1.0.4\",\n\"github.com/cosmos/cosmos-sdk@v0.45.9\",\n\"github.com/cosmos/go-bip39@v1.0.0\",\n\"github.com/cosmos/iavl@v0.19.3\",\n\"github.com/cosmos/ibc-go/v3@v3.0.0\",\n\"github.com/creachadair/taskgroup@v0.3.2\",\n\"github.com/davecgh/go-spew@v1.1.1\",\n\"github.com/deckarep/golang-set@v1.8.0\",\n\"github.com/desertbit/timer@v0.0.0-20180107155436-c41aec40b27f\",\n\"github.com/dvsekhvalnov/jose2go@v0.0.0-20200901110807-248326c1351b\",\n\"github.com/edsrzf/mmap-go@v1.0.0\",\n\"github.com/ethereum/go-ethereum@v1.10.16\",\n\"github.com/felixge/httpsnoop@v1.0.1\",\n\"github.com/fsnotify/fsnotify@v1.5.4\",\n\"github.com/gballet/go-libpcsclite@v0.0.0-20190607065134-2772fd86a8ff\",\n\"github.com/go-kit/kit@v0.12.0\",\n\"github.com/go-kit/log@v0.2.1\",\n\"github.com/go-logfmt/logfmt@v0.5.1\",\n\"github.com/go-stack/stack@v1.8.0\",\n\"github.com/godbus/dbus@v0.0.0-20190726142602-4481cbc300e2\",\n\"github.com/gogo/gateway@v1.1.0\",\n\"github.com/gogo/protobuf@v1.3.3 =&gt; github.com/regen-network/protobuf@v1.3.3-alpha.regen.1\",\n\"github.com/golang/protobuf@v1.5.2\",\n\"github.com/golang/snappy@v0.0.4\",\n\"github.com/google/btree@v1.0.0\",\n\"github.com/google/orderedcode@v0.0.1\",\n\"github.com/google/uuid@v1.3.0\",\n\"github.com/gorilla/handlers@v1.5.1\",\n\"github.com/gorilla/mux@v1.8.0\",\n\"github.com/gorilla/websocket@v1.5.0\",\n\"github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0\",\n\"github.com/grpc-ecosystem/grpc-gateway@v1.16.0\",\n\"github.com/gsterjov/go-libsecret@v0.0.0-20161001094733-a6f4afe4910c\",\n\"github.com/gtank/merlin@v0.1.1\",\n\"github.com/gtank/ristretto255@v0.1.2\",\n\"github.com/hashicorp/go-immutable-radix@v1.3.1\",\n\"github.com/hashicorp/golang-lru@v0.5.5-0.20210104140557-80c98217689d\",\n\"github.com/hashicorp/hcl@v1.0.0\",\n\"github.com/hdevalence/ed25519consensus@v0.0.0-20210204194344-59a8610d2b87\",\n\"github.com/holiman/bloomfilter/v2@v2.0.3\",\n\"github.com/holiman/uint256@v1.2.0\",\n\"github.com/huin/goupnp@v1.0.2\",\n\"github.com/improbable-eng/grpc-web@v0.15.0\",\n\"github.com/ipfs/go-cid@v0.1.0\",\n\"github.com/jackpal/go-nat-pmp@v1.0.2\",\n\"github.com/klauspost/compress@v1.15.9\",\n\"github.com/klauspost/cpuid/v2@v2.0.4\",\n\"github.com/lib/pq@v1.10.6\",\n\"github.com/libp2p/go-buffer-pool@v0.1.0\",\n\"github.com/magiconair/properties@v1.8.6\",\n\"github.com/mattn/go-colorable@v0.1.12\",\n\"github.com/mattn/go-isatty@v0.0.14\",\n\"github.com/mattn/go-runewidth@v0.0.9\",\n\"github.com/matttproud/golang_protobuf_extensions@v1.0.2-0.20181231171920-c182affec369\",\n\"github.com/mimoo/StrobeGo@v0.0.0-20181016162300-f8f6d4d2b643\",\n\"github.com/minio/blake2b-simd@v0.0.0-20160723061019-3f5f724cb5b1\",\n\"github.com/minio/highwayhash@v1.0.2\",\n\"github.com/minio/sha256-simd@v1.0.0\",\n\"github.com/mitchellh/mapstructure@v1.5.0\",\n\"github.com/mr-tron/base58@v1.2.0\",\n\"github.com/mtibben/percent@v0.2.1\",\n\"github.com/multiformats/go-base32@v0.0.3\",\n\"github.com/multiformats/go-base36@v0.1.0\",\n\"github.com/multiformats/go-multibase@v0.0.3\",\n\"github.com/multiformats/go-multihash@v0.0.15\",\n\"github.com/multiformats/go-varint@v0.0.6\",\n\"github.com/olekukonko/tablewriter@v0.0.5\",\n\"github.com/pelletier/go-toml/v2@v2.0.2\",\n\"github.com/pkg/errors@v0.9.1\",\n\"github.com/pmezard/go-difflib@v1.0.0\",\n\"github.com/prometheus/client_golang@v1.12.2\",\n\"github.com/prometheus/client_model@v0.2.0\",\n\"github.com/prometheus/common@v0.34.0\",\n\"github.com/prometheus/procfs@v0.7.3\",\n\"github.com/prometheus/tsdb@v0.7.1\",\n\"github.com/rakyll/statik@v0.1.7\",\n\"github.com/rcrowley/go-metrics@v0.0.0-20200313005456-10cdbea86bc0\",\n\"github.com/regen-network/cosmos-proto@v0.3.1\",\n\"github.com/rjeczalik/notify@v0.9.1\",\n\"github.com/rs/cors@v1.8.2\",\n\"github.com/rs/zerolog@v1.27.0\",\n\"github.com/shirou/gopsutil@v3.21.4-0.20210419000835-c7a38de76ee5+incompatible\",\n\"github.com/spf13/afero@v1.8.2\",\n\"github.com/spf13/cast@v1.5.0\",\n\"github.com/spf13/cobra@v1.5.0\",\n\"github.com/spf13/jwalterweatherman@v1.1.0\",\n\"github.com/spf13/pflag@v1.0.5\",\n\"github.com/spf13/viper@v1.12.0\",\n\"github.com/status-im/keycard-go@v0.0.0-20200402102358-957c09536969\",\n\"github.com/stretchr/testify@v1.8.0\",\n\"github.com/subosito/gotenv@v1.4.0\",\n\"github.com/syndtr/goleveldb@v1.0.1-0.20210819022825-2ae1ddf74ef7\",\n\"github.com/tendermint/btcd@v0.1.1\",\n\"github.com/tendermint/crypto@v0.0.0-20191022145703-50d29ede1e15\",\n\"github.com/tendermint/go-amino@v0.16.0\",\n\"github.com/tendermint/tendermint@v0.34.21\",\n\"github.com/tendermint/tm-db@v0.6.7\",\n\"github.com/tklauser/go-sysconf@v0.3.5\",\n\"github.com/tklauser/numcpus@v0.2.2\",\n\"github.com/tyler-smith/go-bip39@v1.1.0\",\n\"golang.org/x/crypto@v0.0.0-20220525230936-793ad666bf5e\",\n\"golang.org/x/exp@v0.0.0-20220722155223-a9213eeb770e\",\n\"golang.org/x/net@v0.0.0-20220726230323-06994584191e\",\n\"golang.org/x/sync@v0.0.0-20220722155255-886fb9371eb4\",\n\"golang.org/x/sys@v0.0.0-20220727055044-e65921a090b8\",\n\"golang.org/x/term@v0.0.0-20220722155259-a9ba230a4035\",\n\"golang.org/x/text@v0.3.7\",\n\"google.golang.org/genproto@v0.0.0-20220725144611-272f38e5d71b\",\n\"google.golang.org/grpc@v1.48.0 =&gt; google.golang.org/grpc@v1.33.2\",\n\"google.golang.org/protobuf@v1.28.0\",\n\"gopkg.in/ini.v1@v1.66.6\",\n\"gopkg.in/yaml.v2@v2.4.0\",\n\"gopkg.in/yaml.v3@v3.0.1\",\n\"nhooyr.io/websocket@v1.8.6\"\n],\n\"cosmos_sdk_version\": \"v0.45.9\"\n}\n}\n</code></pre>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#tendermint-rpc","title":"Tendermint RPC","text":"<p>Tendermint APIs, such as query blocks, transactions and validator set</p> <code>GET /syncing</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries if the node is currently syning with other nodes  Request Example: <pre><code>https://rest-tropos.thestratos.org/syncing\n</code></pre> Response Example: <pre><code>{\n\"syncing\": true\n}\n</code></pre> <p></p> <code>GET /blocks/{height | latest}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries a block at a specific {height | latest}  Request Example: <pre><code>https://rest-tropos.thestratos.org/blocks/latest\n</code></pre> Response Example: <pre><code>{\n\"block_id\": {\n\"hash\": \"97E6AF89C839417D1FC1B10DEFC747C14BF0F20F42ECF8116EE1EA55758556D1\",\n\"parts\": {\n\"total\": 1,\n\"hash\": \"4A32889C023AF838666A90D69A28238C4A62BBA692B85F8AB754A19BB0DAEC3D\"\n}\n},\n\"block\": {\n\"header\": {\n\"version\": {\n\"block\": \"11\"\n},\n\"chain_id\": \"test-chain\",\n\"height\": \"1101\",\n\"time\": \"2023-01-11T02:01:16.294185637Z\",\n\"last_block_id\": {\n\"hash\": \"EF2D1E436E3DC8D60CD3F52839DBF7347FB6C37863DFF0FB8F86496F594268BF\",\n\"parts\": {\n\"total\": 1,\n\"hash\": \"1A05B4D2C3813E05B7742AF1B2AB6024F2E68F174698DEC8B4A570D3F5DA068B\"\n}\n},\n\"last_commit_hash\": \"395C284AEB59B7B1C9EDE5D22E39281A5EFAE2864A896EB42639F6CABF49F8B7\",\n\"data_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n\"validators_hash\": \"5234BD91A3A751E055C35876578DE4A466311A80D540B59885AF68EF6D4D56DE\",\n\"next_validators_hash\": \"5234BD91A3A751E055C35876578DE4A466311A80D540B59885AF68EF6D4D56DE\",\n\"consensus_hash\": \"048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F\",\n\"app_hash\": \"FE115D4597A8CD9F7C508D43156778FF88CF85D95BE508D28FA55DDE5C947784\",\n\"last_results_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n\"evidence_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n\"proposer_address\": \"18A7169C1B427D994133F7B3D4504E92789DB37C\"\n},\n\"data\": {\n\"txs\": []\n},\n\"evidence\": {\n\"evidence\": []\n},\n\"last_commit\": {\n\"height\": \"1100\",\n\"round\": 0,\n\"block_id\": {\n\"hash\": \"EF2D1E436E3DC8D60CD3F52839DBF7347FB6C37863DFF0FB8F86496F594268BF\",\n\"parts\": {\n\"total\": 1,\n\"hash\": \"1A05B4D2C3813E05B7742AF1B2AB6024F2E68F174698DEC8B4A570D3F5DA068B\"\n}\n},\n\"signatures\": [\n{\n\"block_id_flag\": 2,\n\"validator_address\": \"18A7169C1B427D994133F7B3D4504E92789DB37C\",\n\"timestamp\": \"2023-01-11T02:01:16.294185637Z\",\n\"signature\": \"pLQMUuJJ23T2u5oNpR5xIt4+T/73TXxe6bj/LF0ue+hg8UseqFEGTDybLeAukUUMcudPnE3BS5oQoRwB9245BA==\"\n}\n]\n}\n}\n}\n</code></pre> <p></p> <code>GET /validatorsets/{height | latest}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries validator set at certain {height | latest}  Request Example: <pre><code>https://rest-tropos.thestratos.org/validatorsets/latest\n</code></pre> Response Example: <pre><code>{\n\"height\": \"0\",\n\"result\": {\n\"block_height\": \"1115\",\n\"validators\": [\n{\n\"address\": \"stvalcons1rzn3d8qmgf7ejsfn77eag5zwjfufmvmu7sn802\",\n\"pub_key\": {\n\"type\": \"tendermint/PubKeyEd25519\",\n\"value\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n},\n\"proposer_priority\": \"0\",\n\"voting_power\": \"500000\"\n}\n],\n\"total\": \"1\"\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#auth","title":"Auth","text":"<code>GET /cosmos/auth/v1beta1/accounts</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the account information on blockchain  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/auth/v1beta1/accounts\n</code></pre> Response Example: <pre><code>{\n\"accounts\": [\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"pub_key\": {\n\"@type\": \"/stratos.crypto.v1.ethsecp256k1.PubKey\",\n\"key\": \"Agkwb1xacHBqeqGBIqRacXgf0qKTnEBPCEtH2vTE01Ke\"\n},\n\"account_number\": \"0\",\n\"sequence\": \"4\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1zdv2enwn0eldmu9e2zwwz2zmgqswjzdv5w5g5j\",\n\"pub_key\": null,\n\"account_number\": \"6\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1r2gh2h8kjtz4slek6aua95ukyd8zmey2y9uatt\",\n\"pub_key\": null,\n\"account_number\": \"7\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1rwnmgk0x2n2wry876dkxq2hhcce8k7kzspppax\",\n\"pub_key\": null,\n\"account_number\": \"19\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n\"base_account\": {\n\"address\": \"st1y0ujk7aqvuxt6t058gn6k2kq8f3pe96vzwknau\",\n\"pub_key\": null,\n\"account_number\": \"29\",\n\"sequence\": \"0\"\n},\n\"name\": \"foundation_account\",\n\"permissions\": [\n\"minter\",\n\"burner\"\n]\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n\"base_account\": {\n\"address\": \"st1yl6hdjhmkf37639730gffanpzndzdpmhjjzmk7\",\n\"pub_key\": null,\n\"account_number\": \"27\",\n\"sequence\": \"0\"\n},\n\"name\": \"transfer\",\n\"permissions\": [\n\"minter\",\n\"burner\"\n]\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1g3wp24epahx2u8xn3jzh5ry8ugkh239l38wgrc\",\n\"pub_key\": null,\n\"account_number\": \"9\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1g54kyu2tk2e80wqq4q3t2dl4mm5ydwwyyu4pq5\",\n\"pub_key\": null,\n\"account_number\": \"8\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n\"base_account\": {\n\"address\": \"st1fz67scxv3hjy0nxafuf0c4made74gfcf7myjqg\",\n\"pub_key\": null,\n\"account_number\": \"28\",\n\"sequence\": \"0\"\n},\n\"name\": \"meta_node_bonded_pool\",\n\"permissions\": [\n\"minter\"\n]\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1f4d2tdddwv8304sfhe39r83d4ldz2dc3z40qtk\",\n\"pub_key\": null,\n\"account_number\": \"12\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n\"base_account\": {\n\"address\": \"st1fl48vsnmsdzcv85q5d2q4z5ajdha8yu3fkaac2\",\n\"pub_key\": null,\n\"account_number\": \"23\",\n\"sequence\": \"0\"\n},\n\"name\": \"bonded_tokens_pool\",\n\"permissions\": [\n\"burner\",\n\"staking\"\n]\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n\"base_account\": {\n\"address\": \"st1tygms3xhhs3yv487phx3dw4a95jn7t7lakpvw7\",\n\"pub_key\": null,\n\"account_number\": \"24\",\n\"sequence\": \"0\"\n},\n\"name\": \"not_bonded_tokens_pool\",\n\"permissions\": [\n\"burner\",\n\"staking\"\n]\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1vznztham7975ukx4hve497kxftejwatsjfw4gc\",\n\"pub_key\": null,\n\"account_number\": \"15\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1vvysda6ylqz2adauqg4djsz4rx6hv6mqv9fepp\",\n\"pub_key\": null,\n\"account_number\": \"3\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n\"base_account\": {\n\"address\": \"st10d07y265gmmuvt4z0w9aw880jnsr700jx08hhw\",\n\"pub_key\": null,\n\"account_number\": \"25\",\n\"sequence\": \"0\"\n},\n\"name\": \"gov\",\n\"permissions\": [\n\"burner\"\n]\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\",\n\"pub_key\": null,\n\"account_number\": \"1\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n\"base_account\": {\n\"address\": \"st1jv65s3grqf6v6jl3dp4t6c9t9rk99cd8mjswgz\",\n\"pub_key\": null,\n\"account_number\": \"22\",\n\"sequence\": \"0\"\n},\n\"name\": \"distribution\",\n\"permissions\": [\n]\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1nvh4nrjh6hhy7pxr2d9zp4zrzphg8tdccmf47x\",\n\"pub_key\": null,\n\"account_number\": \"11\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st14rtmcurt5rvgy8pu3srleskfjjyry3n9a00nw9\",\n\"pub_key\": null,\n\"account_number\": \"5\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st144ykkar9fhl8khs7lwz0s7py9vj4w9adp37kt9\",\n\"pub_key\": null,\n\"account_number\": \"2\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1k9hfqps9s2tpnfxch2avvevyvtry0zth39gdzc\",\n\"pub_key\": null,\n\"account_number\": \"18\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1kwtqfxk654urrannhsl7shsm3r7q9tyn40yq4e\",\n\"pub_key\": null,\n\"account_number\": \"16\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1ewlfmhl8j0p2jesfd2xrqp0qjeh2222gs9uefh\",\n\"pub_key\": null,\n\"account_number\": \"20\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1mgatj2a65ksmhznf6lseweq835m7gyjvzmphhm\",\n\"pub_key\": null,\n\"account_number\": \"14\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n\"base_account\": {\n\"address\": \"st1m3h30wlvsf8llruxtpukdvsy0km2kum85un2xa\",\n\"pub_key\": null,\n\"account_number\": \"26\",\n\"sequence\": \"0\"\n},\n\"name\": \"mint\",\n\"permissions\": [\n\"minter\"\n]\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1uuxxf8kt5ey7rgwdgpch2l7ye2597cz5y4077n\",\n\"pub_key\": null,\n\"account_number\": \"13\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1a8ngk4tjvuxneyuvyuy9nvgehkpfa38hm8mp3x\",\n\"pub_key\": null,\n\"account_number\": \"17\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1afcwl869ehc6m4zsqp096dj9t9m75uh5wq4qrs\",\n\"pub_key\": null,\n\"account_number\": \"10\",\n\"sequence\": \"0\"\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n\"base_account\": {\n\"address\": \"st17xpfvakm2amg962yls6f84z3kell8c5lv5hj2q\",\n\"pub_key\": null,\n\"account_number\": \"21\",\n\"sequence\": \"0\"\n},\n\"name\": \"fee_collector\",\n\"permissions\": [\n]\n},\n{\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st172v4u8ysfgaphjs8uyy0svvc6d6tzl6gp07kn4\",\n\"pub_key\": null,\n\"account_number\": \"4\",\n\"sequence\": \"0\"\n}\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"30\"\n}\n}\n</code></pre> <code>GET /cosmos/auth/v1beta1/accounts/{address}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the account information on blockchain  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/auth/v1beta1/accounts/st1v33vxhmu9kp9yrncfldvt0zg9qlcepc75lyggk\n</code></pre> Response Example: <pre><code>{\n\"account\": {\n\"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n\"address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"pub_key\": {\n\"@type\": \"/stratos.crypto.v1.ethsecp256k1.PubKey\",\n\"key\": \"Agkwb1xacHBqeqGBIqRacXgf0qKTnEBPCEtH2vTE01Ke\"\n},\n\"account_number\": \"0\",\n\"sequence\": \"4\"\n}\n}\n</code></pre> <code>GET /cosmos/auth/v1beta1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all parameters of Auth module.  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/auth/v1beta1/params\n</code></pre> Response Example: <pre><code>{\n\"params\": {\n\"max_memo_characters\": \"256\",\n\"tx_sig_limit\": \"7\",\n\"tx_size_cost_per_byte\": \"10\",\n\"sig_verify_cost_ed25519\": \"590\",\n\"sig_verify_cost_secp256k1\": \"1000\"\n}\n}\n</code></pre>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#bank","title":"Bank","text":"<code>GET /cosmos/bank/v1beta1/balances/{address}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the balance of all coins for a single account      Alias: /bank/balances/{address}  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/bank/v1beta1/balances/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\nor \nhttps://rest-tropos.thestratos.org/bank/balances/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n</code></pre> Response Example: <pre><code>{\n\"balances\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"1000000000000000\"\n},\n{\n\"denom\": \"wei\",\n\"amount\": \"959989996222216000000000\"\n}\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"2\"\n}\n}\n</code></pre> <code>GET /cosmos/bank/v1beta1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the parameters of Bank module.  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/bank/v1beta1/params\n</code></pre> Response Example: <pre><code>{\n\"params\": {\n\"send_enabled\": [],\n\"default_send_enabled\": true\n}\n}\n</code></pre> <code>GET /cosmos/bank/v1beta1/supply</code> \u00a0\u00a0\u00a0\u00a0\u00a0 returns total supply of coins in the chain      Alias: /bank/total  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/bank/v1beta1/supply\nor\nhttps://rest-tropos.thestratos.org/bank/total\n</code></pre> Response Example: <pre><code>{\n\"supply\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"1000000000000000\"\n},\n{\n\"denom\": \"wei\",\n\"amount\": \"21000515645592831741552108\"\n}\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"2\"\n}\n}\n</code></pre> <code>GET /cosmos/bank/v1beta1/supply/{denom}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the supply of a single coin      Alias: /bank/total/{denom}  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/bank/v1beta1/supply/wei\nor\nhttps://rest-tropos.thestratos.org/bank/total/wei\n</code></pre> Response Example: <pre><code>{\n\"amount\": {\n\"denom\": \"wei\",\n\"amount\": \"21000519539308644119443444\"\n}\n}\n</code></pre>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#distribution","title":"Distribution","text":"<code>GET /cosmos/distribution/v1beta1/community_pool</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the community pool coins  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/distribution/v1beta1/community_pool\n</code></pre> Response Example: <pre><code>{\n\"pool\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"10529239257213782433.160000000000000000\"\n}\n]\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the total rewards accrued by each validator.  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/distribution/v1beta1/delegators/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh/rewards\n</code></pre> Response Example: <pre><code>{\n\"rewards\": [\n{\n\"validator_address\": \"stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\",\n\"reward\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"470444828785397799437.412000000000000000\"\n}\n]\n}\n],\n\"total\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"470444828785397799437.412000000000000000\"\n}\n]\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the total rewards accrued by a delegation  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/distribution/v1beta1/delegators/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh/rewards/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n</code></pre>  Response Example: <pre><code>{\n\"rewards\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"513182961214751918939.940000000000000000\"\n}\n]\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/delegators/{delegator_address}/validators</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the validators of a delegator  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/distribution/v1beta1/delegators/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh/validators\n</code></pre>  Response Example: <pre><code>{\n\"validators\": [\n\"stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\"\n]\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries withdraw address of a delegator  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/distribution/delegators/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh/withdraw_address\n</code></pre>  Response Example: <pre><code>{\n\"height\": \"1430\",\n\"result\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/validators/{validator_address}/commission</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries accumulated commission for a validator.  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/distribution/v1beta1/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu/commission\n</code></pre> Response Example: <pre><code>{\n\"commission\": {\n\"commission\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"61811505831634070383.438000000000000000\"\n}\n]\n}\n}\n</code></pre> <code>GET /distribution/validators/{validatorAddr}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries validator distribution information  Request Example: <pre><code>https://rest-tropos.thestratos.org/distribution/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n</code></pre> Response Example: <pre><code>{\n\"height\": \"1544\",\n\"result\": {\n\"operator_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"self_bond_rewards\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"589121578147958674973.028000000000000000\"\n}\n],\n\"val_commission\": {\n\"commission\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"65457953127550963885.892000000000000000\"\n}\n]\n}\n}\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries outstanding rewards of a validator address      Alias: /distribution/validators/{validatorAddr}/outstanding_rewards  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/distribution/v1beta1/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu/outstanding_rewards\nor\nhttps://rest-tropos.thestratos.org/distribution/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu/outstanding_rewards\n</code></pre> Response Example: <pre><code>{\n\"rewards\": {\n\"rewards\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"664331752904189049948.100000000000000000\"\n}\n]\n}\n}\n</code></pre> <code>GET /distribution/validators/{validator_address}/rewards</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the total rewards of a single validator  Request Example: <pre><code>https://rest-tropos.thestratos.org/distribution/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu/rewards\n</code></pre> Response Example: <pre><code>{\"height\":\"1578\",\"result\":[\n{\n\"denom\": \"wei\",\n\"amount\": \"602096285784320679462.390000000000000000\"\n}\n]}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries params of the distribution module      Alias: /distribution/parameters  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/distribution/v1beta1/params\nor \nhttps://rest-tropos.thestratos.org/distribution/parameters\n</code></pre> Response Example: <pre><code>{\n\"params\": {\n\"community_tax\": \"0.020000000000000000\",\n\"base_proposer_reward\": \"0.010000000000000000\",\n\"bonus_proposer_reward\": \"0.040000000000000000\",\n\"withdraw_addr_enabled\": true\n}\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/validators/{validator_address}/slashes</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries slash events of a validator  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/distribution/v1beta1/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu/slashes\n</code></pre> Response Example: <pre><code>{\n\"slashes\": [\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"0\"\n}\n}\n</code></pre>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#gov","title":"Gov","text":"<code>GET /gov/proposals</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all proposals information   Request Example: <pre><code>https://rest-tropos.thestratos.org/gov/proposals\n</code></pre> Response Example: <pre><code>{\n\"height\": \"6224\",\n\"result\": [\n{\n\"id\": \"1\",\n\"content\": {\n\"type\": \"cosmos-sdk/ParameterChangeProposal\",\n\"value\": {\n\"title\": \"Parameter changes for validator downtime\",\n\"description\": \"If passed, this governance proposal will do two things:\\n\\n1. Increase the slashing penalty for downtime from 0.01% to 0.50%\\n2. Decrease the window \\n\\nIf this proposal passes, validators must sign at least 5% of 5,000 blocks, which is 250 blocks. That means that a validator that misses 4,750 consecutive blocks will be considered by the system to have committed a liveness violation, where previously 9,500 consecutive blocks would need to have been missed to violate these system rules. Assuming 7s block times, validators offline for approximately 9.25 consecutive hours (instead of ~18.5 hours) will be slashed 0.5% (instead of 0.01%).\",\n\"changes\": [\n{\n\"subspace\": \"slashing\",\n\"key\": \"SlashFractionDowntime\",\n\"value\": \"\\\"0.005000000000000000\\\"\"\n},\n{\n\"subspace\": \"slashing\",\n\"key\": \"SignedBlocksWindow\",\n\"value\": \"\\\"5000\\\"\"\n}\n]\n}\n},\n\"status\": 2,\n\"final_tally_result\": {\n\"yes\": \"0\",\n\"abstain\": \"0\",\n\"no\": \"0\",\n\"no_with_veto\": \"0\"\n},\n\"submit_time\": \"2022-07-19T23:37:29.577871179Z\",\n\"deposit_end_time\": \"2022-07-21T23:37:29.577871179Z\",\n\"total_deposit\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"100000000000\"\n}\n],\n\"voting_start_time\": \"2022-07-19T23:37:29.577871179Z\",\n\"voting_end_time\": \"2022-07-21T23:37:29.577871179Z\"\n},\n{\n\"id\": \"2\",\n\"content\": {\n\"type\": \"cosmos-sdk/ParameterChangeProposal\",\n\"value\": {\n\"title\": \"Param-Change\",\n\"description\": \"This is a test to update deposit params in gov Module\",\n\"changes\": [\n{\n\"subspace\": \"gov\",\n\"key\": \"depositparams\",\n\"value\": \"{\\\"max_deposit_period\\\":\\\"72800000000000\\\"}\"\n}\n]\n}\n},\n\"status\": 2,\n\"final_tally_result\": {\n\"yes\": \"0\",\n\"abstain\": \"0\",\n\"no\": \"0\",\n\"no_with_veto\": \"0\"\n},\n\"submit_time\": \"2022-07-19T23:40:40.359241471Z\",\n\"deposit_end_time\": \"2022-07-21T23:40:40.359241471Z\",\n\"total_deposit\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"1000000000000\"\n}\n],\n\"voting_start_time\": \"2022-07-19T23:40:40.359241471Z\",\n\"voting_end_time\": \"2022-07-21T23:40:40.359241471Z\"\n}\n]\n}\n</code></pre> <code>GET /gov/proposals?{params}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries proposals information with parameters  Parameters: <pre><code>+ voter               voter address\n+ depositor           depositor addressvoter address\n+ proposal_status     status of the proposals\n</code></pre>  Request Example: <pre><code>https://rest-tropos.thestratos.org/gov/proposals?status=PROPOSAL_STATUS_UNSPECIFIED\n</code></pre> Response Example: <pre><code>{\n\"height\": \"6187\",\n\"result\": [\n{\n\"id\": \"1\",\n\"content\": {\n\"type\": \"cosmos-sdk/ParameterChangeProposal\",\n\"value\": {\n\"title\": \"Parameter changes for validator downtime\",\n\"description\": \"If passed, this governance proposal will do two things:\\n\\n1. Increase the slashing penalty for downtime from 0.01% to 0.50%\\n2. Decrease the window \\n\\nIf this proposal passes, validators must sign at least 5% of 5,000 blocks, which is 250 blocks. That means that a validator that misses 4,750 consecutive blocks will be considered by the system to have committed a liveness violation, where previously 9,500 consecutive blocks would need to have been missed to violate these system rules. Assuming 7s block times, validators offline for approximately 9.25 consecutive hours (instead of ~18.5 hours) will be slashed 0.5% (instead of 0.01%).\",\n\"changes\": [\n{\n\"subspace\": \"slashing\",\n\"key\": \"SlashFractionDowntime\",\n\"value\": \"\\\"0.005000000000000000\\\"\"\n},\n{\n\"subspace\": \"slashing\",\n\"key\": \"SignedBlocksWindow\",\n\"value\": \"\\\"5000\\\"\"\n}\n]\n}\n},\n\"status\": 2,\n\"final_tally_result\": {\n\"yes\": \"0\",\n\"abstain\": \"0\",\n\"no\": \"0\",\n\"no_with_veto\": \"0\"\n},\n\"submit_time\": \"2022-07-19T23:37:29.577871179Z\",\n\"deposit_end_time\": \"2022-07-21T23:37:29.577871179Z\",\n\"total_deposit\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"100000000000\"\n}\n],\n\"voting_start_time\": \"2022-07-19T23:37:29.577871179Z\",\n\"voting_end_time\": \"2022-07-21T23:37:29.577871179Z\"\n}\n]\n}\n</code></pre> <code>GET /cosmos/gov/v1beta1/proposals/{proposal_id}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries proposal details based on ProposalID      Alias: /gov/proposals/{proposalId}  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/gov/v1beta1/proposals/2\nor\nhttps://rest-tropos.thestratos.org/gov/proposals/2\n</code></pre> Response Example: <pre><code>{\n\"proposal\": {\n\"proposal_id\": \"2\",\n\"content\": {\n\"@type\": \"/cosmos.params.v1beta1.ParameterChangeProposal\",\n\"title\": \"Param-Change\",\n\"description\": \"This is a test to update deposit params in gov Module\",\n\"changes\": [\n{\n\"subspace\": \"gov\",\n\"key\": \"depositparams\",\n\"value\": \"{\\\"max_deposit_period\\\":\\\"72800000000000\\\"}\"\n}\n]\n},\n\"status\": \"PROPOSAL_STATUS_VOTING_PERIOD\",\n\"final_tally_result\": {\n\"yes\": \"0\",\n\"abstain\": \"0\",\n\"no\": \"0\",\n\"no_with_veto\": \"0\"\n},\n\"submit_time\": \"2022-07-19T23:40:40.359241471Z\",\n\"deposit_end_time\": \"2022-07-21T23:40:40.359241471Z\",\n\"total_deposit\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"1000000000000\"\n}\n],\n\"voting_start_time\": \"2022-07-19T23:40:40.359241471Z\",\n\"voting_end_time\": \"2022-07-21T23:40:40.359241471Z\"\n}\n}\n</code></pre> <code>GET /gov/proposals/{proposalId}/proposer</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries for the proposer for a proposal  Request Example: <pre><code>https://rest-tropos.thestratos.org/gov/proposals/1/proposer\n</code></pre> Response Example: <pre><code>{\n\"height\": \"0\",\n\"result\": {\n\"proposal_id\": \"1\",\n\"proposer\": \"st1v33vxhmu9kp9yrncfldvt0zg9qlcepc75lyggk\"\n}\n}\n</code></pre> <code>GET /cosmos/gov/v1beta1/params/{params_type}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all parameters of the gov module  Request Example:  <pre><code>+ params_type      params_type defines which parameters to query for, can be one of \"voting\", \"tallying\" or \"deposit\".\n</code></pre> <pre><code>https://rest-tropos.thestratos.org/cosmos/gov/v1beta1/params/deposit\n</code></pre> Response Example: <pre><code>{\n\"voting_params\": {\n\"voting_period\": \"0s\"\n},\n\"deposit_params\": {\n\"min_deposit\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"10000000000\"\n}\n],\n\"max_deposit_period\": \"172800s\"\n},\n\"tally_params\": {\n\"quorum\": \"0.000000000000000000\",\n\"threshold\": \"0.000000000000000000\",\n\"veto_threshold\": \"0.000000000000000000\"\n}\n}\n</code></pre> <code>GET /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all deposits of a single proposal      Alias: /gov/proposals/{proposalId}/deposits  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/gov/v1beta1/proposals/2/deposits\nor\nhttps://rest-tropos.thestratos.org/gov/proposals/2/deposits\n</code></pre> Response Example: <pre><code>{\n\"deposits\": [\n{\n\"proposal_id\": \"2\",\n\"depositor\": \"st1v33vxhmu9kp9yrncfldvt0zg9qlcepc75lyggk\",\n\"amount\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"1000000000000\"\n}\n]\n}\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"1\"\n}\n}\n</code></pre> <code>GET /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries single deposit information based proposalID, depositAddr      Alias: /gov/proposals/{proposalId}/deposits/{depositor}  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/gov/v1beta1/proposals/2/deposits/st1v33vxhmu9kp9yrncfldvt0zg9qlcepc75lyggk\nor\nhttps://rest-tropos.thestratos.org/gov/proposals/2/deposits/st1v33vxhmu9kp9yrncfldvt0zg9qlcepc75lyggk\n</code></pre> Response Example: <pre><code>{\n\"deposit\": {\n\"proposal_id\": \"2\",\n\"depositor\": \"st1v33vxhmu9kp9yrncfldvt0zg9qlcepc75lyggk\",\n\"amount\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"1000000000000\"\n}\n]\n}\n}\n</code></pre> <code>GET /cosmos/gov/v1beta1/proposals/{proposal_id}/votes</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries votes of a given proposal      Alias: /gov/proposals/{proposalId}/votes  Request Example: <pre><code>https://rest-tropos.thestratos.org/gov/proposals/1/votes\nor\nhttps://rest-tropos.thestratos.org/gov/proposals/1/votes\n</code></pre> Response Example: <pre><code>{\n\"height\": \"0\",\n\"result\": [\n{\n\"proposal_id\": \"1\",\n\"voter\": \"st1fw6tcpku363yz6le7569wzzg84val68e9eayq7\",\n\"option\": 1,\n\"options\": [\n{\n\"option\": 1,\n\"weight\": \"1.000000000000000000\"\n}\n]\n},\n{\n\"proposal_id\": \"1\",\n\"voter\": \"st1v33vxhmu9kp9yrncfldvt0zg9qlcepc75lyggk\",\n\"option\": 1,\n\"options\": [\n{\n\"option\": 1,\n\"weight\": \"1.000000000000000000\"\n}\n]\n}\n]\n}\n</code></pre> <code>GET /cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries voted information based on proposalID, voterAddr      Alias: /gov/proposals/{proposalId}/votes/{voter}  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/gov/v1beta1/proposals/1/votes/st1v33vxhmu9kp9yrncfldvt0zg9qlcepc75lyggk\nor\nhttps://rest-tropos.thestratos.org/gov/proposals/1/votes/st1v33vxhmu9kp9yrncfldvt0zg9qlcepc75lyggk\n</code></pre> Response Example: <pre><code>{\n\"vote\": {\n\"proposal_id\": \"1\",\n\"voter\": \"st1v33vxhmu9kp9yrncfldvt0zg9qlcepc75lyggk\",\n\"option\": \"VOTE_OPTION_YES\",\n\"options\": [\n{\n\"option\": \"VOTE_OPTION_YES\",\n\"weight\": \"1.000000000000000000\"\n}\n]\n}\n}\n</code></pre> <code>GET /cosmos/gov/v1beta1/proposals/{proposal_id}/tally</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the tally of a proposal vote       Alias: /gov/proposals/{proposalId}/tally  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/gov/v1beta1/proposals/1/tally\nor\nhttps://rest-tropos.thestratos.org/gov/proposals/1/tally\n</code></pre> Response Example: <pre><code>{\n\"tally\": {\n\"yes\": \"500000000900\",\n\"abstain\": \"0\",\n\"no\": \"0\",\n\"no_with_veto\": \"0\"\n}\n}\n</code></pre> <code>GET /gov/parameters/deposit</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries gov deposit parameters  Request Example: <pre><code>https://rest-tropos.thestratos.org/gov/parameters/deposit\n</code></pre> Response Example: <pre><code>{\n\"height\": \"6625\",\n\"result\": {\n\"min_deposit\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"10000000000\"\n}\n],\n\"max_deposit_period\": \"172800000000000\"\n}\n}\n</code></pre> <code>GET /gov/parameters/tallying</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries governance tally parameters  Request Example: <pre><code>https://rest-tropos.thestratos.org/gov/parameters/tallying\n</code></pre> Response Example: <pre><code>{\n\"height\": \"6629\",\n\"result\": {\n\"quorum\": \"0.334000000000000000\",\n\"threshold\": \"0.500000000000000000\",\n\"veto_threshold\": \"0.334000000000000000\"\n}\n}\n</code></pre> <code>GET /gov/parameters/voting</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries governance voting parameters  Request Example: <pre><code>https://rest-tropos.thestratos.org/gov/parameters/voting\n</code></pre> Response Example: <pre><code>{\n\"height\": \"6635\",\n\"result\": {\n\"voting_period\": \"172800000000000\"\n}\n}\n</code></pre>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#mint","title":"Mint","text":"<code>GET /cosmos/mint/v1beta1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries mint module parameters      Alias: /minting/parameters  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/mint/v1beta1/params\nor \nhttps://rest-tropos.thestratos.org/minting/parameters\n</code></pre> Response Example: <pre><code>{\n\"params\": {\n\"mint_denom\": \"wei\",\n\"inflation_rate_change\": \"0.130000000000000000\",\n\"inflation_max\": \"0.200000000000000000\",\n\"inflation_min\": \"0.070000000000000000\",\n\"goal_bonded\": \"0.670000000000000000\",\n\"blocks_per_year\": \"6311520\"\n}\n}\n</code></pre> <code>GET /cosmos/mint/v1beta1/inflation</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries current minting inflation value      Alias: /minting/inflation      Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/mint/v1beta1/inflation\n or\nhttps://rest-tropos.thestratos.org/minting/inflation\n</code></pre> Response Example: <pre><code>{\n\"inflation\": \"0.130016465508894587\"\n}\n</code></pre> <code>GET /cosmos/mint/v1beta1/annual_provisions</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries current minting annual provisions value      Alias: /minting/annual-provisions Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/mint/v1beta1/annual_provisions\nor \nhttps://rest-tropos.thestratos.org/minting/annual-provisions\n</code></pre> Response Example: <pre><code>{\n\"annual_provisions\": \"130019024060848.545708142618272810\"\n}\n</code></pre>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#slashing","title":"Slashing","text":"<code>GET /cosmos/slashing/v1beta1/signing_infos</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries signing info of all validators      Alias: /slashing/signing_infos Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/slashing/v1beta1/signing_infos\nor \nhttps://rest-tropos.thestratos.org/slashing/signing_infos\n</code></pre> Response Example: <pre><code>{\n\"info\": [\n{\n\"address\": \"stvalcons1rzn3d8qmgf7ejsfn77eag5zwjfufmvmu7sn802\",\n\"start_height\": \"0\",\n\"index_offset\": \"2986\",\n\"jailed_until\": \"1970-01-01T00:00:00Z\",\n\"tombstoned\": false,\n\"missed_blocks_counter\": \"0\"\n}\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"1\"\n}\n}\n</code></pre> <code>GET /cosmos/slashing/v1beta1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the current slashing parameters      Alias: /slashing/parameters  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/slashing/v1beta1/params\nor\nhttps://rest-tropos.thestratos.org/slashing/parameters\n</code></pre> Response Example: <pre><code>{\n\"params\": {\n\"signed_blocks_window\": \"100\",\n\"min_signed_per_window\": \"0.500000000000000000\",\n\"downtime_jail_duration\": \"600s\",\n\"slash_fraction_double_sign\": \"0.050000000000000000\",\n\"slash_fraction_downtime\": \"0.010000000000000000\"\n}\n}\n</code></pre> <code>GET /cosmos/slashing/v1beta1/signing_infos/{cons_address}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the signing info of given cons address  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/slashing/v1beta1/signing_infos/stvalcons1rzn3d8qmgf7ejsfn77eag5zwjfufmvmu7sn802\n</code></pre> Response Example: <pre><code>{\n\"val_signing_info\": {\n\"address\": \"stvalcons1rzn3d8qmgf7ejsfn77eag5zwjfufmvmu7sn802\",\n\"start_height\": \"0\",\n\"index_offset\": \"3004\",\n\"jailed_until\": \"1970-01-01T00:00:00Z\",\n\"tombstoned\": false,\n\"missed_blocks_counter\": \"0\"\n}\n}\n</code></pre>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#staking","title":"Staking","text":"<code>GET /cosmos/staking/v1beta1/delegations/{delegator_addr}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all delegations of a given delegator address      Alias: /staking/delegators/{delegatorAddr}/delegations  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/delegations/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\nor\nhttps://rest-tropos.thestratos.org/staking/delegators/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh/delegations\n</code></pre> Response Example: <pre><code>{\n\"delegation_responses\": [\n{\n\"delegation\": {\n\"delegator_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"validator_address\": \"stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\",\n\"shares\": \"500000000000.000000000000000000\"\n},\n\"balance\": {\n\"denom\": \"wei\",\n\"amount\": \"500000000000\"\n}\n}\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"1\"\n}\n}\n</code></pre> <code>GET /staking/delegators/{delegatorAddr}/delegations/{validatorAddr}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries current delegation between a delegator and a validator  Request Example: <pre><code>https://rest-tropos.thestratos.org/staking/delegators/st1fw6tcpku363yz6le7569wzzg84val68e9eayq7/delegations/stvaloper1v33vxhmu9kp9yrncfldvt0zg9qlcepc7rndg5a\n</code></pre> Response Example: <pre><code>{\n\"height\": \"3060\",\n\"result\": {\n\"delegation\": {\n\"delegator_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"validator_address\": \"stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\",\n\"shares\": \"500000000000.000000000000000000\"\n},\n\"balance\": {\n\"denom\": \"wei\",\n\"amount\": \"500000000000\"\n}\n}\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries redelegations of given address.  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/delegators/st1fw6tcpku363yz6le7569wzzg84val68e9eayq7/redelegations\n</code></pre> Response Example: <pre><code>{\n\"redelegation_responses\": [\n{\n\"redelegation\": {\n\"delegator_address\": \"string\",\n\"validator_src_address\": \"string\",\n\"validator_dst_address\": \"string\",\n\"entries\": [\n{\n\"creation_height\": \"string\",\n\"completion_time\": \"2022-07-19T19:56:04.456Z\",\n\"initial_balance\": \"string\",\n\"shares_dst\": \"string\"\n}\n]\n},\n\"entries\": [\n{\n\"redelegation_entry\": {\n\"creation_height\": \"string\",\n\"completion_time\": \"2022-07-19T19:56:04.456Z\",\n\"initial_balance\": \"string\",\n\"shares_dst\": \"string\"\n},\n\"balance\": \"string\"\n}\n]\n}\n],\n\"pagination\": {\n\"next_key\": \"string\",\n\"total\": \"string\"\n}\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all unbonding delegations of a given delegator address      Alias:  /staking/delegators/{delegatorAddr}/unbonding_delegations   Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/delegators/st1fw6tcpku363yz6le7569wzzg84val68e9eayq7/unbonding_delegations\nor\nhttps://rest-tropos.thestratos.org/staking/delegators/st1fw6tcpku363yz6le7569wzzg84val68e9eayq7/unbonding_delegations\n</code></pre> Response Example: <pre><code>{\n\"unbonding_responses\": [\n{\n\"delegator_address\": \"string\",\n\"validator_address\": \"string\",\n\"entries\": [\n{\n\"creation_height\": \"string\",\n\"completion_time\": \"2022-07-19T19:59:10.339Z\",\n\"initial_balance\": \"string\",\n\"balance\": \"string\"\n}\n]\n}\n],\n\"pagination\": {\n\"next_key\": \"string\",\n\"total\": \"string\"\n}\n}\n</code></pre> <code>GET /staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all unbonding delegations between a delegator and a validator  Request Example: <pre><code>https://rest-tropos.thestratos.org/staking/delegators/st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh/unbonding_delegations/stvaloper12adksjsd7gcsn23h5jmvdygzx2lfw5q4pyf57u\n</code></pre> Response Example: <pre><code>{\n\"height\": \"2742\",\n\"result\": {\n\"delegator_address\": \"st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh\",\n\"validator_address\": \"stvaloper12adksjsd7gcsn23h5jmvdygzx2lfw5q4pyf57u\",\n\"entries\": [\n{\n\"creation_height\": \"2739\",\n\"completion_time\": \"2021-09-03T00:26:44.825391686Z\",\n\"initial_balance\": \"10000\",\n\"balance\": \"10000\"\n}\n]\n}\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all validators info for given delegator address.      Alias: /staking/delegators/{delegatorAddr}/validators Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/delegators/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh/validators\nor\nhttps://rest-tropos.thestratos.org/staking/delegators/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh/validators\n</code></pre> Response Example: <pre><code>{\n\"validators\": [\n{\n\"operator_address\": \"stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\",\n\"consensus_pubkey\": {\n\"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n\"key\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n},\n\"jailed\": false,\n\"status\": \"BOND_STATUS_BONDED\",\n\"tokens\": \"500000000000\",\n\"delegator_shares\": \"500000000000.000000000000000000\",\n\"description\": {\n\"moniker\": \"node\",\n\"identity\": \"\",\n\"website\": \"\",\n\"security_contact\": \"\",\n\"details\": \"\"\n},\n\"unbonding_height\": \"0\",\n\"unbonding_time\": \"1970-01-01T00:00:00Z\",\n\"commission\": {\n\"commission_rates\": {\n\"rate\": \"0.100000000000000000\",\n\"max_rate\": \"0.200000000000000000\",\n\"max_change_rate\": \"0.010000000000000000\"\n},\n\"update_time\": \"2023-01-09T17:08:58.489050300Z\"\n},\n\"min_self_delegation\": \"1\"\n}\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"1\"\n}\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries validator info for given delegator validator pair.      Alias: /staking/delegators/{delegatorAddr}/validators/{validatorAddr} Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/delegators/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\nor\nhttps://rest-tropos.thestratos.org/staking/delegators/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n</code></pre>  Response Example: <pre><code>{\n\"height\": \"3158\",\n\"result\": {\n\"operator_address\": \"stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\",\n\"consensus_pubkey\": {\n\"type\": \"tendermint/PubKeyEd25519\",\n\"value\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n},\n\"status\": 3,\n\"tokens\": \"500000000000\",\n\"delegator_shares\": \"500000000000.000000000000000000\",\n\"description\": {\n\"moniker\": \"node\"\n},\n\"unbonding_time\": \"1970-01-01T00:00:00Z\",\n\"commission\": {\n\"commission_rates\": {\n\"rate\": \"0.100000000000000000\",\n\"max_rate\": \"0.200000000000000000\",\n\"max_change_rate\": \"0.010000000000000000\"\n},\n\"update_time\": \"2023-01-09T17:08:58.4890503Z\"\n},\n\"min_self_delegation\": \"1\"\n}\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/validators</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all validator candidates      Alias: /staking/validators  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/validators\nor\nhttps://rest-tropos.thestratos.org/staking/validators\n</code></pre>   |:warning: By default it returns only the bonded validators| |:------------------------------------|  Response Example: <pre><code>{\n\"validators\": [\n{\n\"operator_address\": \"stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\",\n\"consensus_pubkey\": {\n\"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n\"key\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n},\n\"jailed\": false,\n\"status\": \"BOND_STATUS_BONDED\",\n\"tokens\": \"500000000000\",\n\"delegator_shares\": \"500000000000.000000000000000000\",\n\"description\": {\n\"moniker\": \"node\",\n\"identity\": \"\",\n\"website\": \"\",\n\"security_contact\": \"\",\n\"details\": \"\"\n},\n\"unbonding_height\": \"0\",\n\"unbonding_time\": \"1970-01-01T00:00:00Z\",\n\"commission\": {\n\"commission_rates\": {\n\"rate\": \"0.100000000000000000\",\n\"max_rate\": \"0.200000000000000000\",\n\"max_change_rate\": \"0.010000000000000000\"\n},\n\"update_time\": \"2023-01-09T17:08:58.489050300Z\"\n},\n\"min_self_delegation\": \"1\"\n}\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"1\"\n}\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/validators/{validator_addr}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries validator info for given validator address      Alias: /staking/validators/{validatorAddr}  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\nor\nhttps://rest-tropos.thestratos.org/staking/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n</code></pre> Response Example: <pre><code>{\n\"validator\": {\n\"operator_address\": \"stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\",\n\"consensus_pubkey\": {\n\"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n\"key\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n},\n\"jailed\": false,\n\"status\": \"BOND_STATUS_BONDED\",\n\"tokens\": \"500000000000\",\n\"delegator_shares\": \"500000000000.000000000000000000\",\n\"description\": {\n\"moniker\": \"node\",\n\"identity\": \"\",\n\"website\": \"\",\n\"security_contact\": \"\",\n\"details\": \"\"\n},\n\"unbonding_height\": \"0\",\n\"unbonding_time\": \"1970-01-01T00:00:00Z\",\n\"commission\": {\n\"commission_rates\": {\n\"rate\": \"0.100000000000000000\",\n\"max_rate\": \"0.200000000000000000\",\n\"max_change_rate\": \"0.010000000000000000\"\n},\n\"update_time\": \"2023-01-09T17:08:58.489050300Z\"\n},\n\"min_self_delegation\": \"1\"\n}\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/validators/{validator_addr}/delegations</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries delegate info for given validator      Alias: /staking/validators/{validatorAddr}/delegations Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu/delegations\nor\nhttps://rest-tropos.thestratos.org/staking/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu/delegations\n</code></pre> Response Example: <pre><code>{\n\"delegation_responses\": [\n{\n\"delegation\": {\n\"delegator_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"validator_address\": \"stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\",\n\"shares\": \"500000000000.000000000000000000\"\n},\n\"balance\": {\n\"denom\": \"wei\",\n\"amount\": \"500000000000\"\n}\n}\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"1\"\n}\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries delegate info for given validator delegator pair  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu/delegations/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n</code></pre> Response Example: <pre><code>{\n\"delegation_response\": {\n\"delegation\": {\n\"delegator_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"validator_address\": \"stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\",\n\"shares\": \"500000000000.000000000000000000\"\n},\n\"balance\": {\n\"denom\": \"wei\",\n\"amount\": \"500000000000\"\n}\n}\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries unbonding info for given validator delegator pair  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/validators/stvaloper1v33vxhmu9kp9yrncfldvt0zg9qlcepc7rndg5a/delegations/st1fw6tcpku363yz6le7569wzzg84val68e9eayq7/unbonding_delegation\n</code></pre> Response Example: <pre><code>{\n\"unbond\": {\n\"delegator_address\": \"st1fw6tcpku363yz6le7569wzzg84val68e9eayq7\",\n\"validator_address\": \"stvaloper1v33vxhmu9kp9yrncfldvt0zg9qlcepc7rndg5a\",\n\"entries\": [\n{\n\"creation_height\": \"4336\",\n\"completion_time\": \"2022-08-09T21:02:38.208383315Z\",\n\"initial_balance\": \"100\",\n\"balance\": \"100\"\n}\n]\n}\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries unbonding delegations of a validator.      Alias: /staking/validators/{validatorAddr}/unbonding_delegations Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/validators/stvaloper1v33vxhmu9kp9yrncfldvt0zg9qlcepc7rndg5a/unbonding_delegations\nor\nhttps://rest-tropos.thestratos.org/staking/validators/stvaloper1v33vxhmu9kp9yrncfldvt0zg9qlcepc7rndg5a/unbonding_delegations\n</code></pre> Response Example: <pre><code>{\n\"unbonding_responses\": [\n{\n\"delegator_address\": \"st1fw6tcpku363yz6le7569wzzg84val68e9eayq7\",\n\"validator_address\": \"stvaloper1v33vxhmu9kp9yrncfldvt0zg9qlcepc7rndg5a\",\n\"entries\": [\n{\n\"creation_height\": \"4336\",\n\"completion_time\": \"2022-08-09T21:02:38.208383315Z\",\n\"initial_balance\": \"100\",\n\"balance\": \"100\"\n}\n]\n}\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"1\"\n}\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/pool</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the current state of the staking pool      Alias: /staking/pool Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/pool\nor\nhttps://rest-tropos.thestratos.org/staking/pool\n</code></pre> Response Example: <pre><code>{\n\"height\": \"3295\",\n\"result\": {\n\"not_bonded_tokens\": \"0\",\n\"bonded_tokens\": \"500000000000\"\n}\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the current staking parameter values      Alias: /staking/parameters Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/params\nor\nhttps://rest-tropos.thestratos.org/staking/parameters\n</code></pre> Response Example: <pre><code>{\n\"height\": \"3306\",\n\"result\": {\n\"unbonding_time\": \"1814400000000000\",\n\"max_validators\": 100,\n\"max_entries\": 7,\n\"historical_entries\": 10000,\n\"bond_denom\": \"wei\"\n}\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/historical_info/{height}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the historical info for given height  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/staking/v1beta1/historical_info/3306\n</code></pre> Response Example: <pre><code>{\n\"hist\": {\n\"header\": {\n\"version\": {\n\"block\": \"11\",\n\"app\": \"0\"\n},\n\"chain_id\": \"test-chain\",\n\"height\": \"3306\",\n\"time\": \"2023-01-11T16:52:59.055776222Z\",\n\"last_block_id\": {\n\"hash\": \"m9Oo8OpUP0fhPJdidZlFKtAPlQhwSgEfiYKrEkqvUF8=\",\n\"part_set_header\": {\n\"total\": 1,\n\"hash\": \"pUakkavHHERRXfzunIB4hyPB2wPl9DeTqmgunmTsmXY=\"\n}\n},\n\"last_commit_hash\": \"x7G3rcph4rtTJDmXOn/hdHwnq6jb3dLV9thcS2zv8fc=\",\n\"data_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n\"validators_hash\": \"UjS9kaOnUeBVw1h2V43kpGYxGoDVQLWYha9o721NVt4=\",\n\"next_validators_hash\": \"UjS9kaOnUeBVw1h2V43kpGYxGoDVQLWYha9o721NVt4=\",\n\"consensus_hash\": \"BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=\",\n\"app_hash\": \"I769v0BCHX/DgctOF5/Y+mnM8m+ia11goQXvUM2uto8=\",\n\"last_results_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n\"evidence_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n\"proposer_address\": \"GKcWnBtCfZlBM/ez1FBOknids3w=\"\n},\n\"valset\": [\n{\n\"operator_address\": \"stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\",\n\"consensus_pubkey\": {\n\"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n\"key\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n},\n\"jailed\": false,\n\"status\": \"BOND_STATUS_BONDED\",\n\"tokens\": \"500000000000\",\n\"delegator_shares\": \"500000000000.000000000000000000\",\n\"description\": {\n\"moniker\": \"node\",\n\"identity\": \"\",\n\"website\": \"\",\n\"security_contact\": \"\",\n\"details\": \"\"\n},\n\"unbonding_height\": \"0\",\n\"unbonding_time\": \"1970-01-01T00:00:00Z\",\n\"commission\": {\n\"commission_rates\": {\n\"rate\": \"0.100000000000000000\",\n\"max_rate\": \"0.200000000000000000\",\n\"max_change_rate\": \"0.010000000000000000\"\n},\n\"update_time\": \"2023-01-09T17:08:58.489050300Z\"\n},\n\"min_self_delegation\": \"1\"\n}\n]\n}\n}\n</code></pre>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#service","title":"Service","text":"<code>GET /cosmos/base/tendermint/v1beta1/blocks/latest</code> \u00a0\u00a0\u00a0\u00a0\u00a0 returns the latest block  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/base/tendermint/v1beta1/blocks/latest\n</code></pre> Response Example: <pre><code>{\n\"block_id\": {\n\"hash\": \"sMqrEks0H7oR/8svEPNfQNDs/ohLHMRF63VOd5nUCIo=\",\n\"part_set_header\": {\n\"total\": 1,\n\"hash\": \"KAPRCqsANSLnnJy5SplBnGtP3c1xPZ+IUe0k2pUU8aE=\"\n}\n},\n\"block\": {\n\"header\": {\n\"version\": {\n\"block\": \"11\",\n\"app\": \"0\"\n},\n\"chain_id\": \"test-chain\",\n\"height\": \"3342\",\n\"time\": \"2023-01-11T16:55:59.811290254Z\",\n\"last_block_id\": {\n\"hash\": \"FdTnVbBsS5nnK66URj5Lv6v6/889XdJTyShJC6eREvY=\",\n\"part_set_header\": {\n\"total\": 1,\n\"hash\": \"ucD3c65YyXhsqe21apRAs9R4Ytw3TBM42yVNV1hohKg=\"\n}\n},\n\"last_commit_hash\": \"/oU+N+xWq/0a1vHz9hte2BlMGn33LQcJAdNWaYOaX1s=\",\n\"data_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n\"validators_hash\": \"UjS9kaOnUeBVw1h2V43kpGYxGoDVQLWYha9o721NVt4=\",\n\"next_validators_hash\": \"UjS9kaOnUeBVw1h2V43kpGYxGoDVQLWYha9o721NVt4=\",\n\"consensus_hash\": \"BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=\",\n\"app_hash\": \"Pgf0fbYlN8UPoOOI5c0qQZCuuL3Q32NV8swM+OJnvLo=\",\n\"last_results_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n\"evidence_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n\"proposer_address\": \"GKcWnBtCfZlBM/ez1FBOknids3w=\"\n},\n\"data\": {\n\"txs\": []\n},\n\"evidence\": {\n\"evidence\": []\n},\n\"last_commit\": {\n\"height\": \"3341\",\n\"round\": 0,\n\"block_id\": {\n\"hash\": \"FdTnVbBsS5nnK66URj5Lv6v6/889XdJTyShJC6eREvY=\",\n\"part_set_header\": {\n\"total\": 1,\n\"hash\": \"ucD3c65YyXhsqe21apRAs9R4Ytw3TBM42yVNV1hohKg=\"\n}\n},\n\"signatures\": [\n{\n\"block_id_flag\": \"BLOCK_ID_FLAG_COMMIT\",\n\"validator_address\": \"GKcWnBtCfZlBM/ez1FBOknids3w=\",\n\"timestamp\": \"2023-01-11T16:55:59.811290254Z\",\n\"signature\": \"tspmnLBjoCTfUbfh1gv1/YTnCOlcJAjadfbguSFvWB+GwROVoxcPvGjxqHBiFbKvyG/yJTjr4FSauLXDvoBgAw==\"\n}\n]\n}\n}\n}\n</code></pre> <code>GET /cosmos/base/tendermint/v1beta1/blocks/{height}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries block for given height  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/base/tendermint/v1beta1/blocks/latest\n</code></pre>  Response Example: <pre><code>{\n\"block_id\": {\n\"hash\": \"v3fqwUVL/XL0rwCxmO4x96Euvy2V7ZJso8+4rqohl9o=\",\n\"part_set_header\": {\n\"total\": 1,\n\"hash\": \"t8wCFw2/VHBOHYAIO4k7MZNgUIzjBazvNjQS3R89NuM=\"\n}\n},\n\"block\": {\n\"header\": {\n\"version\": {\n\"block\": \"11\",\n\"app\": \"0\"\n},\n\"chain_id\": \"test-chain\",\n\"height\": \"3355\",\n\"time\": \"2023-01-11T16:57:05.012011668Z\",\n\"last_block_id\": {\n\"hash\": \"IdID2P6phDleoQAdMrLwzVr2DY02Omx3VnlATf4TwKI=\",\n\"part_set_header\": {\n\"total\": 1,\n\"hash\": \"D/UcqWz7vvjUZ+yBezcVNymswrPpsYNMC0YfW5veVBM=\"\n}\n},\n\"last_commit_hash\": \"//C9EwF2qjAPjGaykugAv4N4kRY3+DqiXJI/QRMtSfk=\",\n\"data_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n\"validators_hash\": \"UjS9kaOnUeBVw1h2V43kpGYxGoDVQLWYha9o721NVt4=\",\n\"next_validators_hash\": \"UjS9kaOnUeBVw1h2V43kpGYxGoDVQLWYha9o721NVt4=\",\n\"consensus_hash\": \"BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=\",\n\"app_hash\": \"vJ+axVi3DlFFnA6bPzqAaco9J3mXsObourreZUhz01M=\",\n\"last_results_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n\"evidence_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n\"proposer_address\": \"GKcWnBtCfZlBM/ez1FBOknids3w=\"\n},\n\"data\": {\n\"txs\": [\n]\n},\n\"evidence\": {\n\"evidence\": [\n]\n},\n\"last_commit\": {\n\"height\": \"3354\",\n\"round\": 0,\n\"block_id\": {\n\"hash\": \"IdID2P6phDleoQAdMrLwzVr2DY02Omx3VnlATf4TwKI=\",\n\"part_set_header\": {\n\"total\": 1,\n\"hash\": \"D/UcqWz7vvjUZ+yBezcVNymswrPpsYNMC0YfW5veVBM=\"\n}\n},\n\"signatures\": [\n{\n\"block_id_flag\": \"BLOCK_ID_FLAG_COMMIT\",\n\"validator_address\": \"GKcWnBtCfZlBM/ez1FBOknids3w=\",\n\"timestamp\": \"2023-01-11T16:57:05.012011668Z\",\n\"signature\": \"dHppKwAZFYzv19VLgmngOKq/Un2zJpZ5Fg7llx0iTNo72pbXXvSPi7BSvsqOzd4AKWTtO3XgQ6X97jxOpKd0CQ==\"\n}\n]\n}\n}\n}\n</code></pre> <code>GET /cosmos/base/tendermint/v1beta1/node_info</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the current node info  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/base/tendermint/v1beta1/node_info\n</code></pre>  Response Example: <pre><code>{\n\"default_node_info\": {\n\"protocol_version\": {\n\"p2p\": \"8\",\n\"block\": \"11\",\n\"app\": \"0\"\n},\n\"default_node_id\": \"16a0758d175cbf5c08d41dffa73eb5c0190869ed\",\n\"listen_addr\": \"tcp://0.0.0.0:26656\",\n\"network\": \"test-chain\",\n\"version\": \"0.34.21\",\n\"channels\": \"QCAhIiMwOGBhAA==\",\n\"moniker\": \"node\",\n\"other\": {\n\"tx_index\": \"on\",\n\"rpc_address\": \"tcp://127.0.0.1:26657\"\n}\n},\n\"application_version\": {\n\"name\": \"\",\n\"app_name\": \"stchaind\",\n\"version\": \"v0.8.0\",\n\"git_commit\": \"\",\n\"build_tags\": \"\",\n\"go_version\": \"go version go1.19.4 linux/amd64\",\n\"build_deps\": [\n{\n\"path\": \"filippo.io/edwards25519\",\n\"version\": \"v1.0.0-beta.2\",\n\"sum\": \"h1:/BZRNzm8N4K4eWfK28dL4yescorxtO7YG1yun8fy+pI=\"\n},\n{\n\"path\": \"github.com/99designs/keyring\",\n\"version\": \"v1.1.6\",\n\"sum\": \"\"\n},\n{\n\"path\": \"github.com/ChainSafe/go-schnorrkel\",\n\"version\": \"v0.0.0-20200405005733-88cbf1b4c40d\",\n\"sum\": \"h1:nalkkPQcITbvhmL4+C4cKA87NW0tfm3Kl9VXRoPywFg=\"\n},\n{\n\"path\": \"github.com/VictoriaMetrics/fastcache\",\n\"version\": \"v1.6.0\",\n\"sum\": \"h1:C/3Oi3EiBCqufydp1neRZkqcwmEiuRT9c3fqvvgKm5o=\"\n},\n{\n\"path\": \"github.com/Workiva/go-datastructures\",\n\"version\": \"v1.0.53\",\n\"sum\": \"h1:J6Y/52yX10Xc5JjXmGtWoSSxs3mZnGSaq37xZZh7Yig=\"\n},\n{\n\"path\": \"github.com/armon/go-metrics\",\n\"version\": \"v0.3.10\",\n\"sum\": \"h1:FR+drcQStOe+32sYyJYyZ7FIdgoGGBnwLl+flodp8Uo=\"\n},\n{\n\"path\": \"github.com/beorn7/perks\",\n\"version\": \"v1.0.1\",\n\"sum\": \"h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\"\n},\n{\n\"path\": \"github.com/bgentry/speakeasy\",\n\"version\": \"v0.1.0\",\n\"sum\": \"h1:ByYyxL9InA1OWqxJqqp2A5pYHUrCiAL6K3J+LKSsQkY=\"\n},\n{\n\"path\": \"github.com/btcsuite/btcd\",\n\"version\": \"v0.22.1\",\n\"sum\": \"h1:CnwP9LM/M9xuRrGSCGeMVs9iv09uMqwsVX7EeIpgV2c=\"\n},\n{\n\"path\": \"github.com/btcsuite/btcd/chaincfg/chainhash\",\n\"version\": \"v1.0.1\",\n\"sum\": \"h1:q0rUy8C/TYNBQS1+CGKw68tLOFYSNEs0TFnxxnS9+4U=\"\n},\n{\n\"path\": \"github.com/btcsuite/btcutil\",\n\"version\": \"v1.0.3-0.20201208143702-a53e38424cce\",\n\"sum\": \"h1:YtWJF7RHm2pYCvA5t0RPmAaLUhREsKuKd+SLhxFbFeQ=\"\n},\n{\n\"path\": \"github.com/cenkalti/backoff/v4\",\n\"version\": \"v4.1.1\",\n\"sum\": \"h1:G2HAfAmvm/GcKan2oOQpBXOd2tT2G57ZnZGWa1PxPBQ=\"\n},\n{\n\"path\": \"github.com/cespare/xxhash/v2\",\n\"version\": \"v2.1.2\",\n\"sum\": \"h1:YRXhKfTDauu4ajMg1TPgFO5jnlC2HCbmLXMcTG5cbYE=\"\n},\n{\n\"path\": \"github.com/coinbase/rosetta-sdk-go\",\n\"version\": \"v0.7.0\",\n\"sum\": \"h1:lmTO/JEpCvZgpbkOITL95rA80CPKb5CtMzLaqF2mCNg=\"\n},\n{\n\"path\": \"github.com/confio/ics23/go\",\n\"version\": \"v0.7.0\",\n\"sum\": \"\"\n},\n{\n\"path\": \"github.com/cosmos/btcutil\",\n\"version\": \"v1.0.4\",\n\"sum\": \"h1:n7C2ngKXo7UC9gNyMNLbzqz7Asuf+7Qv4gnX/rOdQ44=\"\n},\n{\n\"path\": \"github.com/cosmos/cosmos-sdk\",\n\"version\": \"v0.45.9\",\n\"sum\": \"h1:Z4s1EZL/mfM8uSSZr8WmyEbWp4hqbWVI5sAIFR432KY=\"\n},\n{\n\"path\": \"github.com/cosmos/go-bip39\",\n\"version\": \"v1.0.0\",\n\"sum\": \"h1:pcomnQdrdH22njcAatO0yWojsUnCO3y2tNoV1cb6hHY=\"\n},\n{\n\"path\": \"github.com/cosmos/iavl\",\n\"version\": \"v0.19.3\",\n\"sum\": \"h1:cESO0OwTTxQm5rmyESKW+zESheDUYI7CcZDWWDwnuxg=\"\n},\n{\n\"path\": \"github.com/cosmos/ibc-go/v3\",\n\"version\": \"v3.0.0\",\n\"sum\": \"h1:XUNplHVS51Q2gMnTFsFsH9QJ7flsovMamnltKbEgPQ4=\"\n},\n{\n\"path\": \"github.com/creachadair/taskgroup\",\n\"version\": \"v0.3.2\",\n\"sum\": \"h1:zlfutDS+5XG40AOxcHDSThxKzns8Tnr9jnr6VqkYlkM=\"\n},\n{\n\"path\": \"github.com/davecgh/go-spew\",\n\"version\": \"v1.1.1\",\n\"sum\": \"h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\"\n},\n{\n\"path\": \"github.com/deckarep/golang-set\",\n\"version\": \"v1.8.0\",\n\"sum\": \"h1:sk9/l/KqpunDwP7pSjUg0keiOOLEnOBHzykLrsPppp4=\"\n},\n{\n\"path\": \"github.com/desertbit/timer\",\n\"version\": \"v0.0.0-20180107155436-c41aec40b27f\",\n\"sum\": \"h1:U5y3Y5UE0w7amNe7Z5G/twsBW0KEalRQXZzf8ufSh9I=\"\n},\n{\n\"path\": \"github.com/dvsekhvalnov/jose2go\",\n\"version\": \"v0.0.0-20200901110807-248326c1351b\",\n\"sum\": \"h1:HBah4D48ypg3J7Np4N+HY/ZR76fx3HEUGxDU6Uk39oQ=\"\n},\n{\n\"path\": \"github.com/edsrzf/mmap-go\",\n\"version\": \"v1.0.0\",\n\"sum\": \"h1:CEBF7HpRnUCSJgGUb5h1Gm7e3VkmVDrR8lvWVLtrOFw=\"\n},\n{\n\"path\": \"github.com/ethereum/go-ethereum\",\n\"version\": \"v1.10.16\",\n\"sum\": \"h1:3oPrumn0bCW/idjcxMn5YYVCdK7VzJYIvwGZUGLEaoc=\"\n},\n{\n\"path\": \"github.com/felixge/httpsnoop\",\n\"version\": \"v1.0.1\",\n\"sum\": \"h1:lvB5Jl89CsZtGIWuTcDM1E/vkVs49/Ml7JJe07l8SPQ=\"\n},\n{\n\"path\": \"github.com/fsnotify/fsnotify\",\n\"version\": \"v1.5.4\",\n\"sum\": \"h1:jRbGcIw6P2Meqdwuo0H1p6JVLbL5DHKAKlYndzMwVZI=\"\n},\n{\n\"path\": \"github.com/gballet/go-libpcsclite\",\n\"version\": \"v0.0.0-20190607065134-2772fd86a8ff\",\n\"sum\": \"h1:tY80oXqGNY4FhTFhk+o9oFHGINQ/+vhlm8HFzi6znCI=\"\n},\n{\n\"path\": \"github.com/go-kit/kit\",\n\"version\": \"v0.12.0\",\n\"sum\": \"h1:e4o3o3IsBfAKQh5Qbbiqyfu97Ku7jrO/JbohvztANh4=\"\n},\n{\n\"path\": \"github.com/go-kit/log\",\n\"version\": \"v0.2.1\",\n\"sum\": \"h1:MRVx0/zhvdseW+Gza6N9rVzU/IVzaeE1SFI4raAhmBU=\"\n},\n{\n\"path\": \"github.com/go-logfmt/logfmt\",\n\"version\": \"v0.5.1\",\n\"sum\": \"h1:otpy5pqBCBZ1ng9RQ0dPu4PN7ba75Y/aA+UpowDyNVA=\"\n},\n{\n\"path\": \"github.com/go-stack/stack\",\n\"version\": \"v1.8.0\",\n\"sum\": \"h1:5SgMzNM5HxrEjV0ww2lTmX6E2Izsfxas4+YHWRs3Lsk=\"\n},\n{\n\"path\": \"github.com/godbus/dbus\",\n\"version\": \"v0.0.0-20190726142602-4481cbc300e2\",\n\"sum\": \"h1:ZpnhV/YsD2/4cESfV5+Hoeu/iUR3ruzNvZ+yQfO03a0=\"\n},\n{\n\"path\": \"github.com/gogo/gateway\",\n\"version\": \"v1.1.0\",\n\"sum\": \"h1:u0SuhL9+Il+UbjM9VIE3ntfRujKbvVpFvNB4HbjeVQ0=\"\n},\n{\n\"path\": \"github.com/gogo/protobuf\",\n\"version\": \"v1.3.3\",\n\"sum\": \"\"\n},\n{\n\"path\": \"github.com/golang/protobuf\",\n\"version\": \"v1.5.2\",\n\"sum\": \"h1:ROPKBNFfQgOUMifHyP+KYbvpjbdoFNs+aK7DXlji0Tw=\"\n},\n{\n\"path\": \"github.com/golang/snappy\",\n\"version\": \"v0.0.4\",\n\"sum\": \"h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\"\n},\n{\n\"path\": \"github.com/google/btree\",\n\"version\": \"v1.0.0\",\n\"sum\": \"h1:0udJVsspx3VBr5FwtLhQQtuAsVc79tTq0ocGIPAU6qo=\"\n},\n{\n\"path\": \"github.com/google/orderedcode\",\n\"version\": \"v0.0.1\",\n\"sum\": \"h1:UzfcAexk9Vhv8+9pNOgRu41f16lHq725vPwnSeiG/Us=\"\n},\n{\n\"path\": \"github.com/google/uuid\",\n\"version\": \"v1.3.0\",\n\"sum\": \"h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\"\n},\n{\n\"path\": \"github.com/gorilla/handlers\",\n\"version\": \"v1.5.1\",\n\"sum\": \"h1:9lRY6j8DEeeBT10CvO9hGW0gmky0BprnvDI5vfhUHH4=\"\n},\n{\n\"path\": \"github.com/gorilla/mux\",\n\"version\": \"v1.8.0\",\n\"sum\": \"h1:i40aqfkR1h2SlN9hojwV5ZA91wcXFOvkdNIeFDP5koI=\"\n},\n{\n\"path\": \"github.com/gorilla/websocket\",\n\"version\": \"v1.5.0\",\n\"sum\": \"h1:PPwGk2jz7EePpoHN/+ClbZu8SPxiqlu12wZP/3sWmnc=\"\n},\n{\n\"path\": \"github.com/grpc-ecosystem/go-grpc-middleware\",\n\"version\": \"v1.3.0\",\n\"sum\": \"h1:+9834+KizmvFV7pXQGSXQTsaWhq2GjuNUt0aUU0YBYw=\"\n},\n{\n\"path\": \"github.com/grpc-ecosystem/grpc-gateway\",\n\"version\": \"v1.16.0\",\n\"sum\": \"h1:gmcG1KaJ57LophUzW0Hy8NmPhnMZb4M0+kPpLofRdBo=\"\n},\n{\n\"path\": \"github.com/gsterjov/go-libsecret\",\n\"version\": \"v0.0.0-20161001094733-a6f4afe4910c\",\n\"sum\": \"h1:6rhixN/i8ZofjG1Y75iExal34USq5p+wiN1tpie8IrU=\"\n},\n{\n\"path\": \"github.com/gtank/merlin\",\n\"version\": \"v0.1.1\",\n\"sum\": \"h1:eQ90iG7K9pOhtereWsmyRJ6RAwcP4tHTDBHXNg+u5is=\"\n},\n{\n\"path\": \"github.com/gtank/ristretto255\",\n\"version\": \"v0.1.2\",\n\"sum\": \"h1:JEqUCPA1NvLq5DwYtuzigd7ss8fwbYay9fi4/5uMzcc=\"\n},\n{\n\"path\": \"github.com/hashicorp/go-immutable-radix\",\n\"version\": \"v1.3.1\",\n\"sum\": \"h1:DKHmCUm2hRBK510BaiZlwvpD40f8bJFeZnpfm2KLowc=\"\n},\n{\n\"path\": \"github.com/hashicorp/golang-lru\",\n\"version\": \"v0.5.5-0.20210104140557-80c98217689d\",\n\"sum\": \"h1:dg1dEPuWpEqDnvIw251EVy4zlP8gWbsGj4BsUKCRpYs=\"\n},\n{\n\"path\": \"github.com/hashicorp/hcl\",\n\"version\": \"v1.0.0\",\n\"sum\": \"h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\"\n},\n{\n\"path\": \"github.com/hdevalence/ed25519consensus\",\n\"version\": \"v0.0.0-20210204194344-59a8610d2b87\",\n\"sum\": \"h1:uUjLpLt6bVvZ72SQc/B4dXcPBw4Vgd7soowdRl52qEM=\"\n},\n{\n\"path\": \"github.com/holiman/bloomfilter/v2\",\n\"version\": \"v2.0.3\",\n\"sum\": \"h1:73e0e/V0tCydx14a0SCYS/EWCxgwLZ18CZcZKVu0fao=\"\n},\n{\n\"path\": \"github.com/holiman/uint256\",\n\"version\": \"v1.2.0\",\n\"sum\": \"h1:gpSYcPLWGv4sG43I2mVLiDZCNDh/EpGjSk8tmtxitHM=\"\n},\n{\n\"path\": \"github.com/huin/goupnp\",\n\"version\": \"v1.0.2\",\n\"sum\": \"h1:RfGLP+h3mvisuWEyybxNq5Eft3NWhHLPeUN72kpKZoI=\"\n},\n{\n\"path\": \"github.com/improbable-eng/grpc-web\",\n\"version\": \"v0.15.0\",\n\"sum\": \"h1:BN+7z6uNXZ1tQGcNAuaU1YjsLTApzkjt2tzCixLaUPQ=\"\n},\n{\n\"path\": \"github.com/ipfs/go-cid\",\n\"version\": \"v0.1.0\",\n\"sum\": \"h1:YN33LQulcRHjfom/i25yoOZR4Telp1Hr/2RU3d0PnC0=\"\n},\n{\n\"path\": \"github.com/jackpal/go-nat-pmp\",\n\"version\": \"v1.0.2\",\n\"sum\": \"h1:KzKSgb7qkJvOUTqYl9/Hg/me3pWgBmERKrTGD7BdWus=\"\n},\n{\n\"path\": \"github.com/klauspost/compress\",\n\"version\": \"v1.15.9\",\n\"sum\": \"h1:wKRjX6JRtDdrE9qwa4b/Cip7ACOshUI4smpCQanqjSY=\"\n},\n{\n\"path\": \"github.com/klauspost/cpuid/v2\",\n\"version\": \"v2.0.4\",\n\"sum\": \"h1:g0I61F2K2DjRHz1cnxlkNSBIaePVoJIjjnHui8QHbiw=\"\n},\n{\n\"path\": \"github.com/lib/pq\",\n\"version\": \"v1.10.6\",\n\"sum\": \"h1:jbk+ZieJ0D7EVGJYpL9QTz7/YW6UHbmdnZWYyK5cdBs=\"\n},\n{\n\"path\": \"github.com/libp2p/go-buffer-pool\",\n\"version\": \"v0.1.0\",\n\"sum\": \"h1:oK4mSFcQz7cTQIfqbe4MIj9gLW+mnanjyFtc6cdF0Y8=\"\n},\n{\n\"path\": \"github.com/magiconair/properties\",\n\"version\": \"v1.8.6\",\n\"sum\": \"h1:5ibWZ6iY0NctNGWo87LalDlEZ6R41TqbbDamhfG/Qzo=\"\n},\n{\n\"path\": \"github.com/mattn/go-colorable\",\n\"version\": \"v0.1.12\",\n\"sum\": \"h1:jF+Du6AlPIjs2BiUiQlKOX0rt3SujHxPnksPKZbaA40=\"\n},\n{\n\"path\": \"github.com/mattn/go-isatty\",\n\"version\": \"v0.0.14\",\n\"sum\": \"h1:yVuAays6BHfxijgZPzw+3Zlu5yQgKGP2/hcQbHb7S9Y=\"\n},\n{\n\"path\": \"github.com/mattn/go-runewidth\",\n\"version\": \"v0.0.9\",\n\"sum\": \"h1:Lm995f3rfxdpd6TSmuVCHVb/QhupuXlYr8sCI/QdE+0=\"\n},\n{\n\"path\": \"github.com/matttproud/golang_protobuf_extensions\",\n\"version\": \"v1.0.2-0.20181231171920-c182affec369\",\n\"sum\": \"h1:I0XW9+e1XWDxdcEniV4rQAIOPUGDq67JSCiRCgGCZLI=\"\n},\n{\n\"path\": \"github.com/mimoo/StrobeGo\",\n\"version\": \"v0.0.0-20181016162300-f8f6d4d2b643\",\n\"sum\": \"h1:hLDRPB66XQT/8+wG9WsDpiCvZf1yKO7sz7scAjSlBa0=\"\n},\n{\n\"path\": \"github.com/minio/blake2b-simd\",\n\"version\": \"v0.0.0-20160723061019-3f5f724cb5b1\",\n\"sum\": \"h1:lYpkrQH5ajf0OXOcUbGjvZxxijuBwbbmlSxLiuofa+g=\"\n},\n{\n\"path\": \"github.com/minio/highwayhash\",\n\"version\": \"v1.0.2\",\n\"sum\": \"h1:Aak5U0nElisjDCfPSG79Tgzkn2gl66NxOMspRrKnA/g=\"\n},\n{\n\"path\": \"github.com/minio/sha256-simd\",\n\"version\": \"v1.0.0\",\n\"sum\": \"h1:v1ta+49hkWZyvaKwrQB8elexRqm6Y0aMLjCNsrYxo6g=\"\n},\n{\n\"path\": \"github.com/mitchellh/mapstructure\",\n\"version\": \"v1.5.0\",\n\"sum\": \"h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\"\n},\n{\n\"path\": \"github.com/mr-tron/base58\",\n\"version\": \"v1.2.0\",\n\"sum\": \"h1:T/HDJBh4ZCPbU39/+c3rRvE0uKBQlU27+QI8LJ4t64o=\"\n},\n{\n\"path\": \"github.com/mtibben/percent\",\n\"version\": \"v0.2.1\",\n\"sum\": \"h1:5gssi8Nqo8QU/r2pynCm+hBQHpkB/uNK7BJCFogWdzs=\"\n},\n{\n\"path\": \"github.com/multiformats/go-base32\",\n\"version\": \"v0.0.3\",\n\"sum\": \"h1:tw5+NhuwaOjJCC5Pp82QuXbrmLzWg7uxlMFp8Nq/kkI=\"\n},\n{\n\"path\": \"github.com/multiformats/go-base36\",\n\"version\": \"v0.1.0\",\n\"sum\": \"h1:JR6TyF7JjGd3m6FbLU2cOxhC0Li8z8dLNGQ89tUg4F4=\"\n},\n{\n\"path\": \"github.com/multiformats/go-multibase\",\n\"version\": \"v0.0.3\",\n\"sum\": \"h1:l/B6bJDQjvQ5G52jw4QGSYeOTZoAwIO77RblWplfIqk=\"\n},\n{\n\"path\": \"github.com/multiformats/go-multihash\",\n\"version\": \"v0.0.15\",\n\"sum\": \"h1:hWOPdrNqDjwHDx82vsYGSDZNyktOJJ2dzZJzFkOV1jM=\"\n},\n{\n\"path\": \"github.com/multiformats/go-varint\",\n\"version\": \"v0.0.6\",\n\"sum\": \"h1:gk85QWKxh3TazbLxED/NlDVv8+q+ReFJk7Y2W/KhfNY=\"\n},\n{\n\"path\": \"github.com/olekukonko/tablewriter\",\n\"version\": \"v0.0.5\",\n\"sum\": \"h1:P2Ga83D34wi1o9J6Wh1mRuqd4mF/x/lgBS7N7AbDhec=\"\n},\n{\n\"path\": \"github.com/pelletier/go-toml/v2\",\n\"version\": \"v2.0.2\",\n\"sum\": \"h1:+jQXlF3scKIcSEKkdHzXhCTDLPFi5r1wnK6yPS+49Gw=\"\n},\n{\n\"path\": \"github.com/pkg/errors\",\n\"version\": \"v0.9.1\",\n\"sum\": \"h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\"\n},\n{\n\"path\": \"github.com/pmezard/go-difflib\",\n\"version\": \"v1.0.0\",\n\"sum\": \"h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\"\n},\n{\n\"path\": \"github.com/prometheus/client_golang\",\n\"version\": \"v1.12.2\",\n\"sum\": \"h1:51L9cDoUHVrXx4zWYlcLQIZ+d+VXHgqnYKkIuq4g/34=\"\n},\n{\n\"path\": \"github.com/prometheus/client_model\",\n\"version\": \"v0.2.0\",\n\"sum\": \"h1:uq5h0d+GuxiXLJLNABMgp2qUWDPiLvgCzz2dUR+/W/M=\"\n},\n{\n\"path\": \"github.com/prometheus/common\",\n\"version\": \"v0.34.0\",\n\"sum\": \"h1:RBmGO9d/FVjqHT0yUGQwBJhkwKV+wPCn7KGpvfab0uE=\"\n},\n{\n\"path\": \"github.com/prometheus/procfs\",\n\"version\": \"v0.7.3\",\n\"sum\": \"h1:4jVXhlkAyzOScmCkXBTOLRLTz8EeU+eyjrwB/EPq0VU=\"\n},\n{\n\"path\": \"github.com/prometheus/tsdb\",\n\"version\": \"v0.7.1\",\n\"sum\": \"h1:YZcsG11NqnK4czYLrWd9mpEuAJIHVQLwdrleYfszMAA=\"\n},\n{\n\"path\": \"github.com/rakyll/statik\",\n\"version\": \"v0.1.7\",\n\"sum\": \"h1:OF3QCZUuyPxuGEP7B4ypUa7sB/iHtqOTDYZXGM8KOdQ=\"\n},\n{\n\"path\": \"github.com/rcrowley/go-metrics\",\n\"version\": \"v0.0.0-20200313005456-10cdbea86bc0\",\n\"sum\": \"h1:MkV+77GLUNo5oJ0jf870itWm3D0Sjh7+Za9gazKc5LQ=\"\n},\n{\n\"path\": \"github.com/regen-network/cosmos-proto\",\n\"version\": \"v0.3.1\",\n\"sum\": \"h1:rV7iM4SSFAagvy8RiyhiACbWEGotmqzywPxOvwMdxcg=\"\n},\n{\n\"path\": \"github.com/rjeczalik/notify\",\n\"version\": \"v0.9.1\",\n\"sum\": \"h1:CLCKso/QK1snAlnhNR/CNvNiFU2saUtjV0bx3EwNeCE=\"\n},\n{\n\"path\": \"github.com/rs/cors\",\n\"version\": \"v1.8.2\",\n\"sum\": \"h1:KCooALfAYGs415Cwu5ABvv9n9509fSiG5SQJn/AQo4U=\"\n},\n{\n\"path\": \"github.com/rs/zerolog\",\n\"version\": \"v1.27.0\",\n\"sum\": \"h1:1T7qCieN22GVc8S4Q2yuexzBb1EqjbgjSH9RohbMjKs=\"\n},\n{\n\"path\": \"github.com/shirou/gopsutil\",\n\"version\": \"v3.21.4-0.20210419000835-c7a38de76ee5+incompatible\",\n\"sum\": \"h1:Bn1aCHHRnjv4Bl16T8rcaFjYSrGrIZvpiGO6P3Q4GpU=\"\n},\n{\n\"path\": \"github.com/spf13/afero\",\n\"version\": \"v1.8.2\",\n\"sum\": \"h1:xehSyVa0YnHWsJ49JFljMpg1HX19V6NDZ1fkm1Xznbo=\"\n},\n{\n\"path\": \"github.com/spf13/cast\",\n\"version\": \"v1.5.0\",\n\"sum\": \"h1:rj3WzYc11XZaIZMPKmwP96zkFEnnAmV8s6XbB2aY32w=\"\n},\n{\n\"path\": \"github.com/spf13/cobra\",\n\"version\": \"v1.5.0\",\n\"sum\": \"h1:X+jTBEBqF0bHN+9cSMgmfuvv2VHJ9ezmFNf9Y/XstYU=\"\n},\n{\n\"path\": \"github.com/spf13/jwalterweatherman\",\n\"version\": \"v1.1.0\",\n\"sum\": \"h1:ue6voC5bR5F8YxI5S67j9i582FU4Qvo2bmqnqMYADFk=\"\n},\n{\n\"path\": \"github.com/spf13/pflag\",\n\"version\": \"v1.0.5\",\n\"sum\": \"h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\"\n},\n{\n\"path\": \"github.com/spf13/viper\",\n\"version\": \"v1.12.0\",\n\"sum\": \"h1:CZ7eSOd3kZoaYDLbXnmzgQI5RlciuXBMA+18HwHRfZQ=\"\n},\n{\n\"path\": \"github.com/status-im/keycard-go\",\n\"version\": \"v0.0.0-20200402102358-957c09536969\",\n\"sum\": \"h1:Oo2KZNP70KE0+IUJSidPj/BFS/RXNHmKIJOdckzml2E=\"\n},\n{\n\"path\": \"github.com/stretchr/testify\",\n\"version\": \"v1.8.0\",\n\"sum\": \"h1:pSgiaMZlXftHpm5L7V1+rVB+AZJydKsMxsQBIJw4PKk=\"\n},\n{\n\"path\": \"github.com/subosito/gotenv\",\n\"version\": \"v1.4.0\",\n\"sum\": \"h1:yAzM1+SmVcz5R4tXGsNMu1jUl2aOJXoiWUCEwwnGrvs=\"\n},\n{\n\"path\": \"github.com/syndtr/goleveldb\",\n\"version\": \"v1.0.1-0.20210819022825-2ae1ddf74ef7\",\n\"sum\": \"h1:epCh84lMvA70Z7CTTCmYQn2CKbY8j86K7/FAIr141uY=\"\n},\n{\n\"path\": \"github.com/tendermint/btcd\",\n\"version\": \"v0.1.1\",\n\"sum\": \"h1:0VcxPfflS2zZ3RiOAHkBiFUcPvbtRj5O7zHmcJWHV7s=\"\n},\n{\n\"path\": \"github.com/tendermint/crypto\",\n\"version\": \"v0.0.0-20191022145703-50d29ede1e15\",\n\"sum\": \"h1:hqAk8riJvK4RMWx1aInLzndwxKalgi5rTqgfXxOxbEI=\"\n},\n{\n\"path\": \"github.com/tendermint/go-amino\",\n\"version\": \"v0.16.0\",\n\"sum\": \"h1:GyhmgQKvqF82e2oZeuMSp9JTN0N09emoSZlb2lyGa2E=\"\n},\n{\n\"path\": \"github.com/tendermint/tendermint\",\n\"version\": \"v0.34.21\",\n\"sum\": \"h1:UiGGnBFHVrZhoQVQ7EfwSOLuCtarqCSsRf8VrklqB7s=\"\n},\n{\n\"path\": \"github.com/tendermint/tm-db\",\n\"version\": \"v0.6.7\",\n\"sum\": \"h1:fE00Cbl0jayAoqlExN6oyQJ7fR/ZtoVOmvPJ//+shu8=\"\n},\n{\n\"path\": \"github.com/tklauser/go-sysconf\",\n\"version\": \"v0.3.5\",\n\"sum\": \"h1:uu3Xl4nkLzQfXNsWn15rPc/HQCJKObbt1dKJeWp3vU4=\"\n},\n{\n\"path\": \"github.com/tklauser/numcpus\",\n\"version\": \"v0.2.2\",\n\"sum\": \"h1:oyhllyrScuYI6g+h/zUvNXNp1wy7x8qQy3t/piefldA=\"\n},\n{\n\"path\": \"github.com/tyler-smith/go-bip39\",\n\"version\": \"v1.1.0\",\n\"sum\": \"h1:5eUemwrMargf3BSLRRCalXT93Ns6pQJIjYQN2nyfOP8=\"\n},\n{\n\"path\": \"golang.org/x/crypto\",\n\"version\": \"v0.0.0-20220525230936-793ad666bf5e\",\n\"sum\": \"h1:T8NU3HyQ8ClP4SEE+KbFlg6n0NhuTsN4MyznaarGsZM=\"\n},\n{\n\"path\": \"golang.org/x/exp\",\n\"version\": \"v0.0.0-20220722155223-a9213eeb770e\",\n\"sum\": \"h1:+WEEuIdZHnUeJJmEUjyYC2gfUMj69yZXw17EnHg/otA=\"\n},\n{\n\"path\": \"golang.org/x/net\",\n\"version\": \"v0.0.0-20220726230323-06994584191e\",\n\"sum\": \"h1:wOQNKh1uuDGRnmgF0jDxh7ctgGy/3P4rYWQRVJD4/Yg=\"\n},\n{\n\"path\": \"golang.org/x/sync\",\n\"version\": \"v0.0.0-20220722155255-886fb9371eb4\",\n\"sum\": \"h1:uVc8UZUe6tr40fFVnUP5Oj+veunVezqYl9z7DYw9xzw=\"\n},\n{\n\"path\": \"golang.org/x/sys\",\n\"version\": \"v0.0.0-20220727055044-e65921a090b8\",\n\"sum\": \"h1:dyU22nBWzrmTQxtNrr4dzVOvaw35nUYE279vF9UmsI8=\"\n},\n{\n\"path\": \"golang.org/x/term\",\n\"version\": \"v0.0.0-20220722155259-a9ba230a4035\",\n\"sum\": \"h1:Q5284mrmYTpACcm+eAKjKJH48BBwSyfJqmmGDTtT8Vc=\"\n},\n{\n\"path\": \"golang.org/x/text\",\n\"version\": \"v0.3.7\",\n\"sum\": \"h1:olpwvP2KacW1ZWvsR7uQhoyTYvKAupfQrRGBFM352Gk=\"\n},\n{\n\"path\": \"google.golang.org/genproto\",\n\"version\": \"v0.0.0-20220725144611-272f38e5d71b\",\n\"sum\": \"h1:SfSkJugek6xm7lWywqth4r2iTrYLpD8lOj1nMIIhMNM=\"\n},\n{\n\"path\": \"google.golang.org/grpc\",\n\"version\": \"v1.48.0\",\n\"sum\": \"\"\n},\n{\n\"path\": \"google.golang.org/protobuf\",\n\"version\": \"v1.28.0\",\n\"sum\": \"h1:w43yiav+6bVFTBQFZX0r7ipe9JQ1QsbMgHwbBziscLw=\"\n},\n{\n\"path\": \"gopkg.in/ini.v1\",\n\"version\": \"v1.66.6\",\n\"sum\": \"h1:LATuAqN/shcYAOkv3wl2L4rkaKqkcgTBQjOyYDvcPKI=\"\n},\n{\n\"path\": \"gopkg.in/yaml.v2\",\n\"version\": \"v2.4.0\",\n\"sum\": \"h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\"\n},\n{\n\"path\": \"gopkg.in/yaml.v3\",\n\"version\": \"v3.0.1\",\n\"sum\": \"h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\"\n},\n{\n\"path\": \"nhooyr.io/websocket\",\n\"version\": \"v1.8.6\",\n\"sum\": \"h1:s+C3xAMLwGmlI31Nyn/eAehUlZPwfYZu2JXM621Q5/k=\"\n}\n],\n\"cosmos_sdk_version\": \"v0.45.9\"\n}\n}\n</code></pre> <code>GET /cosmos/base/tendermint/v1beta1/syncing</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries node syncing.  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/base/tendermint/v1beta1/syncing\n</code></pre> Response Example: <pre><code>{\n\"syncing\": false\n}\n</code></pre> <code>GET /cosmos/base/tendermint/v1beta1/validatorsets/latest</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries latest validator-set.  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/base/tendermint/v1beta1/validatorsets/latest\n</code></pre> Response Example: <pre><code>{\n\"block_height\": \"3392\",\n\"validators\": [\n{\n\"address\": \"stvalcons1rzn3d8qmgf7ejsfn77eag5zwjfufmvmu7sn802\",\n\"pub_key\": {\n\"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n\"key\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n},\n\"voting_power\": \"500000\",\n\"proposer_priority\": \"0\"\n}\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"1\"\n}\n}\n</code></pre> <code>GET /cosmos/base/tendermint/v1beta1/validatorsets/{height}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries validator-set at a given height.  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/base/tendermint/v1beta1/validatorsets/1000\n</code></pre> Response Example: <pre><code>{\n\"block_height\": \"1000\",\n\"validators\": [\n{\n\"address\": \"stvalcons1rzn3d8qmgf7ejsfn77eag5zwjfufmvmu7sn802\",\n\"pub_key\": {\n\"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n\"key\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n},\n\"voting_power\": \"500000\",\n\"proposer_priority\": \"0\"\n}\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"1\"\n}\n}\n</code></pre>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#transactions","title":"Transactions","text":"<p>Search, encode, or broadcast transactions.</p> <code>GET /cosmos/tx/v1beta1/txs</code> \u00a0\u00a0\u00a0\u00a0\u00a0 fetches txs by event.  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/tx/v1beta1/txs?events=tx.height=611\n</code></pre> Response Example: <pre><code>{\n\"txs\": [\n{\n\"body\": {\n\"messages\": [\n{\n\"@type\": \"/cosmos.bank.v1beta1.MsgSend\",\n\"from_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"to_address\": \"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\",\n\"amount\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"1000000000\"\n}\n]\n}\n],\n\"memo\": \"\",\n\"timeout_height\": \"0\",\n\"extension_options\": [],\n\"non_critical_extension_options\": []\n},\n\"auth_info\": {\n\"signer_infos\": [\n{\n\"public_key\": {\n\"@type\": \"/stratos.crypto.v1.ethsecp256k1.PubKey\",\n\"key\": \"Agkwb1xacHBqeqGBIqRacXgf0qKTnEBPCEtH2vTE01Ke\"\n},\n\"mode_info\": {\n\"single\": {\n\"mode\": \"SIGN_MODE_DIRECT\"\n}\n},\n\"sequence\": \"3\"\n}\n],\n\"fee\": {\n\"amount\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"200000000000000\"\n}\n],\n\"gas_limit\": \"200000\",\n\"payer\": \"\",\n\"granter\": \"\"\n}\n},\n\"signatures\": [\n\"7FmgB+sTnP5Kk4q121YyVdJJkdEq3Gioydu8fTP+pxoMC/Tl77uJlCRBanSP7jx1xEjwTxt3znGL9KNQLRAA2QA=\"\n]\n}\n],\n\"tx_responses\": [\n{\n\"height\": \"611\",\n\"txhash\": \"AB0EF3761603145EDC1B4121C91B51001249186E1362E7148C82E7DB12F7BDF0\",\n\"codespace\": \"\",\n\"code\": 0,\n\"data\": \"0A1E0A1C2F636F736D6F732E62616E6B2E763162657461312E4D736753656E64\",\n\"raw_log\": \"[{\\\"events\\\":[{\\\"type\\\":\\\"coin_received\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000wei\\\"}]},{\\\"type\\\":\\\"coin_spent\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"spender\\\",\\\"value\\\":\\\"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000wei\\\"}]},{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"/cosmos.bank.v1beta1.MsgSend\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"bank\\\"}]},{\\\"type\\\":\\\"transfer\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"recipient\\\",\\\"value\\\":\\\"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000wei\\\"}]}]}]\",\n\"logs\": [\n{\n\"msg_index\": 0,\n\"log\": \"\",\n\"events\": [\n{\n\"type\": \"coin_received\",\n\"attributes\": [\n{\n\"key\": \"receiver\",\n\"value\": \"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\"\n},\n{\n\"key\": \"amount\",\n\"value\": \"1000000000wei\"\n}\n]\n},\n{\n\"type\": \"coin_spent\",\n\"attributes\": [\n{\n\"key\": \"spender\",\n\"value\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"\n},\n{\n\"key\": \"amount\",\n\"value\": \"1000000000wei\"\n}\n]\n},\n{\n\"type\": \"message\",\n\"attributes\": [\n{\n\"key\": \"action\",\n\"value\": \"/cosmos.bank.v1beta1.MsgSend\"\n},\n{\n\"key\": \"sender\",\n\"value\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"\n},\n{\n\"key\": \"module\",\n\"value\": \"bank\"\n}\n]\n},\n{\n\"type\": \"transfer\",\n\"attributes\": [\n{\n\"key\": \"recipient\",\n\"value\": \"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\"\n},\n{\n\"key\": \"sender\",\n\"value\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"\n},\n{\n\"key\": \"amount\",\n\"value\": \"1000000000wei\"\n}\n]\n}\n]\n}\n],\n\"info\": \"\",\n\"gas_wanted\": \"200000\",\n\"gas_used\": \"88709\",\n\"tx\": {\n\"@type\": \"/cosmos.tx.v1beta1.Tx\",\n\"body\": {\n\"messages\": [\n{\n\"@type\": \"/cosmos.bank.v1beta1.MsgSend\",\n\"from_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"to_address\": \"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\",\n\"amount\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"1000000000\"\n}\n]\n}\n],\n\"memo\": \"\",\n\"timeout_height\": \"0\",\n\"extension_options\": [],\n\"non_critical_extension_options\": []\n},\n\"auth_info\": {\n\"signer_infos\": [\n{\n\"public_key\": {\n\"@type\": \"/stratos.crypto.v1.ethsecp256k1.PubKey\",\n\"key\": \"Agkwb1xacHBqeqGBIqRacXgf0qKTnEBPCEtH2vTE01Ke\"\n},\n\"mode_info\": {\n\"single\": {\n\"mode\": \"SIGN_MODE_DIRECT\"\n}\n},\n\"sequence\": \"3\"\n}\n],\n\"fee\": {\n\"amount\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"200000000000000\"\n}\n],\n\"gas_limit\": \"200000\",\n\"payer\": \"\",\n\"granter\": \"\"\n}\n},\n\"signatures\": [\n\"7FmgB+sTnP5Kk4q121YyVdJJkdEq3Gioydu8fTP+pxoMC/Tl77uJlCRBanSP7jx1xEjwTxt3znGL9KNQLRAA2QA=\"\n]\n},\n\"timestamp\": \"2023-01-11T01:20:11Z\",\n\"events\": [\n{\n\"type\": \"coin_spent\",\n\"attributes\": [\n{\n\"key\": \"c3BlbmRlcg==\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n},\n{\n\"key\": \"YW1vdW50\",\n\"value\": \"MjAwMDAwMDAwMDAwMDAwd2Vp\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"coin_received\",\n\"attributes\": [\n{\n\"key\": \"cmVjZWl2ZXI=\",\n\"value\": \"c3QxN3hwZnZha20yYW1nOTYyeWxzNmY4NHoza2VsbDhjNWx2NWhqMnE=\",\n\"index\": true\n},\n{\n\"key\": \"YW1vdW50\",\n\"value\": \"MjAwMDAwMDAwMDAwMDAwd2Vp\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"transfer\",\n\"attributes\": [\n{\n\"key\": \"cmVjaXBpZW50\",\n\"value\": \"c3QxN3hwZnZha20yYW1nOTYyeWxzNmY4NHoza2VsbDhjNWx2NWhqMnE=\",\n\"index\": true\n},\n{\n\"key\": \"c2VuZGVy\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n},\n{\n\"key\": \"YW1vdW50\",\n\"value\": \"MjAwMDAwMDAwMDAwMDAwd2Vp\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"message\",\n\"attributes\": [\n{\n\"key\": \"c2VuZGVy\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"tx\",\n\"attributes\": [\n{\n\"key\": \"ZmVl\",\n\"value\": \"MjAwMDAwMDAwMDAwMDAwd2Vp\",\n\"index\": true\n},\n{\n\"key\": \"ZmVlX3BheWVy\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"tx\",\n\"attributes\": [\n{\n\"key\": \"YWNjX3NlcQ==\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamgvMw==\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"tx\",\n\"attributes\": [\n{\n\"key\": \"c2lnbmF0dXJl\",\n\"value\": \"N0ZtZ0Irc1RuUDVLazRxMTIxWXlWZEpKa2RFcTNHaW95ZHU4ZlRQK3B4b01DL1RsNzd1SmxDUkJhblNQN2p4MXhFandUeHQzem5HTDlLTlFMUkFBMlFBPQ==\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"message\",\n\"attributes\": [\n{\n\"key\": \"YWN0aW9u\",\n\"value\": \"L2Nvc21vcy5iYW5rLnYxYmV0YTEuTXNnU2VuZA==\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"coin_spent\",\n\"attributes\": [\n{\n\"key\": \"c3BlbmRlcg==\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n},\n{\n\"key\": \"YW1vdW50\",\n\"value\": \"MTAwMDAwMDAwMHdlaQ==\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"coin_received\",\n\"attributes\": [\n{\n\"key\": \"cmVjZWl2ZXI=\",\n\"value\": \"c3Qxc3F6c2s4bXBsdjUyNDhneDZkZGR6enh3ZXF2ZXc4cnRzdDk2Zng=\",\n\"index\": true\n},\n{\n\"key\": \"YW1vdW50\",\n\"value\": \"MTAwMDAwMDAwMHdlaQ==\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"transfer\",\n\"attributes\": [\n{\n\"key\": \"cmVjaXBpZW50\",\n\"value\": \"c3Qxc3F6c2s4bXBsdjUyNDhneDZkZGR6enh3ZXF2ZXc4cnRzdDk2Zng=\",\n\"index\": true\n},\n{\n\"key\": \"c2VuZGVy\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n},\n{\n\"key\": \"YW1vdW50\",\n\"value\": \"MTAwMDAwMDAwMHdlaQ==\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"message\",\n\"attributes\": [\n{\n\"key\": \"c2VuZGVy\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"message\",\n\"attributes\": [\n{\n\"key\": \"bW9kdWxl\",\n\"value\": \"YmFuaw==\",\n\"index\": true\n}\n]\n}\n]\n}\n],\n\"pagination\": {\n\"next_key\": null,\n\"total\": \"1\"\n}\n}\n</code></pre> <p></p> <code>GET /cosmos/tx/v1beta1/txs/{hash}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 fetches a tx by hash.  Request Example: <pre><code>https://rest-tropos.thestratos.org/cosmos/tx/v1beta1/txs/AB0EF3761603145EDC1B4121C91B51001249186E1362E7148C82E7DB12F7BDF0\n</code></pre> Response Example: <pre><code>{\n\"tx\": {\n\"body\": {\n\"messages\": [\n{\n\"@type\": \"/cosmos.bank.v1beta1.MsgSend\",\n\"from_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"to_address\": \"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\",\n\"amount\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"1000000000\"\n}\n]\n}\n],\n\"memo\": \"\",\n\"timeout_height\": \"0\",\n\"extension_options\": [],\n\"non_critical_extension_options\": []\n},\n\"auth_info\": {\n\"signer_infos\": [\n{\n\"public_key\": {\n\"@type\": \"/stratos.crypto.v1.ethsecp256k1.PubKey\",\n\"key\": \"Agkwb1xacHBqeqGBIqRacXgf0qKTnEBPCEtH2vTE01Ke\"\n},\n\"mode_info\": {\n\"single\": {\n\"mode\": \"SIGN_MODE_DIRECT\"\n}\n},\n\"sequence\": \"3\"\n}\n],\n\"fee\": {\n\"amount\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"200000000000000\"\n}\n],\n\"gas_limit\": \"200000\",\n\"payer\": \"\",\n\"granter\": \"\"\n}\n},\n\"signatures\": [\n\"7FmgB+sTnP5Kk4q121YyVdJJkdEq3Gioydu8fTP+pxoMC/Tl77uJlCRBanSP7jx1xEjwTxt3znGL9KNQLRAA2QA=\"\n]\n},\n\"tx_response\": {\n\"height\": \"611\",\n\"txhash\": \"AB0EF3761603145EDC1B4121C91B51001249186E1362E7148C82E7DB12F7BDF0\",\n\"codespace\": \"\",\n\"code\": 0,\n\"data\": \"0A1E0A1C2F636F736D6F732E62616E6B2E763162657461312E4D736753656E64\",\n\"raw_log\": \"[{\\\"events\\\":[{\\\"type\\\":\\\"coin_received\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000wei\\\"}]},{\\\"type\\\":\\\"coin_spent\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"spender\\\",\\\"value\\\":\\\"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000wei\\\"}]},{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"/cosmos.bank.v1beta1.MsgSend\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"bank\\\"}]},{\\\"type\\\":\\\"transfer\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"recipient\\\",\\\"value\\\":\\\"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000wei\\\"}]}]}]\",\n\"logs\": [\n{\n\"msg_index\": 0,\n\"log\": \"\",\n\"events\": [\n{\n\"type\": \"coin_received\",\n\"attributes\": [\n{\n\"key\": \"receiver\",\n\"value\": \"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\"\n},\n{\n\"key\": \"amount\",\n\"value\": \"1000000000wei\"\n}\n]\n},\n{\n\"type\": \"coin_spent\",\n\"attributes\": [\n{\n\"key\": \"spender\",\n\"value\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"\n},\n{\n\"key\": \"amount\",\n\"value\": \"1000000000wei\"\n}\n]\n},\n{\n\"type\": \"message\",\n\"attributes\": [\n{\n\"key\": \"action\",\n\"value\": \"/cosmos.bank.v1beta1.MsgSend\"\n},\n{\n\"key\": \"sender\",\n\"value\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"\n},\n{\n\"key\": \"module\",\n\"value\": \"bank\"\n}\n]\n},\n{\n\"type\": \"transfer\",\n\"attributes\": [\n{\n\"key\": \"recipient\",\n\"value\": \"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\"\n},\n{\n\"key\": \"sender\",\n\"value\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"\n},\n{\n\"key\": \"amount\",\n\"value\": \"1000000000wei\"\n}\n]\n}\n]\n}\n],\n\"info\": \"\",\n\"gas_wanted\": \"200000\",\n\"gas_used\": \"88709\",\n\"tx\": {\n\"@type\": \"/cosmos.tx.v1beta1.Tx\",\n\"body\": {\n\"messages\": [\n{\n\"@type\": \"/cosmos.bank.v1beta1.MsgSend\",\n\"from_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"to_address\": \"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\",\n\"amount\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"1000000000\"\n}\n]\n}\n],\n\"memo\": \"\",\n\"timeout_height\": \"0\",\n\"extension_options\": [],\n\"non_critical_extension_options\": []\n},\n\"auth_info\": {\n\"signer_infos\": [\n{\n\"public_key\": {\n\"@type\": \"/stratos.crypto.v1.ethsecp256k1.PubKey\",\n\"key\": \"Agkwb1xacHBqeqGBIqRacXgf0qKTnEBPCEtH2vTE01Ke\"\n},\n\"mode_info\": {\n\"single\": {\n\"mode\": \"SIGN_MODE_DIRECT\"\n}\n},\n\"sequence\": \"3\"\n}\n],\n\"fee\": {\n\"amount\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"200000000000000\"\n}\n],\n\"gas_limit\": \"200000\",\n\"payer\": \"\",\n\"granter\": \"\"\n}\n},\n\"signatures\": [\n\"7FmgB+sTnP5Kk4q121YyVdJJkdEq3Gioydu8fTP+pxoMC/Tl77uJlCRBanSP7jx1xEjwTxt3znGL9KNQLRAA2QA=\"\n]\n},\n\"timestamp\": \"2023-01-11T01:20:11Z\",\n\"events\": [\n{\n\"type\": \"coin_spent\",\n\"attributes\": [\n{\n\"key\": \"c3BlbmRlcg==\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n},\n{\n\"key\": \"YW1vdW50\",\n\"value\": \"MjAwMDAwMDAwMDAwMDAwd2Vp\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"coin_received\",\n\"attributes\": [\n{\n\"key\": \"cmVjZWl2ZXI=\",\n\"value\": \"c3QxN3hwZnZha20yYW1nOTYyeWxzNmY4NHoza2VsbDhjNWx2NWhqMnE=\",\n\"index\": true\n},\n{\n\"key\": \"YW1vdW50\",\n\"value\": \"MjAwMDAwMDAwMDAwMDAwd2Vp\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"transfer\",\n\"attributes\": [\n{\n\"key\": \"cmVjaXBpZW50\",\n\"value\": \"c3QxN3hwZnZha20yYW1nOTYyeWxzNmY4NHoza2VsbDhjNWx2NWhqMnE=\",\n\"index\": true\n},\n{\n\"key\": \"c2VuZGVy\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n},\n{\n\"key\": \"YW1vdW50\",\n\"value\": \"MjAwMDAwMDAwMDAwMDAwd2Vp\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"message\",\n\"attributes\": [\n{\n\"key\": \"c2VuZGVy\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"tx\",\n\"attributes\": [\n{\n\"key\": \"ZmVl\",\n\"value\": \"MjAwMDAwMDAwMDAwMDAwd2Vp\",\n\"index\": true\n},\n{\n\"key\": \"ZmVlX3BheWVy\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"tx\",\n\"attributes\": [\n{\n\"key\": \"YWNjX3NlcQ==\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamgvMw==\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"tx\",\n\"attributes\": [\n{\n\"key\": \"c2lnbmF0dXJl\",\n\"value\": \"N0ZtZ0Irc1RuUDVLazRxMTIxWXlWZEpKa2RFcTNHaW95ZHU4ZlRQK3B4b01DL1RsNzd1SmxDUkJhblNQN2p4MXhFandUeHQzem5HTDlLTlFMUkFBMlFBPQ==\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"message\",\n\"attributes\": [\n{\n\"key\": \"YWN0aW9u\",\n\"value\": \"L2Nvc21vcy5iYW5rLnYxYmV0YTEuTXNnU2VuZA==\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"coin_spent\",\n\"attributes\": [\n{\n\"key\": \"c3BlbmRlcg==\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n},\n{\n\"key\": \"YW1vdW50\",\n\"value\": \"MTAwMDAwMDAwMHdlaQ==\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"coin_received\",\n\"attributes\": [\n{\n\"key\": \"cmVjZWl2ZXI=\",\n\"value\": \"c3Qxc3F6c2s4bXBsdjUyNDhneDZkZGR6enh3ZXF2ZXc4cnRzdDk2Zng=\",\n\"index\": true\n},\n{\n\"key\": \"YW1vdW50\",\n\"value\": \"MTAwMDAwMDAwMHdlaQ==\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"transfer\",\n\"attributes\": [\n{\n\"key\": \"cmVjaXBpZW50\",\n\"value\": \"c3Qxc3F6c2s4bXBsdjUyNDhneDZkZGR6enh3ZXF2ZXc4cnRzdDk2Zng=\",\n\"index\": true\n},\n{\n\"key\": \"c2VuZGVy\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n},\n{\n\"key\": \"YW1vdW50\",\n\"value\": \"MTAwMDAwMDAwMHdlaQ==\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"message\",\n\"attributes\": [\n{\n\"key\": \"c2VuZGVy\",\n\"value\": \"c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\",\n\"index\": true\n}\n]\n},\n{\n\"type\": \"message\",\n\"attributes\": [\n{\n\"key\": \"bW9kdWxl\",\n\"value\": \"YmFuaw==\",\n\"index\": true\n}\n]\n}\n]\n}\n}\n</code></pre> <p></p>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#register","title":"Register","text":"<code> GET /register/staking</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries total staking state of all registered resource nodes and meta nodes  Request Example: <pre><code>https://rest-tropos.thestratos.org/register/staking\n</code></pre> Response Example: <pre><code>{\n\"height\": \"3573\",\n\"result\": {\n\"resource_nodes_total_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n},\n\"meta_nodes_total_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"100000000000000000000\"\n},\n\"total_bonded_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"100000000000000000000\"\n},\n\"total_unbonded_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n},\n\"total_unbonding_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n}\n}\n}\n</code></pre> <code> GET /register/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries params of registered module  Request Example: <pre><code>https://rest-tropos.thestratos.org/register/params\n</code></pre> Response Example: <pre><code>{\n\"height\": \"3588\",\n\"result\": {\n\"bond_denom\": \"wei\",\n\"unbonding_threashold_time\": \"15552000000000000\",\n\"unbonding_completion_time\": \"1209600000000000\",\n\"max_entries\": 16,\n\"resource_node_reg_enabled\": true\n}\n}\n</code></pre> <code> GET /register/resource-node/{nodeAddress} </code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries info of a registered resource node   Request Example: <pre><code>https://rest-tropos.thestratos.org/register/resource-node/stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\n</code></pre> Response Example: <pre><code>{\n\"height\": \"3712\",\n\"result\": {\n\"network_address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n\"pubkey\": {\n\"type\": \"tendermint/PubKeyEd25519\",\n\"value\": \"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"\n},\n\"suspend\": true,\n\"status\": 3,\n\"tokens\": \"10000000000000000000\",\n\"owner_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"description\": {\n\"moniker\": \"resource-node0\",\n\"identity\": \"\",\n\"website\": \"\",\n\"security_contact\": \"\",\n\"details\": \"\"\n},\n\"creation_time\": \"2023-01-11T17:26:06.410263787Z\",\n\"node_type\": 1\n}\n}\n</code></pre> <code> GET /register/meta-node/{nodeAddress}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 returns info of a registered meta node  Request Example: <pre><code>https://rest-tropos.thestratos.org/register/meta-node/stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\n</code></pre> Response Example: <pre><code>{\n\"height\": \"3731\",\n\"result\": {\n\"network_address\": \"stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\",\n\"pubkey\": {\n\"type\": \"tendermint/PubKeyEd25519\",\n\"value\": \"ltODy8zL5IjJwCutlIexqlBb3GH0+aHZOrpT7f/aKnQ=\"\n},\n\"suspend\": false,\n\"status\": 3,\n\"tokens\": \"100000000000000000000\",\n\"owner_address\": \"st1a8ngk4tjvuxneyuvyuy9nvgehkpfa38hm8mp3x\",\n\"description\": {\n\"moniker\": \"snode://stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64@127.0.0.1:8888\",\n\"identity\": \"\",\n\"website\": \"\",\n\"security_contact\": \"\",\n\"details\": \"\"\n},\n\"creation_time\": \"1970-01-01T00:00:00Z\"\n}\n}\n</code></pre> <code> GET /register/staking/address/{nodeAddress}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries staking info of a specific node  Request Example: <pre><code>https://rest-tropos.thestratos.org/register/staking/address/stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\n</code></pre> Response Example: <pre><code>{\n\"height\": \"3749\",\n\"result\": {\n\"network_address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n\"pubkey\": {\n\"type\": \"tendermint/PubKeyEd25519\",\n\"value\": \"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"\n},\n\"suspend\": true,\n\"status\": 3,\n\"tokens\": \"10000000000000000000\",\n\"owner_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"description\": {\n\"moniker\": \"resource-node0\",\n\"identity\": \"\",\n\"website\": \"\",\n\"security_contact\": \"\",\n\"details\": \"\"\n},\n\"creation_time\": \"2023-01-11T17:26:06.410263787Z\",\n\"node_type\": 1,\n\"bonded_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"10000000000000000000\"\n},\n\"un_bonding_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n},\n\"un_bonded_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n}\n}\n}\n</code></pre> <code> GET /register/staking/owner/{ownerAddress}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all staking info of a specific owner  Request Example: <pre><code>https://rest-tropos.thestratos.org/register/staking/owner/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n</code></pre> Response Example: <pre><code>{\n\"height\": \"3765\",\n\"result\": [\n{\n\"network_address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n\"pubkey\": {\n\"type\": \"tendermint/PubKeyEd25519\",\n\"value\": \"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"\n},\n\"suspend\": true,\n\"status\": 3,\n\"tokens\": \"10000000000000000000\",\n\"owner_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n\"description\": {\n\"moniker\": \"resource-node0\",\n\"identity\": \"\",\n\"website\": \"\",\n\"security_contact\": \"\",\n\"details\": \"\"\n},\n\"creation_time\": \"2023-01-11T17:26:06.410263787Z\",\n\"node_type\": 1,\n\"bonded_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"10000000000000000000\"\n},\n\"un_bonding_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n},\n\"un_bonded_stake\": {\n\"denom\": \"wei\",\n\"amount\": \"0\"\n}\n}\n]\n}\n</code></pre> <code> GET /register/resource-count</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries total number of bonded resource nodes  Request Example: <pre><code>https://rest-tropos.thestratos.org/register/resource-count\n</code></pre> Response Example: <pre><code>{\n\"height\": \"1093\",\n\"result\": \"2\"\n}\n</code></pre> <code> GET /register/meta-count</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries total number of bonded meta nodes  Request Example: <pre><code>https://rest-tropos.thestratos.org/register/meta-count\n</code></pre> Response Example: <pre><code>{\n\"height\": \"1118\",\n\"result\": \"4\"\n}\n</code></pre>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#proof-of-traffic-pot","title":"Proof of Traffic (PoT)","text":"<code> GET /pot/report/epoch/{epoch}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries Pot volume report info at a specific epoch  Request Example: <pre><code>https://rest-tropos.thestratos.org/pot/report/epoch/1\n</code></pre> Response Example: <pre><code>{\n\"height\": \"1358\",\n\"result\": {\n\"reporter\": \"stsds13yakj2xgzzdfcw7kd5gtfcfv2k6sn5eg4vdfem\",\n\"report_reference\": \" report for epoch 1\",\n\"tx_hash\": \"CF404452FF47EDCA99787FD5E79355D7A3BDB0E65E6FE3A54F4914F0E9EE0DF6\"\n}\n}\n</code></pre> <code> GET /pot/rewards/wallet/{walletAddress}[?height={BlockHeight}, optional]</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries owner's Pot rewards info at a specific height  Request Example: <pre><code>https://rest-tropos.thestratos.org/pot/rewards/wallet/st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg/3877\n</code></pre> Response Example: <pre><code>{\n\"height\": \"3877\",\n\"result\": {\n\"wallet_address\": \"st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg\",\n\"MatureTotalReward\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"1696408013053\"\n},\n{\n\"denom\": \"wei\",\n\"amount\": \"3576778\"\n}\n],\n\"ImmatureTotalReward\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"872451398\"\n},\n{\n\"denom\": \"wei\",\n\"amount\": \"278865\"\n}\n]\n}\n}\n</code></pre> <code> GET /pot/rewards/wallet/{walletAddress}[?epoch={epoch}, optional]</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries owner's Pot rewards info at a specific epoch  Request Example: <pre><code>https://rest-tropos.thestratos.org/pot/rewards/wallet/st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg?epoch=50\n</code></pre> Response Example: <pre><code>{\n\"height\": \"4471\",\n\"result\": [\n{\n\"wallet_address\": \"st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg\",\n\"reward_from_mining_pool\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"48000000710\"\n}\n],\n\"reward_from_traffic_pool\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"2918\"\n}\n]\n}\n]\n}\n</code></pre> <code> GET /pot/rewards/wallet/{walletAddress}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries latest owner's Pot rewards info  Request Example: <pre><code>https://rest-tropos.thestratos.org/pot/rewards/wallet/st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg\n</code></pre> Response Example: <pre><code>{\n\"height\": \"3877\",\n\"result\": {\n\"wallet_address\": \"st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg\",\n\"MatureTotalReward\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"1696408013053\"\n},\n{\n\"denom\": \"wei\",\n\"amount\": \"3576778\"\n}\n],\n\"ImmatureTotalReward\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"872451398\"\n},\n{\n\"denom\": \"wei\",\n\"amount\": \"278865\"\n}\n]\n}\n}\n</code></pre> <code> GET /pot/rewards/epoch/{epoch}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all rewards info at a specific epoch  Request Example: <pre><code>https://rest-tropos.thestratos.org/pot/rewards/epoch/1?page=1\n</code></pre> Response Example: <pre><code>{\n\"height\": \"4404\",\n\"result\": [\n{\n\"wallet_address\": \"st19cpsaw2q2dcmc5s7vu09xntqacakfcfdw8dg8m\",\n\"reward_from_mining_pool\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"2003083802\"\n}\n],\n\"reward_from_traffic_pool\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"3863162732376\"\n}\n]\n},\n{\n\"wallet_address\": \"st1xlhwxzexp4fjnf2xt8zsd6jh7y3ap0sgddaf4r\",\n\"reward_from_mining_pool\": [\n{\n\"denom\": \"utros\",\n\"amount\": \"2003083802\"\n}\n],\n\"reward_from_traffic_pool\": [\n{\n\"denom\": \"wei\",\n\"amount\": \"3863162732376\"\n}\n]\n}\n]\n}\n</code></pre> <code>GET /pot/slashing/{walletAddress} [?height={BlockHeight}, optional]</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries owner's Pot slashing info at a specific height  Request Example: <pre><code>https://rest-tropos.thestratos.org/pot/slashing/st1am40hqkacscgwvvsjcxzxk49r8cuamgyrcgppg?height=3877\n</code></pre> Response Example: <pre><code>{\n\"height\": \"3877\",\n\"result\": 0\n}\n</code></pre> <code>GET /pot/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 Query params of POT module  Request Example: <pre><code>https://rest-tropos.thestratos.org/pot/params\n</code></pre> Response Example: <pre><code>{\n\"height\": \"3997\",\n\"result\": {\n\"bond_denom\": \"wei\",\n\"reward_denom\": \"utros\",\n\"mature_epoch\": \"2016\",\n\"mining_reward_params\": [\n{\n\"total_mined_valve_start\": {\n\"denom\": \"utros\",\n\"amount\": \"0\"\n},\n\"total_mined_valve_end\": {\n\"denom\": \"utros\",\n\"amount\": \"16819200000000000\"\n},\n\"mining_reward\": {\n\"denom\": \"utros\",\n\"amount\": \"80000000000\"\n},\n\"block_chain_percentage_in_ten_thousand\": \"2000\",\n\"resource_node_percentage_in_ten_thousand\": \"6000\",\n\"meta_node_percentage_in_ten_thousand\": \"2000\"\n},\n{\n\"total_mined_valve_start\": {\n\"denom\": \"utros\",\n\"amount\": \"16819200000000000\"\n},\n\"total_mined_valve_end\": {\n\"denom\": \"utros\",\n\"amount\": \"25228800000000000\"\n},\n\"mining_reward\": {\n\"denom\": \"utros\",\n\"amount\": \"40000000000\"\n},\n\"block_chain_percentage_in_ten_thousand\": \"2000\",\n\"resource_node_percentage_in_ten_thousand\": \"6200\",\n\"meta_node_percentage_in_ten_thousand\": \"1800\"\n},\n{\n\"total_mined_valve_start\": {\n\"denom\": \"utros\",\n\"amount\": \"25228800000000000\"\n},\n\"total_mined_valve_end\": {\n\"denom\": \"utros\",\n\"amount\": \"29433600000000000\"\n},\n\"mining_reward\": {\n\"denom\": \"utros\",\n\"amount\": \"20000000000\"\n},\n\"block_chain_percentage_in_ten_thousand\": \"2000\",\n\"resource_node_percentage_in_ten_thousand\": \"6400\",\n\"meta_node_percentage_in_ten_thousand\": \"1600\"\n},\n{\n\"total_mined_valve_start\": {\n\"denom\": \"utros\",\n\"amount\": \"29433600000000000\"\n},\n\"total_mined_valve_end\": {\n\"denom\": \"utros\",\n\"amount\": \"31536000000000000\"\n},\n\"mining_reward\": {\n\"denom\": \"utros\",\n\"amount\": \"10000000000\"\n},\n\"block_chain_percentage_in_ten_thousand\": \"2000\",\n\"resource_node_percentage_in_ten_thousand\": \"6600\",\n\"meta_node_percentage_in_ten_thousand\": \"1400\"\n},\n{\n\"total_mined_valve_start\": {\n\"denom\": \"utros\",\n\"amount\": \"31536000000000000\"\n},\n\"total_mined_valve_end\": {\n\"denom\": \"utros\",\n\"amount\": \"32587200000000000\"\n},\n\"mining_reward\": {\n\"denom\": \"utros\",\n\"amount\": \"5000000000\"\n},\n\"block_chain_percentage_in_ten_thousand\": \"2000\",\n\"resource_node_percentage_in_ten_thousand\": \"6800\",\n\"meta_node_percentage_in_ten_thousand\": \"1200\"\n},\n{\n\"total_mined_valve_start\": {\n\"denom\": \"utros\",\n\"amount\": \"32587200000000000\"\n},\n\"total_mined_valve_end\": {\n\"denom\": \"utros\",\n\"amount\": \"40000000000000000\"\n},\n\"mining_reward\": {\n\"denom\": \"utros\",\n\"amount\": \"2500000000\"\n},\n\"block_chain_percentage_in_ten_thousand\": \"2000\",\n\"resource_node_percentage_in_ten_thousand\": \"7000\",\n\"meta_node_percentage_in_ten_thousand\": \"1000\"\n}\n],\n\"community_tax\": \"0.020000000000000000\"\n}\n}\n</code></pre>"},{"location":"docs-validator-node/stratos-chain-rest-apis/#sds","title":"SDS","text":"<code> GET /sds/simulatePrepay/{amtToPrepay}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries a simulated prepay result   Request Example: <pre><code>https://rest-tropos.thestratos.org/sds/simulatePrepay/8000000000\n</code></pre> Response Example: <pre><code>{\n\"height\": \"4036\",\n\"result\": \"8799\"\n}\n</code></pre> <code> GET /sds/nozPrice</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries current nozPrice   Request Example: <pre><code>https://rest-tropos.thestratos.org/sds/nozPrice\n</code></pre> Response Example: <pre><code>{\n\"height\": \"4088\",\n\"result\": \"909090.909090909090909091\"\n}\n</code></pre> <code> GET /sds/nozSupply</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries current nozSupply   Request Example: <pre><code>https://rest-tropos.thestratos.org/sds/nozSupply\n</code></pre> Response Example: <pre><code>{\n\"height\": \"4078\",\n\"result\": {\n\"Remaining\": \"110000000000000\",\n\"Total\": \"110000000000000\"\n}\n}\n</code></pre> <code> GET /sds/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries params of SDS module   Request Example: <pre><code>https://rest-tropos.thestratos.org/sds/params\n</code></pre> Response Example: <pre><code>{\n\"height\": \"4055\",\n\"result\": {\n\"bond_denom\": \"wei\"\n}\n}\n</code></pre>"}]}